[
    {
        "prompt": "This formula determines eligibility based on labor union membership status. If the status is either 'N' (Not a member) or 'X' (default/unknown), the person is considered eligible. Otherwise, they are not eligible. The result is either 'Y' (eligible) or 'N' (not eligible).",
        "formula": "/*=========== DATABASE ITEM DEFAULTS BEGIN =====================*/\nDEFAULT FOR PER_ASG_LABOUR_UNION_MEMBER_FLAG is 'X'\n/*=========== DATABASE ITEM DEFAULTS ENDS======================*/\n/*================ FORMULA SECTION BEGIN =======================*/\nIF ((PER_ASG_LABOUR_UNION_MEMBER_FLAG='N') OR (PER_ASG_LABOUR_UNION_MEMBER_FLAG = 'X')) THEN\nELIGIBLE ='Y'\nElse\n(ELIGIBLE ='N')\nreturn ELIGIBLE\n/*================ FORMULA SECTION END =======================*/"
    },
    {
        "prompt": "This formula checks the status of a process to determine eligibility. If the status is 'COM' (Completed), the person is eligible ('Y'). Otherwise, they are not eligible ('N'). If no status is provided, it defaults to 'REJ' (Rejected), making them ineligible.",
        "formula": "INPUTS ARE STATUS(text)\nDEFAULT FOR L_STATUS IS 'REJ'\nL_STATUS = STATUS\nELIGIBLE = 'N'\nIF L_STATUS = 'COM' THEN\n(\nELIGIBLE = 'Y'\n)\nELSE\n(\nELIGIBLE = 'N'\n)\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on a specific attribute. If the first attribute is 'Change FT/PT Status', the person is eligible ('Y'); otherwise, they are not ('N'). It also logs the status and attribute values for tracking purposes. If no values are provided, defaults are assigned.\n\n\n\n\n\n\n",
        "formula": "INPUTS ARE STATUS(text),\nATTRIBUTE1(text),\nATTRIBUTE2(text),\nATTRIBUTE3(text)\n \n \nDEFAULT FOR L_STATUS IS 'REJ'\nDEFAULT FOR ATTRIBUTE1 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE2 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE3 IS 'XYZ'\n \n \nL_STATUS = STATUS\nL_ATTR1 = ATTRIBUTE1\nL_ATTR2 = ATTRIBUTE2\nL_ATTR3 = ATTRIBUTE3\nL_Log = 0\n \nELIGIBLE = 'N'\n \nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'Status:'|| L_STATUS)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR1 :'|| L_ATTR1)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR2 :'|| L_ATTR2)\n \nIF L_ATTR1 = 'Change FT/PT Status' THEN\n(\nELIGIBLE = 'Y'\n)\n \nELSE\n(\nELIGIBLE = 'N'\n)\n \nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if a personâ€™s assignment exists in a specific value set. It retrieves a person ID based on assignment details and checks if it is valid. If the retrieved ID is not zero, the person is eligible ('Y'); otherwise, they are not ('N'). Defaults are assigned if no input is provided.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'XX'\nDEFAULT FOR PER_ASG_PERSON_NUMBER is 'XX'\nDEFAULT FOR PER_PER_PERSON_NUMBER is 'XX'\nDEFAULT FOR PER_ASG_ASSIGNMENT_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\n\nELIGIBLE = 'N'\nl_asg_id = PER_ASG_ASSIGNMENT_ID\nl_person_id = PER_ASG_PERSON_ID\nl_param = '|=P_PERSON_ID='||to_char(l_person_id)||' |P_ASG_ID='|| to_char(l_asg_id)\nl_orc_person_id = 0\n\nl_orc_person_id = TO_NUMBER(GET_VALUE_SET_VALUE('BKD_ORC_CHK_ASG_FROM_OFFER',l_param))\n\nIF ISNULL(l_orc_person_id) = 'N' THEN\nl_orc_person_id = 0\n\nIF l_orc_person_id <> 0 THEN\nELIGIBLE = 'Y'\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an assignment is eligible based on its type and primary flag. If the assignment type is 'E' (Employee) and it is marked as primary ('Y'), the person is eligible ('Y'); otherwise, they are not ('N'). It also logs key values for debugging purposes. Defaults are assigned if no input is provided.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' ' \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' ' \nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_PEI_INFORMATION1 IS 'N'\nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_PEI_INFORMATION_CATEGORY IS ' '\nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_EFFECTIVE_START_DATE IS '4712/12/31 00:00:00' (date)\nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_EFFECTIVE_END_DATE IS '4712/12/31 00:00:00' (date)\n\nELIGIBLE = 'N' \nl_ft_flag = 'N'\nl_eff_date = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00'(date))\n\n\n\nIF ( PER_ASG_ASSIGNMENT_TYPE = 'E' AND PER_ASG_PRIMARY_FLAG = 'Y') THEN \n\n (ELIGIBLE = 'Y') \n \nl_debug=  ESS_LOG_WRITE('PER_ASG_ASSIGNMENT_TYPE is: '|| PER_ASG_ASSIGNMENT_TYPE)\nl_debug=  ESS_LOG_WRITE('PER_ASG_PRIMARY_FLAG is: '|| PER_ASG_PRIMARY_FLAG)\nl_debug=  ESS_LOG_WRITE('l_eff_date is: '|| to_char(l_eff_date))\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if a job is classified as \"Nonexempt\" under FLSA (Fair Labor Standards Act). If the job status is \"Nonexempt,\" the person is eligible ('Y'); otherwise, they are not ('N'). It also logs the FLSA status and the eligibility result for tracking purposes. If no status is provided, a default value is assigned.",
        "formula": "/*************************************************************************************************\n  FORMULA NAME: BKD_ONB_NONEXEMPT_FF\n  FORMULA TYPE: Participation and Rate Eligibility\n  DESCRIPTION: Checks job overtime states of Nonexempt and returns true\n\n  Name                      Date               Comments\n --------------------------------------------------------------------------------------------------------------------------\nJim Fox               08/01/2024        Initial Version\n********************************************************************************************************/\n\n\nDEFAULT FOR PER_JOBS_LEG_EFF_HRX_US_JOBS_FLSA_STATUS IS '0'\n\nRET = ESS_LOG_WRITE('FLSA Status : ' || PER_JOBS_LEG_EFF_HRX_US_JOBS_FLSA_STATUS)\n\nIF (PER_JOBS_LEG_EFF_HRX_US_JOBS_FLSA_STATUS = 'Nonexempt')\nTHEN\n(\nELIGIBLE = 'Y'\nRET = ESS_LOG_WRITE('Success: ' || ELIGIBLE)\n)\nELSE\n(\nELIGIBLE = 'N'\nRET = ESS_LOG_WRITE('Fail: ' || ELIGIBLE)\n)\n\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if a job is classified as \"Nonexempt\" and located in California. It retrieves the FLSA status based on the job ID. If the status is \"Nonexempt\" and the job location or additional region is \"CA,\" the person is eligible ('Y'); otherwise, they are not ('N'). Defaults are assigned if no input is provided.",
        "formula": "DEFAULT FOR PER_ASG_JOB_ID IS 0\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nL_FLSA = ' '\nL_JOB_ID = PER_ASG_JOB_ID\nELIGIBLE = 'N'\n\nL_FLSA= BEN_FN_GET_CHAR_VALUE('PER_JOB_LEG_F','INFORMATION1','JOB_ID',TO_CHAR(L_JOB_ID),'INFORMATION_CATEGORY','HRX_US_JOBS')\nIF \n(UPPER(L_FLSA) = 'NONEXEMPT') AND PER_ASG_ADD_REGION2 = 'CA'  THEN\nELIGIBLE = 'Y'\nElse IF\n(UPPER(L_FLSA) = 'NONEXEMPT') AND PER_ASG_LOC_REGION2 = 'CA' THEN\nELIGIBLE = 'Y'\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks if the recruitment type is either \"Community Support Center\" or \"Confidential.\" If it matches either, the person is eligible ('Y'); otherwise, they are not ('N'). If no value is provided, a default is assigned.",
        "formula": "/*************************************************************************************************\n  FORMULA NAME: BKD_ONB_NONEXEMPT_FF\n  FORMULA TYPE: Participation and Rate Eligibility\n  DESCRIPTION: Checks if the recruitment type is CSC of Confidential\n\n  Name                      Date               Comments\n --------------------------------------------------------------------------------------------------------------------------\nRamprasad Rachamadugu            11/21/2024        Initial Version\n********************************************************************************************************/\n\n\nDEFAULT FOR PER_ASG_JOB_ATTRIBUTE8 IS 'XX'\nELIGIBLE = 'N'\n\nIF PER_ASG_JOB_ATTRIBUTE8 = 'Community Support Center' OR PER_ASG_JOB_ATTRIBUTE8 = 'Confidential' THEN\nELIGIBLE = 'Y'\n\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if the recruitment type is either \"Field Leadership\" or \"Community.\" If it matches either, the person is eligible ('Y'); otherwise, they are not ('N'). If no value is provided, a default is assigned.",
        "formula": "/*************************************************************************************************\n  FORMULA NAME: BKD_ONB_NONEXEMPT_FF\n  FORMULA TYPE: Participation and Rate Eligibility\n  DESCRIPTION: Checks if the recruitment type is Field Leadership and Community\n\n  Name                      Date               Comments\n --------------------------------------------------------------------------------------------------------------------------\nRamprasad Rachamadugu            11/21/2024        Initial Version\n********************************************************************************************************/\n\nDEFAULT FOR PER_ASG_JOB_ATTRIBUTE8 IS 'XX'\nELIGIBLE = 'N'\n\nIF PER_ASG_JOB_ATTRIBUTE8 = 'Field Leadership' OR PER_ASG_JOB_ATTRIBUTE8 = 'Community' THEN\nELIGIBLE = 'Y'\n\n\n\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if the status is 'COM' (Completed). If it is, the person is eligible ('Y'); otherwise, they are not ('N'). If no status is provided, it defaults to 'REJ' (Rejected), making them ineligible.\n\n\n\n\n\n\n",
        "formula": "INPUTS ARE STATUS(text)\nDEFAULT FOR L_STATUS IS 'REJ'\nL_STATUS = STATUS\nELIGIBLE = 'N'\nIF L_STATUS = 'COM' THEN\n(\nELIGIBLE = 'Y'\n)\nELSE\n(\nELIGIBLE = 'N'\n)\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks salary adjustments for eligibility. If the salary adjustment percentage is 15% or more and was made within the last 180 days, eligibility is granted. Additionally, if the salary amount exceeds the maximum allowed salary grade, eligibility is also granted. It logs the number of days since the salary change, the salary amount, and the maximum salary grade for reference.",
        "formula": "DEFAULT FOR CMP_ASSIGNMENT_SALARY_ADJUSTMENT_PERCENTAGE is 0\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_FROM\tIS '1951/01/01'(DATE)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_ACTION_REASON_NAME  is 'XX'\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_AMOUNT is 0\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_GRADE_MAX_VALUE is 0\n\n\nl_Salary_Amount = CMP_ASSIGNMENT_SALARY_AMOUNT\nl_Max_Amount = CMP_ASSIGNMENT_SALARY_GRADE_MAX_VALUE \nEligible = 'N'\nL_SYSDATE = GET_CURRENT_DATE()\nL_CHANGE_REASON = CMP_ASSIGNMENT_SALARY_ACTION_REASON_NAME\n\n\ndays_count = days_between(L_SYSDATE,CMP_ASSIGNMENT_SALARY_DATE_FROM )+ 1\n\n\nIf ((CMP_ASSIGNMENT_SALARY_ADJUSTMENT_PERCENTAGE >= 15) AND (days_count <180))\nThen\n(Eligible = 'Y')\n\nIf l_Salary_Amount > l_Max_Amount\nThen \n(\nEligible = 'Y'\n)\nRET = SET_LOG('Days count is '+ TO_CHAR(days_count ))\nRET = SET_LOG('Salary amount is '+ TO_CHAR(l_Salary_Amount))\nRET = SET_LOG('Max salary is '+ TO_CHAR(l_Max_Amount))\n\nReturn Eligible"
    },
    {
        "prompt": "This formula checks if a transfer has occurred. It logs the current status and attributes for reference. If the first attribute indicates a \"Transfer,\" eligibility is granted. Otherwise, eligibility remains denied.",
        "formula": "INPUTS ARE STATUS(text),\nATTRIBUTE1(text),\nATTRIBUTE2(text),\nATTRIBUTE3(text)\n \n \nDEFAULT FOR L_STATUS IS 'REJ'\nDEFAULT FOR ATTRIBUTE1 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE2 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE3 IS 'XYZ'\n \n \nL_STATUS = STATUS\nL_ATTR1 = ATTRIBUTE1\nL_ATTR2 = ATTRIBUTE2\nL_ATTR3 = ATTRIBUTE3\nL_Log = 0\n \nELIGIBLE = 'N'\n \nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'Status:'|| L_STATUS)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR1 :'|| L_ATTR1)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR2 :'|| L_ATTR2)\n \nIF L_ATTR1 = 'Transfer' THEN\n(\nELIGIBLE = 'Y'\n)\n \nELSE\n(\nELIGIBLE = 'N'\n)\n \nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an assignment is both of type \"E\" and marked as primary. If both conditions are met, eligibility is granted. Otherwise, eligibility remains denied.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' ' \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' ' \n\nELIGIBLE = 'N' \nl_ft_flag = 'N'\nl_eff_date = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00'(date))\n\n\n\nIF ( PER_ASG_ASSIGNMENT_TYPE = 'E' AND PER_ASG_PRIMARY_FLAG = 'Y') THEN \n\n (ELIGIBLE = 'Y') \n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an assignment is of type \"E\" and marked as primary while also validating if there is additional person information marked as \"Y\" within a valid effective date range. If all conditions are met, eligibility is granted. Otherwise, eligibility remains denied.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' ' \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' ' \nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_PEI_INFORMATION1 IS 'N'\nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_PEI_INFORMATION_CATEGORY IS ' '\nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_EFFECTIVE_START_DATE IS '4712/12/31 00:00:00' (date)\nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_EFFECTIVE_END_DATE IS '4712/12/31 00:00:00' (date)\n\nELIGIBLE = 'N' \nl_ft_flag = 'N'\nl_eff_date = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00'(date))\n\ni=1\n   WHILE PER_PERSON_EIT_ALL_PEI_INFORMATION1.EXISTS(i) LOOP\n   (\nl_debug=  ESS_LOG_WRITE('Inside Loop')\nl_debug=  ESS_LOG_WRITE('PER_PERSON_EIT_ALL_PEI_INFORMATION_CATEGORY'|| PER_PERSON_EIT_ALL_PEI_INFORMATION_CATEGORY[i])\nl_debug=  ESS_LOG_WRITE('PER_PERSON_EIT_ALL_EFFECTIVE_START_DATE'|| to_char(PER_PERSON_EIT_ALL_EFFECTIVE_START_DATE[i]))\nl_debug=  ESS_LOG_WRITE('PER_PERSON_EIT_ALL_EFFECTIVE_END_DATE'|| to_char(PER_PERSON_EIT_ALL_EFFECTIVE_END_DATE[i]))\nl_debug=  ESS_LOG_WRITE('PER_PERSON_EIT_ALL_PEI_INFORMATION1'|| PER_PERSON_EIT_ALL_PEI_INFORMATION1[i])\n\n\tIF PER_PERSON_EIT_ALL_PEI_INFORMATION_CATEGORY[i] = 'Person Additional Info' AND l_eff_date >= PER_PERSON_EIT_ALL_EFFECTIVE_START_DATE[i]\n\tAND l_eff_date <= PER_PERSON_EIT_ALL_EFFECTIVE_END_DATE[i] THEN\n\t(\n\t\tl_ft_flag = PER_PERSON_EIT_ALL_PEI_INFORMATION1[i]\n\t\tEXIT\n\t)\n\ti = i + 1\n   )\n\n\nIF ( PER_ASG_ASSIGNMENT_TYPE = 'E' AND PER_ASG_PRIMARY_FLAG = 'Y' AND l_ft_flag = 'Y' ) THEN \n\n (ELIGIBLE = 'Y') \n \nl_debug=  ESS_LOG_WRITE('PER_ASG_ASSIGNMENT_TYPE is: '|| PER_ASG_ASSIGNMENT_TYPE)\nl_debug=  ESS_LOG_WRITE('PER_ASG_PRIMARY_FLAG is: '|| PER_ASG_PRIMARY_FLAG)\nl_debug=  ESS_LOG_WRITE('l_ft_flag is: '|| l_ft_flag)\nl_debug=  ESS_LOG_WRITE('l_eff_date is: '|| to_char(l_eff_date))\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on assignment type, primary flag, work-from-home status, employer name, and location. If the assignment is of type \"E,\" marked as primary, and lacks specific additional person information, it checks if the employer is \"Brookdale Employee Services Corporate LLC\" with work-from-home status in Nevada or if the employer is different and the location is Nevada. If either condition is met, eligibility is granted.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' ' \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' ' \nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_PEI_INFORMATION1 IS 'N'\nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_PEI_INFORMATION_CATEGORY IS ' '\nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_EFFECTIVE_START_DATE IS '4712/12/31 00:00:00' (date)\nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_EFFECTIVE_END_DATE IS '4712/12/31 00:00:00' (date)\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\nDEFAULT FOR PER_ASG_ORG_LEGAL_EMPLOYER_NAME IS 'XX'\nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\n\nELIGIBLE = 'N' \nl_ft_flag = 'Y'\nl_eff_date = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00'(date))\nl_le_name = PER_ASG_ORG_LEGAL_EMPLOYER_NAME\nl_work_from_home = PER_ASG_WORK_AT_HOME\n\ni=1\n   WHILE PER_PERSON_EIT_ALL_PEI_INFORMATION1.EXISTS(i) LOOP\n   (\n\tIF PER_PERSON_EIT_ALL_PEI_INFORMATION_CATEGORY[i] = 'Person Additional Info' AND l_eff_date >= PER_PERSON_EIT_ALL_EFFECTIVE_START_DATE[i]\n\tAND l_eff_date <= PER_PERSON_EIT_ALL_EFFECTIVE_END_DATE[i] THEN\n\t(\n\t\tl_ft_flag = PER_PERSON_EIT_ALL_PEI_INFORMATION1[i]\n\t\tEXIT\n\t)\n\ti = i + 1\n   )\n\nIF ( PER_ASG_ASSIGNMENT_TYPE = 'E' AND PER_ASG_PRIMARY_FLAG = 'Y' AND l_ft_flag = 'N' ) THEN \n (\n \n /* Begin logic to get the row and column names for calling the UDT */\n\tIF l_le_name = 'Brookdale Employee Services Corporate LLC' AND l_work_from_home = 'Y' AND PER_ASG_ADD_REGION2 = 'NV' THEN\n\t(\n\t\tELIGIBLE = 'Y'\n\t)\n\t\n\tIF l_le_name <> 'Brookdale Employee Services Corporate LLC' AND PER_ASG_LOC_REGION2 = 'NV' THEN\n\t(\n\t\tELIGIBLE = 'Y'\n\t)\n\t\n)\t\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee's assignment type is \"E\" (possibly indicating an employee status) and if their assignment is marked as primary. If both conditions are met, the employee is eligible. Otherwise, they remain ineligible.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' ' \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' ' \n\nELIGIBLE = 'N' \nl_ft_flag = 'N'\nl_eff_date = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00'(date))\n\n\n\nIF ( PER_ASG_ASSIGNMENT_TYPE = 'E' AND PER_ASG_PRIMARY_FLAG = 'Y') THEN \n\n (ELIGIBLE = 'Y') \n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on assignment type and primary flag status. It sets a default ineligible status and logs the effective date. If the assignment type is \"E\" and the primary flag is \"Y,\" the eligibility status is updated to \"Y.\" Debug logs capture key values for verification.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' ' \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' ' \nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_PEI_INFORMATION1 IS 'N'\nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_PEI_INFORMATION_CATEGORY IS ' '\nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_EFFECTIVE_START_DATE IS '4712/12/31 00:00:00' (date)\nDEFAULT_DATA_VALUE FOR PER_PERSON_EIT_ALL_EFFECTIVE_END_DATE IS '4712/12/31 00:00:00' (date)\n\nELIGIBLE = 'N' \nl_ft_flag = 'N'\nl_eff_date = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00'(date))\n\n\n\nIF ( PER_ASG_ASSIGNMENT_TYPE = 'E' AND PER_ASG_PRIMARY_FLAG = 'Y') THEN \n\n (ELIGIBLE = 'Y') \n \nl_debug=  ESS_LOG_WRITE('PER_ASG_ASSIGNMENT_TYPE is: '|| PER_ASG_ASSIGNMENT_TYPE)\nl_debug=  ESS_LOG_WRITE('PER_ASG_PRIMARY_FLAG is: '|| PER_ASG_PRIMARY_FLAG)\nl_debug=  ESS_LOG_WRITE('l_eff_date is: '|| to_char(l_eff_date))\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on the value of ATTRIBUTE1. It initializes default values for status and attributes, then logs their values for tracking. If ATTRIBUTE1 equals 'Suspension/Recall', eligibility is set to 'Y'; otherwise, it remains 'N'. Debug logs ensure visibility into the decision process.\n\n\n\n\n\n\n",
        "formula": "INPUTS ARE STATUS(text),\nATTRIBUTE1(text),\nATTRIBUTE2(text),\nATTRIBUTE3(text)\n \n \nDEFAULT FOR L_STATUS IS 'REJ'\nDEFAULT FOR ATTRIBUTE1 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE2 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE3 IS 'XYZ'\n \n \nL_STATUS = STATUS\nL_ATTR1 = ATTRIBUTE1\nL_ATTR2 = ATTRIBUTE2\nL_ATTR3 = ATTRIBUTE3\nL_Log = 0\n \nELIGIBLE = 'N'\n \nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'Status:'|| L_STATUS)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR1 :'|| L_ATTR1)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR2 :'|| L_ATTR2)\n \nIF L_ATTR1 = 'Suspension/Recall' THEN\n(\nELIGIBLE = 'Y'\n)\n \nELSE\n(\nELIGIBLE = 'N'\n)\n \nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on STATUS, ATTRIBUTE1, and ATTRIBUTE2. If STATUS is 'COM' and ATTRIBUTE1 is 'Job Change', 'Promotion', or 'Transfer' with ATTRIBUTE2 set to 'Yes', eligibility is 'Y'. Otherwise, it remains 'N'.",
        "formula": "INPUTS ARE STATUS(text),\nATTRIBUTE1(text),\nATTRIBUTE2(text),\nATTRIBUTE3(text)\n\n\nDEFAULT FOR L_STATUS IS 'REJ'\nDEFAULT FOR ATTRIBUTE1 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE2 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE3 IS 'XYZ'\n\n\n\nL_STATUS = STATUS\nL_ATTR1 = ATTRIBUTE1\nL_ATTR2 = ATTRIBUTE2\nL_ATTR3 = ATTRIBUTE3\n\nELIGIBLE = 'N'\n\nIF  L_STATUS = 'COM' AND L_ATTR1 = 'Job Change' and L_ATTR2 = 'Yes' THEN\n(\nELIGIBLE = 'Y'\n)\nELSE IF  L_STATUS = 'COM' AND L_ATTR1 = 'Promotion' and L_ATTR2 = 'Yes' THEN\n(\nELIGIBLE = 'Y'\n)\nELSE IF  L_STATUS = 'COM' AND L_ATTR1 = 'Transfer' and L_ATTR2 = 'Yes' THEN\n(\nELIGIBLE = 'Y'\n)\nELSE\n(\nELIGIBLE = 'N'\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on work-from-home status and location. If an employee works from home and their additional region is Alabama, they are eligible. If an employee does not work from home but their location region is Alabama, they are also eligible. In all other cases, they are not eligible.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'AL' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'AL' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee's location region is Alabama. If the location is Alabama, the employee is eligible. If the location is not Alabama, the employee is not eligible.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' ' \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\nDEFAULT FOR PER_ASG_WORK_AT_HOME is 'N'\nDEFAULT FOR PER_ASG_LOC_REGION2 is 'XX'\nDEFAULT FOR PER_ASG_ADD_REGION2 is 'XX'\n\nELIGIBLE = 'N' \n\nIF (PER_ASG_LOC_REGION2 = 'AL') THEN\nELIGIBLE = 'Y'\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on work-from-home status and location. If an employee works from home and their additional region is Delaware, they are eligible. If they do not work from home but their location region is Delaware, they are also eligible. Otherwise, they are not eligible.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'DE' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'DE' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on work-from-home status and location. If an employee works from home and their additional region is Delaware, they are eligible. If they do not work from home but their location region is Delaware, they are also eligible. Otherwise, they are not eligible.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'AR' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'AR' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their work-from-home status and location. If they work from home and their additional region is Arizona, they are eligible. If they do not work from home but their location region is Arizona, they are also eligible. Otherwise, they are not eligible.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'AZ' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'AZ' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their work-from-home status and location. An employee is eligible if they work from home and their additional region is California. They are also eligible if they do not work from home but their location region is California. If neither condition is met, they are not eligible.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'CA' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'CA' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work-from-home status and location. An employee qualifies if they work from home and their additional region is Colorado. They are also eligible if they do not work from home but their location region is Colorado. If neither condition is met, they are not eligible.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'CO' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'CO' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work-from-home status and location. An employee qualifies if they work from home and their additional region is Connecticut. They are also eligible if their location region is marked as \"Y.\" If neither condition is met, they are not eligible.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' ' \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\nDEFAULT FOR PER_ASG_WORK_AT_HOME is 'N'\nDEFAULT FOR PER_ASG_LOC_REGION2 is 'XX'\nDEFAULT FOR PER_ASG_ADD_REGION2 is 'XX'\n\nELIGIBLE = 'N' \n\n\nIF PER_ASG_WORK_AT_HOME = 'Y' and PER_ASG_ADD_REGION2 = 'CT' THEN\nELIGIBLE = 'Y'\n\nIF PER_ASG_LOC_REGION2 = 'Y' THEN\nELIGIBLE = 'Y'\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their work-from-home status and location. An employee qualifies if they work from home and their additional region is Georgia. They are also eligible if they do not work from home but their location region is Georgia. If neither condition is met, they are not eligible.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'GA' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'GA' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work-from-home status and location. An employee qualifies if they work from home and their additional region is Idaho. They are also eligible if they do not work from home but their location region is Idaho. If neither condition is met, they are not eligible.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'ID' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'ID' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their work-from-home status and location. An employee is eligible if they work from home and their additional region is Illinois. They are also eligible if they do not work from home but their location region is Illinois. If neither condition is met, they are not eligible.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'IL' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'IL' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on work-from-home status and location. An employee is eligible if they work from home and their additional region is Indiana. They are also eligible if they do not work from home but their location region is Indiana. If neither condition is met, they are not eligible.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'IN' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'IN' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their status and job change type. Eligibility is granted only if the status is \"COM\" and the first attribute indicates a \"Pay Change with Job Change.\" Otherwise, the employee is not eligible. Additionally, it logs values for debugging purposes.",
        "formula": "INPUTS ARE STATUS(text),\nATTRIBUTE1(text),\nATTRIBUTE2(text),\nATTRIBUTE3(text)\n\n\nDEFAULT FOR L_STATUS IS 'REJ'\nDEFAULT FOR ATTRIBUTE1 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE2 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE3 IS 'XYZ'\n\n\n\nL_STATUS = STATUS\nL_ATTR1 = ATTRIBUTE1\nL_ATTR2 = ATTRIBUTE2\nL_ATTR3 = ATTRIBUTE3\nL_Log = 0\n\nELIGIBLE = 'N'\n\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'Status:'|| L_STATUS)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR1 :'|| L_ATTR1)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR2 :'|| L_ATTR2)\n\nIF L_STATUS = 'COM' AND (L_ATTR1 = 'Pay Change with Job Change') THEN\n(\nELIGIBLE = 'Y'\n)\nELSE\n(\nELIGIBLE = 'N'\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if a given balance name matches specific incentive or bonus plans. If the balance name corresponds to any of the listed management or sales incentive plans, including retroactive versions, the employee is marked as eligible. Otherwise, they are not eligible.",
        "formula": "DEFAULT FOR GLB_PAY_BAL_EXCP_BAL_BALANCE_NAME is 'XX'\nEligible = 'N'\n\n\nIf ((GLB_PAY_BAL_EXCP_BAL_BALANCE_NAME = 'Management Incentive Plan' ) OR (GLB_PAY_BAL_EXCP_BAL_BALANCE_NAME = 'Community Mgmnt Incentive Plan' ) OR (GLB_PAY_BAL_EXCP_BAL_BALANCE_NAME = 'Sales Management Bonus' ) OR (GLB_PAY_BAL_EXCP_BAL_BALANCE_NAME = 'Management Incentive Plan Retroactive' ) OR (GLB_PAY_BAL_EXCP_BAL_BALANCE_NAME = 'Sales Management Bonus Retroactive' ) OR \n(GLB_PAY_BAL_EXCP_BAL_BALANCE_NAME = 'Community Mgmnt Incentive Plan Retroactive' ) )\nThen\n\n(Eligible = 'Y')\n\nReturn Eligible"
    },
    {
        "prompt": "This formula checks if an employeeâ€™s seniority date is classified under a specific code. If it is, the seniority date is recorded and compared against a cutoff date. If the employee has more than 116 days of service before the cutoff, they are marked as eligible. Otherwise, they are not eligible.\n\n\n\n\n\n\n",
        "formula": "DEFAULT_DATA_VALUE FOR PER_SENDT_F_V3_LEVEL_OBJECT_ID is -1\nDEFAULT_DATA_VALUE FOR PER_SENDT_F_V3_SENIORITY_DATE is '1901/01/01' (date)\nDEFAULT_DATA_VALUE FOR PER_SENDT_F_V3_SENIORITY_DATE_CODE is ' '\n\nl_index = PER_SENDT_F_V3_SENIORITY_DATE.FIRST(-1)\nl_benefit_service_dt='1951/12/31 00:00:00'(date)\nl_cutoff_dt='2024/03/26 00:00:00'(date)\nl_final_date= 'XX'\nL_SYSDATE = GET_CURRENT_DATE()\nELIGIBLE = 'N'\nIF (PER_SENDT_F_V3_SENIORITY_DATE_CODE[l_index]='BKD_Core_HR_BSD' )\n\nTHEN\n\n(\nl_benefit_service_dt = ( PER_SENDT_F_V3_SENIORITY_DATE[l_index] )\nl_final_date = TO_CHAR(l_benefit_service_dt,'mm/dd/yyyy')\n\n)\ndays_count = days_between(l_cutoff_dt,l_benefit_service_dt )+ 1\n\nif (days_count > 116)\nthen ELIGIBLE = 'Y'\n\n\n\n \nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks an employeeâ€™s status and attributes to determine eligibility. If the status is \"COM\" and the attribute indicates a \"Promotion,\" they are eligible. Alternatively, if the status is \"COM,\" the attribute is \"Job Change,\" and another attribute is \"No,\" they are also eligible. Otherwise, they are not eligible.",
        "formula": "INPUTS ARE STATUS(text),\nATTRIBUTE1(text),\nATTRIBUTE2(text),\nATTRIBUTE3(text)\n\n\nDEFAULT FOR L_STATUS IS 'REJ'\nDEFAULT FOR ATTRIBUTE1 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE2 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE3 IS 'XYZ'\n\n\n\nL_STATUS = STATUS\nL_ATTR1 = ATTRIBUTE1\nL_ATTR2 = ATTRIBUTE2\nL_ATTR3 = ATTRIBUTE3\nL_Log = 0\n\nELIGIBLE = 'N'\n\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'Status:'|| L_STATUS)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR1 :'|| L_ATTR1)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR2 :'|| L_ATTR2)\n\nIF L_STATUS = 'COM' AND ( \nL_ATTR1 = 'Promotion'\n) THEN\n(\nELIGIBLE = 'Y'\n)\nELSE IF  L_STATUS = 'COM' AND L_ATTR1 = 'Job Change' and L_ATTR2 = 'No' THEN\n(\nELIGIBLE = 'Y'\n)\nELSE\n(\nELIGIBLE = 'N'\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on an employee's status and a specific attribute. If the status is \"COM\" and the second attribute is \"BKD_ADD_ASG,\" the employee is eligible. Otherwise, they are not eligible.",
        "formula": "INPUTS ARE STATUS(text),\nATTRIBUTE1(text),\nATTRIBUTE2(text),\nATTRIBUTE3(text)\n\n\nDEFAULT FOR L_STATUS IS 'REJ'\nDEFAULT FOR ATTRIBUTE1 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE2 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE3 IS 'XYZ'\n\n\n\nL_STATUS = STATUS\nL_ATTR1 = ATTRIBUTE1\nL_ATTR2 = ATTRIBUTE2\nL_ATTR3 = ATTRIBUTE3\nL_Log = 0\n\nELIGIBLE = 'N'\n\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'Status:'|| L_STATUS)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR1 :'|| L_ATTR1)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR2 :'|| L_ATTR2)\n\nIF L_STATUS = 'COM' AND (L_ATTR2 = 'BKD_ADD_ASG') THEN\n(\nELIGIBLE = 'Y'\n)\nELSE\n(\nELIGIBLE = 'N'\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee's status is \"COM\" and if the second attribute is \"BKD_TICKET.\" If both conditions are met, the employee is eligible; otherwise, they are not eligible.",
        "formula": "DEFAULT FOR L_STATUS IS 'REJ'\nDEFAULT FOR ATTRIBUTE1 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE2 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE3 IS 'XYZ'\n\nINPUTS ARE STATUS(text),\nATTRIBUTE1(text),\nATTRIBUTE2(text),\nATTRIBUTE3(text)\n\n\nL_STATUS = STATUS\nL_ATTR1 = ATTRIBUTE1\nL_ATTR2 = ATTRIBUTE2\nL_ATTR3 = ATTRIBUTE3\nL_Log = 0\n\nELIGIBLE = 'N'\n\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'Status:'|| L_STATUS)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR1 :'|| L_ATTR1)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR2 :'|| L_ATTR2)\n\nIF L_STATUS = 'COM' AND (L_ATTR2 = 'BKD_TICKET') THEN\n(\nELIGIBLE = 'Y'\n)\nELSE\n(\nELIGIBLE = 'N'\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if at least 90 days have passed since an employee's latest rehire date. If 90 or more days have passed, the employee is eligible; otherwise, they are not eligible.",
        "formula": "DEFAULT FOR PER_PER_LATEST_REHIRE_DATE IS '4712/12/31 00:00:00' (date)\n \nTotal_days = 0\nELIGIBLE= 'N'\neffdate = get_context(effective_date, '0001/01/01 00:00:00'(date))\nTotal_days= DAYS_BETWEEN(effdate, PER_PER_LATEST_REHIRE_DATE) + 1\n \n    IF Total_days >= 90 THEN\n    (\n        ELIGIBLE = 'Y'\n    )\n    return ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on work location. An employee is eligible if they either work from home in Florida or are physically assigned to a location in Florida.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'FL' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'FL' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their work location. Employees qualify if they either work from home in Kansas or are physically assigned to a location in Kansas.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'KS' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'KS' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work location. Employees qualify if they either work from home in region 'FY' or are physically assigned to a location in 'FY'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'FY' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'FY' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their work location. Eligibility is granted if the employee either works from home in region 'LA' or is physically assigned to a location in 'LA'.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'LA' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'LA' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines employee eligibility based on their work location. An employee is eligible if they either work from home in region 'MA' or are physically assigned to a location in 'MA'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'MA' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'MA' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines employee eligibility based on their work location. An employee is eligible if they either work from home in region 'MD' or are physically assigned to a location in 'MD'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'MD' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'MD' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines employee eligibility based on their work location. An employee is eligible if they either work from home in region 'MI' or are physically assigned to a location in 'MI'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'MI' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'MI' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their work location. An employee qualifies if they either work from home in region 'MN' or are assigned to a physical location in 'MN'.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'MN' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'MN' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on an employee's work location. The employee is eligible if they either work from home in region 'MO' or are assigned to a physical location in 'MO'.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'MO' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'MO' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on an employee's work location. The employee is eligible if they either work from home in region 'MS' or are assigned to a physical location in 'MS'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'MS' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'MS' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on an employee's work location. The employee is eligible if they either work from home in region 'MT' or are assigned to a physical location in 'MT'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'MT' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'MT' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their work location. An employee is eligible if they either work from home in region 'NC' or are assigned to a physical location in 'NC'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'NC' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'NC' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines employee eligibility based on their work location. An employee is eligible if they either work from home in region 'NH' or are assigned to a physical location in 'NH'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'NH' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'NH' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their work location. An employee is eligible if they either work from home in New Jersey ('NJ') or are assigned to a physical work location in 'NJ'.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'NJ' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'NJ' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines employee eligibility based on their work location. An employee is eligible if they either work from home in New Mexico ('NM') or are assigned to a physical work location in 'NM'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'NM' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'NM' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their work location. An employee qualifies if they either work from home in Nevada ('NV') or are assigned to a physical work location in 'NV'.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'NV' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'NV' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work location. An employee qualifies if they either work from home in New York ('NY') or are assigned to a physical work location in 'NY'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'NY' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'NY' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work location. An employee qualifies if they either work from home in Ohio ('OH') or are assigned to a physical work location in 'OH'.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'OH' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'OH' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work location. An employee qualifies if they either work from home in Oklahoma ('OK') or are assigned to a physical work location in 'OK'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'OK' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'OK' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their work location. An employee qualifies if they either work from home in Oregon ('OR') or are assigned to a physical work location in 'OR'.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'OR' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'OR' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work location. An employee qualifies if they either work from home in Pennsylvania ('PA') or are assigned to a physical work location in 'PA'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'PA' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'PA' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work location. An employee qualifies if they either work from home in Rhode Island ('RI') or are assigned to a physical work location in 'RI'.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'RI' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'RI' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their work location. An employee qualifies if they either work from home in South Carolina ('SC') or are assigned to a physical work location in 'SC'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'SC' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'SC' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work location. An employee qualifies if they either work from home in Tennessee ('TN') or are assigned to a physical work location in 'TN'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'TN' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'TN' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work location. An employee qualifies if they either work from home in Texas ('TX') or are assigned to a physical work location in 'TX'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'TX' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'TX' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work location. An employee qualifies if they either work from home in Virginia ('VA') or are assigned to a physical work location in 'VA'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'VA' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'VA' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work location. An employee qualifies if they either work from home in Vermont ('VT') or are assigned to a physical work location in 'VT'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'VT' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'VT' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work location. An employee qualifies if they either work from home in Washington ('WA') or are assigned to a physical work location in 'WA'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'WA' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'WA' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work location. An employee qualifies if they either work from home in Wisconsin ('WI') or are assigned to a physical work location in 'WI'.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'WI' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'WI' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their work location. An employee is eligible if they either work from home in West Virginia ('WV') or are assigned to a physical work location in 'WV'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'WV' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'WV' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their work location. An employee is eligible if they either work from home in Kentucky ('KY') or are assigned to a physical work location in 'KY'.",
        "formula": "DEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_TYPE IS ' '\n \nDEFAULT FOR PER_ASG_PRIMARY_FLAG IS ' '\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\n \nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\n \nDEFAULT FOR PER_ASG_ADD_REGION2 IS 'XX'\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' AND PER_ASG_ADD_REGION2 = 'KY' THEN\n(\n    ELIGIBLE = 'Y'\n)\nElse IF\nPER_ASG_WORK_AT_HOME = 'N' AND PER_ASG_LOC_REGION2 = 'KY' THEN\n(\n    ELIGIBLE = 'Y'\n)\n \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks salary eligibility by comparing an employee's salary amount with the maximum allowed salary for their grade. If the salary amount exceeds the maximum, the employee is marked as not eligible ('N'); otherwise, they remain eligible ('Y').",
        "formula": "DEFAULT FOR CMP_ASSIGNMENT_SALARY_AMOUNT is 0\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_GRADE_MAX_VALUE is 0\n/*DEFAULT FOR CMP_TERM_SALARY_GRADE_MAX_VALUE is 0*/\n/*DEFAULT_DATA_VALUE FOR PER_ASG_GRADE_RATES_ANNUALIZATION_FACTOR is 0\n\n\nl_factor = PER_ASG_GRADE_RATES_ANNUALIZATION_FACTOR.FIRST(-1)*/\nl_Salary_Amount = CMP_ASSIGNMENT_SALARY_AMOUNT\nl_Max_Amount = CMP_ASSIGNMENT_SALARY_GRADE_MAX_VALUE \nEligible = 'Y'\n\nIf l_Salary_Amount > l_Max_Amount\nThen \n(\nEligible = 'N'\n)\nRET = SET_LOG('Salary amount is '+ TO_CHAR(l_Salary_Amount))\nRET = SET_LOG('Max Amount is '+ TO_CHAR(l_Max_Amount))\n/*RET = SET_LOG('factor is '+ TO_CHAR(l_factor))*/\nReturn Eligible"
    },
    {
        "prompt": "This formula is designed to exclude specific employees from a compensation plan based on their person numbers. It checks if an employee's person number matches any from a predefined exclusion list. If a match is found, the employee is marked as not eligible. Otherwise, the employee remains eligible. The formula is used to remove a fixed set of employees from participation in a corporate compensation plan.",
        "formula": "/****************************************************************\nFORMULA NAME : BKD Corporate Person Exclusion\nFORMULA TYPE : Participation and Rate Eligibility\nDESCRIPTION  :"
    },
    {
        "prompt": "This formula determines eligibility based on job status and attributes related to employment changes. If the status is \"COM\" (Completed) and the attribute indicates \"Suspension/Recall\" or \"Change FT/PT Status\", the person is eligible. If the attribute is \"Job Change,\" \"Promotion,\" or \"Transfer\" and a second attribute is \"No,\" eligibility variesâ€”\"Job Change\" and \"Promotion\" are eligible, while \"Transfer\" is not. If none of these conditions are met, the person is not eligible.",
        "formula": "INPUTS ARE STATUS(text),\nATTRIBUTE1(text),\nATTRIBUTE2(text),\nATTRIBUTE3(text)\n\n\nDEFAULT FOR L_STATUS IS 'REJ'\nDEFAULT FOR ATTRIBUTE1 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE2 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE3 IS 'XYZ'\n\n\n\nL_STATUS = STATUS\nL_ATTR1 = ATTRIBUTE1\nL_ATTR2 = ATTRIBUTE2\nL_ATTR3 = ATTRIBUTE3\nL_Log = 0\n\nELIGIBLE = 'N'\n\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'Status:'|| L_STATUS)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR1 :'|| L_ATTR1)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR2 :'|| L_ATTR2)\n\nIF L_STATUS = 'COM' AND ( \nL_ATTR1 = 'Suspension/Recall' OR\nL_ATTR1 = 'Change FT/PT Status'\n) THEN\n(\nELIGIBLE = 'Y'\n)\nELSE IF  L_STATUS = 'COM' AND L_ATTR1 = 'Job Change' and L_ATTR2 = 'No' THEN\n(\nELIGIBLE = 'Y'\n)\nELSE IF  L_STATUS = 'COM' AND L_ATTR1 = 'Promotion' and L_ATTR2 = 'No' THEN\n(\nELIGIBLE = 'Y'\n)\nELSE IF  L_STATUS = 'COM' AND L_ATTR1 = 'Transfer' and L_ATTR2 = 'No' THEN\n(\nELIGIBLE = 'N'\n)\nELSE\n(\nELIGIBLE = 'N'\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on job status and employment attributes. If the status is \"COM\" (Completed) and the attribute indicates specific job changes (like \"Care Type Change,\" \"Shift Premium Change,\" \"Transfer,\" \"Suspension/Recall,\" \"Department Change,\" etc.), the person is eligible. Additionally, if the attribute is \"Job Change,\" \"Promotion,\" or \"Transfer\" and a second attribute is \"No,\" the person remains eligible. If none of these conditions are met, they are not eligible.",
        "formula": "INPUTS ARE STATUS(text),\nATTRIBUTE1(text),\nATTRIBUTE2(text),\nATTRIBUTE3(text)\n\n\nDEFAULT FOR L_STATUS IS 'REJ'\nDEFAULT FOR ATTRIBUTE1 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE2 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE3 IS 'XYZ'\n\n\n\nL_STATUS = STATUS\nL_ATTR1 = ATTRIBUTE1\nL_ATTR2 = ATTRIBUTE2\nL_ATTR3 = ATTRIBUTE3\nL_Log = 0\n\nELIGIBLE = 'N'\n\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'Status:'|| L_STATUS)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR1 :'|| L_ATTR1)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR2 :'|| L_ATTR2)\n\nIF L_STATUS = 'COM' AND (L_ATTR1 = 'Care Type Change only' OR L_ATTR1 = 'Update Primary Job Indicator' OR\nL_ATTR1 = 'Shift Premium Change only' OR\nL_ATTR1 = 'Transfer' OR\nL_ATTR1 = 'Suspension/Recall' OR\nL_ATTR1 = 'Transitional Duty Begin/End' OR\nL_ATTR1 = 'Work Driver Change only' OR\nL_ATTR1 = 'Change FT/PT Status' OR\nL_ATTR1 = 'Department Change only'\n) THEN\n(\nELIGIBLE = 'Y'\n)\nELSE IF  L_STATUS = 'COM' AND L_ATTR1 = 'Job Change' and L_ATTR2 = 'No' THEN\n(\nELIGIBLE = 'Y'\n)\nELSE IF  L_STATUS = 'COM' AND L_ATTR1 = 'Promotion' and L_ATTR2 = 'No' THEN\n(\nELIGIBLE = 'Y'\n)\nELSE IF  L_STATUS = 'COM' AND L_ATTR1 = 'Transfer' and L_ATTR2 = 'No' THEN\n(\nELIGIBLE = 'Y'\n)\nELSE\n(\nELIGIBLE = 'N'\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks eligibility based on job status and pay-related attributes. If the status is \"COM\" (Completed) and the attribute indicates \"Only Pay Change and No Job Change\" or \"Special Adjustment,\" the person is eligible. Otherwise, they are not eligible.",
        "formula": "INPUTS ARE STATUS(text),\nATTRIBUTE1(text),\nATTRIBUTE2(text),\nATTRIBUTE3(text)\n\n\nDEFAULT FOR L_STATUS IS 'REJ'\nDEFAULT FOR ATTRIBUTE1 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE2 IS 'XYZ'\nDEFAULT FOR ATTRIBUTE3 IS 'XYZ'\n\n\n\nL_STATUS = STATUS\nL_ATTR1 = ATTRIBUTE1\nL_ATTR2 = ATTRIBUTE2\nL_ATTR3 = ATTRIBUTE3\nL_Log = 0\n\nELIGIBLE = 'N'\n\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'Status:'|| L_STATUS)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR1 :'|| L_ATTR1)\nL_Log = add_rlog (-1 , -1 , 'RRACHAMADUGU:'||'L_ATTR2 :'|| L_ATTR2)\n\nIF L_STATUS = 'COM' AND (L_ATTR1 = 'Only Pay Change and No Job Change' OR L_ATTR1 = 'Special Adjustment') THEN\n(\nELIGIBLE = 'Y'\n)\nELSE\n(\nELIGIBLE = 'N'\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on salary adjustment percentage and time since the last salary adjustment. If the salary adjustment is 15% or more and it has been less than 180 days since the last adjustment, the person is not eligible. Otherwise, they remain eligible.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR CMP_ASSIGNMENT_SALARY_ADJUSTMENT_PERCENTAGE is 0\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_FROM\tIS '1951/01/01'(DATE)\n\nEligible = 'Y'\n\nL_SYSDATE = '4712/12/31 00:00:00' (date)\n\n\nL_SYSDATE = GET_CURRENT_DATE()\n\ndays_count = days_between(L_SYSDATE,CMP_ASSIGNMENT_SALARY_DATE_FROM )+ 1\nRET = SET_LOG('Days Count' + to_char(days_count))\nRET = SET_LOG('Salary Adjustment' + to_char(CMP_ASSIGNMENT_SALARY_ADJUSTMENT_PERCENTAGE))\n\n\n\nIf ((CMP_ASSIGNMENT_SALARY_ADJUSTMENT_PERCENTAGE >=15) AND (days_count <180))\nThen\n\nEligible = 'N'\n\n\n\n\n\nReturn Eligible"
    },
    {
        "prompt": "This formula checks if a personâ€™s religion is Islam. It loops through all religion values associated with the person, and if any of them is \"Islam\", the person is eligible (Y). Otherwise, they are not eligible (N).",
        "formula": "/**********************************************************************\nFORMULA NAME: TP Religion Formula\nFORMULA TYPE: Participation and Rate Eligibility\n***********************************************************************/\nDEFAULT_DATA_VALUE for PER_EXT_RELIGION_NAME is 'NO_DATA_FOUND'\ni=1\nl_return='N'\n\n/* main() */\nwhile PER_EXT_RELIGION_NAME.exists(i) loop\n(\nif (PER_EXT_RELIGION_NAME[i]='Islam') then\n(l_return='Y'\nexit)\n/* increment the counter */\ni=i+1\n) /* end loop */\nELIGIBLE=l_return\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks if a personâ€™s recorded religion is Islam. It loops through all available religion records for the person, and if any entry is \"Islam\", the person is marked eligible (Y) and the loop exits. If no match is found, the person remains not eligible (N).",
        "formula": "/**********************************************************************\nFORMULA NAME: TP Religion Formula\nFORMULA TYPE: Participation and Rate Eligibility\n***********************************************************************/\nDEFAULT_DATA_VALUE for PER_EXT_RELIGION_NAME is 'NO_DATA_FOUND'\ni=1\nl_return='N'\n\n/* main() */\nwhile PER_EXT_RELIGION_NAME.exists(i) loop\n(\nif (PER_EXT_RELIGION_NAME[i]='Islam') then\n(l_return='Y'\nexit)\n/* increment the counter */\ni=i+1\n) /* end loop */\nELIGIBLE=l_return\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on religion. It checks if any recorded religion for a person is \"Islam\". If found, the person is marked eligible (Y), and the loop exits immediately. Otherwise, the person remains not eligible (N).",
        "formula": "/**********************************************************************\nFORMULA NAME: TP Religion Formula\nFORMULA TYPE: Participation and Rate Eligibility\n***********************************************************************/\nDEFAULT_DATA_VALUE for PER_EXT_RELIGION_NAME is 'NO_DATA_FOUND'\ni=1\nl_return='N'\n\n/* main() */\nwhile PER_EXT_RELIGION_NAME.exists(i) loop\n(\nif (PER_EXT_RELIGION_NAME[i]='Islam') then\n(l_return='Y'\nexit)\n/* increment the counter */\ni=i+1\n) /* end loop */\nELIGIBLE=l_return\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on religion. If any of the person's listed religions is \"Islam\", they are marked eligible (Y) and the check stops. Otherwise, they remain not eligible (N).\n\n\n\n\n\n\n",
        "formula": "/**********************************************************************\nFORMULA NAME: TP Religion Formula\nFORMULA TYPE: Participation and Rate Eligibility\n***********************************************************************/\nDEFAULT_DATA_VALUE for PER_EXT_RELIGION_NAME is 'NO_DATA_FOUND'\ni=1\nl_return='N'\n\n/* main() */\nwhile PER_EXT_RELIGION_NAME.exists(i) loop\n(\nif (PER_EXT_RELIGION_NAME[i]='Islam') then\n(l_return='Y'\nexit)\n/* increment the counter */\ni=i+1\n) /* end loop */\nELIGIBLE=l_return\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on marital status. If a person is married ('M'), they are marked as eligible ('Y'); otherwise, they remain not eligible ('N').",
        "formula": "DEFAULT FOR PER_ASG_MARITAL_STATUS is 'X'\n\nL_Mar_Stat = PER_ASG_MARITAL_STATUS\n\nELIGIBLE = 'N'\n\nIF (L_Mar_Stat = 'M')  THEN\n(\n ELIGIBLE = 'Y'\n)\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks a person's marital status. If the status is 'M' (Married), they are marked as eligible ('Y'); otherwise, they remain not eligible ('N').",
        "formula": "DEFAULT FOR PER_ASG_MARITAL_STATUS is 'X'\n\nL_Mar_Stat = PER_ASG_MARITAL_STATUS\n\nELIGIBLE = 'N'\n\nIF (L_Mar_Stat = 'M')  THEN\n(\n ELIGIBLE = 'Y'\n)\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on marital status. If a person is married ('M'), they are marked as eligible ('Y'); otherwise, they remain not eligible ('N').\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_MARITAL_STATUS is 'X'\n\nL_Mar_Stat = PER_ASG_MARITAL_STATUS\n\nELIGIBLE = 'N'\n\nIF (L_Mar_Stat = 'M')  THEN\n(\n ELIGIBLE = 'Y'\n)\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks the marital status of a person. If the status is 'M' (Married), they are marked as eligible ('Y'); otherwise, they remain not eligible ('N').",
        "formula": "DEFAULT FOR PER_ASG_MARITAL_STATUS is 'X'\n\nL_Mar_Stat = PER_ASG_MARITAL_STATUS\n\nELIGIBLE = 'N'\n\nIF (L_Mar_Stat = 'M')  THEN\n(\n ELIGIBLE = 'Y'\n)\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on religion. By default, a person is eligible ('Y'). However, if any of their recorded religions is 'Islam', they become not eligible ('N').",
        "formula": "/**********************************************************************\nFORMULA NAME: TP Religion Formula\nFORMULA TYPE: Participation and Rate Eligibility\n***********************************************************************/\nDEFAULT_DATA_VALUE for PER_EXT_RELIGION_NAME is 'NO_DATA_FOUND'\ni=1\nl_return='Y'\n\n/* main() */\nwhile PER_EXT_RELIGION_NAME.exists(i) loop\n(\nif (PER_EXT_RELIGION_NAME[i]='Islam') then\n(l_return='N'\nexit)\n/* increment the counter */\ni=i+1\n) /* end loop */\nELIGIBLE=l_return\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks a person's religion to determine eligibility. By default, everyone is eligible ('Y'), but if any of their religions is 'Islam', they become not eligible ('N').",
        "formula": "/**********************************************************************\nFORMULA NAME: TP Religion Formula\nFORMULA TYPE: Participation and Rate Eligibility\n***********************************************************************/\nDEFAULT_DATA_VALUE for PER_EXT_RELIGION_NAME is 'NO_DATA_FOUND'\ni=1\nl_return='Y'\n\n/* main() */\nwhile PER_EXT_RELIGION_NAME.exists(i) loop\n(\nif (PER_EXT_RELIGION_NAME[i]='Islam') then\n(l_return='N'\nexit)\n/* increment the counter */\ni=i+1\n) /* end loop */\nELIGIBLE=l_return\nreturn ELIGIBLE"
    },
    {
        "prompt": NaN,
        "formula": "/**********************************************************************\nFORMULA NAME: TP Religion Formula\nFORMULA TYPE: Participation and Rate Eligibility\n***********************************************************************/\nDEFAULT_DATA_VALUE for PER_EXT_RELIGION_NAME is 'NO_DATA_FOUND'\ni=1\nl_return='Y'\n\n/* main() */\nwhile PER_EXT_RELIGION_NAME.exists(i) loop\n(\nif (PER_EXT_RELIGION_NAME[i]='Islam') then\n(l_return='N'\nexit)\n/* increment the counter */\ni=i+1\n) /* end loop */\nELIGIBLE=l_return\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks if a personâ€™s religion is Islam. By default, the person is eligible ('Y'), but if any of their listed religions is 'Islam', they become not eligible ('N') immediately.",
        "formula": "/**********************************************************************\nFORMULA NAME: TP Religion Formula\nFORMULA TYPE: Participation and Rate Eligibility\n***********************************************************************/\nDEFAULT_DATA_VALUE for PER_EXT_RELIGION_NAME is 'NO_DATA_FOUND'\ni=1\nl_return='Y'\n\n/* main() */\nwhile PER_EXT_RELIGION_NAME.exists(i) loop\n(\nif (PER_EXT_RELIGION_NAME[i]='Islam') then\n(l_return='N'\nexit)\n/* increment the counter */\ni=i+1\n) /* end loop */\nELIGIBLE=l_return\nreturn ELIGIBLE"
    },
    {
        "prompt": NaN,
        "formula": "DEFAULT FOR PER_ASG_MARITAL_STATUS is 'X'\n\nL_Mar_Stat = PER_ASG_MARITAL_STATUS\n\nELIGIBLE = 'N'\n\nIF (L_Mar_Stat = 'M' Or L_Mar_Stat = 'D' Or L_Mar_Stat = 'W')  THEN\n(\nELIGIBLE = 'Y'\n)\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on marital status. If a person is Married (M), Divorced (D), or Widowed (W), they are eligible ('Y'). Otherwise, they remain not eligible ('N').",
        "formula": "DEFAULT FOR PER_ASG_MARITAL_STATUS is 'X'\n\nL_Mar_Stat = PER_ASG_MARITAL_STATUS\n\nELIGIBLE = 'N'\n\nIF (L_Mar_Stat = 'M' Or L_Mar_Stat = 'D' Or L_Mar_Stat = 'W')  THEN\n(\nELIGIBLE = 'Y'\n)\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks marital status to determine eligibility. If a person is Married (M), Divorced (D), or Widowed (W), they are eligible ('Y'). Otherwise, they are not eligible ('N').",
        "formula": "DEFAULT FOR PER_ASG_MARITAL_STATUS is 'X'\n\nL_Mar_Stat = PER_ASG_MARITAL_STATUS\n\nELIGIBLE = 'N'\n\nIF (L_Mar_Stat = 'M' Or L_Mar_Stat = 'D' Or L_Mar_Stat = 'W')  THEN\n(\nELIGIBLE = 'Y'\n)\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on marital status. If a person is Married (M), Divorced (D), or Widowed (W), they are eligible ('Y'); otherwise, they are not eligible ('N').",
        "formula": "DEFAULT FOR PER_ASG_MARITAL_STATUS is 'X'\n\nL_Mar_Stat = PER_ASG_MARITAL_STATUS\n\nELIGIBLE = 'N'\n\nIF (L_Mar_Stat = 'M' Or L_Mar_Stat = 'D' Or L_Mar_Stat = 'W')  THEN\n(\nELIGIBLE = 'Y'\n)\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks if six months have passed since the hire date. If the effective date is six or more months after the hire date, the person is not eligible ('N'); otherwise, they remain eligible ('Y').",
        "formula": "DEFAULT FOR PER_ASG_DATE_PROBATION_END is '0001/01/01 00:00:00' (date)\nDEFAULT FOR ACP_HIRE_DATE is '0001/01/01 00:00:00' (date)\nELIGIBLE = 'Y'\neff_date = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00'(date))\n\nIF (eff_date>=add_months(ACP_HIRE_DATE,6))  THEN\n(\n ELIGIBLE = 'N'\n)\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on the hire date. If the effective date is at least six months after the hire date, the person becomes not eligible ('N'); otherwise, they remain eligible ('Y').",
        "formula": "DEFAULT FOR PER_ASG_DATE_PROBATION_END is '0001/01/01 00:00:00' (date)\nDEFAULT FOR ACP_HIRE_DATE is '0001/01/01 00:00:00' (date)\nELIGIBLE = 'Y'\neff_date = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00'(date))\n\nIF (eff_date>=add_months(ACP_HIRE_DATE,6))  THEN\n(\n ELIGIBLE = 'N'\n)\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks if at least six months have passed since the hire date. If the effective date is six months or more after the hire date, the person is not eligible ('N'); otherwise, they remain eligible ('Y').\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_DATE_PROBATION_END is '0001/01/01 00:00:00' (date)\nDEFAULT FOR ACP_HIRE_DATE is '0001/01/01 00:00:00' (date)\nELIGIBLE = 'Y'\neff_date = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00'(date))\n\nIF (eff_date>=add_months(ACP_HIRE_DATE,6))  THEN\n(\n ELIGIBLE = 'N'\n)\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on hire date. If the effective date is at least six months after the hire date, the person is not eligible ('N'); otherwise, they remain eligible ('Y').",
        "formula": "DEFAULT FOR PER_ASG_DATE_PROBATION_END is '0001/01/01 00:00:00' (date)\nDEFAULT FOR ACP_HIRE_DATE is '0001/01/01 00:00:00' (date)\nELIGIBLE = 'Y'\neff_date = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00'(date))\n\nIF (eff_date>=add_months(ACP_HIRE_DATE,6))  THEN\n(\n ELIGIBLE = 'N'\n)\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on gender and marital status. If the person is male, they are eligible. If the person is female and not married, they are also eligible. Married females and any other cases are not eligible. The formula is likely used for benefits, allowances, or policies that depend on gender and marital status.",
        "formula": "DEFAULT FOR PER_ASG_MARITAL_STATUS is 'X'\nDEFAULT FOR PER_PER_SEX is 'X'\n\nL_Gender = PER_PER_SEX\nL_Mar_Stat = PER_ASG_MARITAL_STATUS\n\nELIGIBLE = 'N'\n\nIF (L_Gender = 'M')  THEN\n(\nELIGIBLE = 'Y'\n)\n\nIF (L_Mar_Stat <> 'M' AND L_Gender = 'F')  THEN\n(\nELIGIBLE = 'Y'\n)\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on gender and marital status. Males are always eligible. Females are eligible only if they are not married. Married females and any other cases are not eligible. The formula is likely used for benefits, allowances, or policies that depend on gender and marital status.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_MARITAL_STATUS is 'X'\nDEFAULT FOR PER_PER_SEX is 'X'\n\nL_Gender = PER_PER_SEX\nL_Mar_Stat = PER_ASG_MARITAL_STATUS\n\nELIGIBLE = 'N'\n\nIF (L_Gender = 'M')  THEN\n(\nELIGIBLE = 'Y'\n)\n\nIF (L_Mar_Stat <> 'M' AND L_Gender = 'F')  THEN\n(\nELIGIBLE = 'Y'\n)\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks eligibility based on gender and marital status. Males are always eligible. Females are eligible only if they are not married. Married females are not eligible. The logic is likely used for benefits, allowances, or policy-based eligibility rules.",
        "formula": "DEFAULT FOR PER_ASG_MARITAL_STATUS is 'X'\nDEFAULT FOR PER_PER_SEX is 'X'\n\nL_Gender = PER_PER_SEX\nL_Mar_Stat = PER_ASG_MARITAL_STATUS\n\nELIGIBLE = 'N'\n\nIF (L_Gender = 'M')  THEN\n(\nELIGIBLE = 'Y'\n)\n\nIF (L_Mar_Stat <> 'M' AND L_Gender = 'F')  THEN\n(\nELIGIBLE = 'Y'\n)\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on gender and marital status. Males are always eligible. Females are eligible only if they are not married. Married females are not eligible. This logic is likely used for determining policy-based benefits or allowances.",
        "formula": "DEFAULT FOR PER_ASG_MARITAL_STATUS is 'X'\nDEFAULT FOR PER_PER_SEX is 'X'\n\nL_Gender = PER_PER_SEX\nL_Mar_Stat = PER_ASG_MARITAL_STATUS\n\nELIGIBLE = 'N'\n\nIF (L_Gender = 'M')  THEN\n(\nELIGIBLE = 'Y'\n)\n\nIF (L_Mar_Stat <> 'M' AND L_Gender = 'F')  THEN\n(\nELIGIBLE = 'Y'\n)\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee has completed six months of service. If the effective date is more than six months after the hire date, the employee is eligible. Otherwise, they are not eligible. This logic is likely used for determining probation completion or eligibility for benefits after six months of employment.",
        "formula": "DEFAULT FOR PER_ASG_DATE_PROBATION_END is '0001/01/01 00:00:00' (date)\nDEFAULT FOR ACP_HIRE_DATE is '0001/01/01 00:00:00' (date)\nELIGIBLE = 'N'\neff_date = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00'(date))\n\nIF (eff_date>add_months(ACP_HIRE_DATE,6))  THEN\n(\n ELIGIBLE = 'Y'\n)\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee has completed six months of service. If the effective date is more than six months after the hire date, the employee is considered eligible. Otherwise, they remain ineligible. This logic is typically used to determine eligibility for benefits, promotions, or policy changes after the probation period.",
        "formula": "DEFAULT FOR PER_ASG_DATE_PROBATION_END is '0001/01/01 00:00:00' (date)\nDEFAULT FOR ACP_HIRE_DATE is '0001/01/01 00:00:00' (date)\nELIGIBLE = 'N'\neff_date = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00'(date))\n\nIF (eff_date>add_months(ACP_HIRE_DATE,6))  THEN\n(\n ELIGIBLE = 'Y'\n)\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee has completed more than six months of service. If the effective date is after six months from the hire date, the employee is eligible. Otherwise, they remain ineligible. This is typically used to assess eligibility for benefits, promotions, or policy changes after the probation period.",
        "formula": "DEFAULT FOR PER_ASG_DATE_PROBATION_END is '0001/01/01 00:00:00' (date)\nDEFAULT FOR ACP_HIRE_DATE is '0001/01/01 00:00:00' (date)\nELIGIBLE = 'N'\neff_date = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00'(date))\n\nIF (eff_date>add_months(ACP_HIRE_DATE,6))  THEN\n(\n ELIGIBLE = 'Y'\n)\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee has completed more than six months of service. If the effective date is later than six months from the hire date, the employee is eligible. Otherwise, they are not. This is typically used to determine eligibility for benefits, policy changes, or post-probation entitlements.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_DATE_PROBATION_END is '0001/01/01 00:00:00' (date)\nDEFAULT FOR ACP_HIRE_DATE is '0001/01/01 00:00:00' (date)\nELIGIBLE = 'N'\neff_date = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00'(date))\n\nIF (eff_date>add_months(ACP_HIRE_DATE,6))  THEN\n(\n ELIGIBLE = 'Y'\n)\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee's citizenship legal code is 'SA'. If it matches, the employee is eligible; otherwise, they are not. This is likely used to determine eligibility for location-specific policies, benefits, or work authorizations based on citizenship.",
        "formula": "DEFAULT FOR PER_PER_CITIZENSHIP_LEG_CODE IS 'X'\n/*i=1*/\nl_return='N'\n\n/* main() */\n/*while PER_PER_CITIZENSHIP_LEG_CODE.exists(i) loop\n(*/\nif(PER_PER_CITIZENSHIP_LEG_CODE = 'SA') then\n(\nl_return='Y'\n/* increment the counter */\n/*i=i+1*/\n) /* end loop */\nELIGIBLE=l_return\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee's citizenship legal code is 'SA'. If so, they are marked as eligible; otherwise, they are not. It is likely used for eligibility verification related to nationality-based policies, benefits, or employment conditions.",
        "formula": "DEFAULT FOR PER_PER_CITIZENSHIP_LEG_CODE IS 'X'\n/*i=1*/\nl_return='N'\n\n/* main() */\n/*while PER_PER_CITIZENSHIP_LEG_CODE.exists(i) loop\n(*/\nif(PER_PER_CITIZENSHIP_LEG_CODE = 'SA') then\n(\nl_return='Y'\n/* increment the counter */\n/*i=i+1*/\n) /* end loop */\nELIGIBLE=l_return\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on citizenship. If the employee's citizenship legal code is 'SA', they are eligible; otherwise, they are not. It is likely used for nationality-based benefits, compliance, or employment policies.",
        "formula": "DEFAULT FOR PER_PER_CITIZENSHIP_LEG_CODE IS 'X'\n/*i=1*/\nl_return='N'\n\n/* main() */\n/*while PER_PER_CITIZENSHIP_LEG_CODE.exists(i) loop\n(*/\nif(PER_PER_CITIZENSHIP_LEG_CODE = 'SA') then\n(\nl_return='Y'\n/* increment the counter */\n/*i=i+1*/\n) /* end loop */\nELIGIBLE=l_return\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee's citizenship legal code is 'SA'. If it is, the employee is marked as eligible; otherwise, they are not. It is likely used for eligibility determination related to nationality-based benefits, employment policies, or legal compliance.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_PER_CITIZENSHIP_LEG_CODE IS 'X'\n/*i=1*/\nl_return='N'\n\n/* main() */\n/*while PER_PER_CITIZENSHIP_LEG_CODE.exists(i) loop\n(*/\nif(PER_PER_CITIZENSHIP_LEG_CODE = 'SA') then\n(\nl_return='Y'\n/* increment the counter */\n/*i=i+1*/\n) /* end loop */\nELIGIBLE=l_return\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on nationality. If the person is classified as \"NonSaudi,\" they are marked as eligible. Otherwise, they remain ineligible. The formula is used to identify and flag non-Saudi employees for a specific purpose, likely related to benefits, payroll, or compliance.",
        "formula": "DEFAULT FOR ASG_HR_ASG_ID is 0\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 is 'xx'\n\n\nELIGIBLE='N'\n\nif(PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'NonSaudi') then\n(\nELIGIBLE='Y'\n)\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee belongs to the \"NonSaudi\" category. If they do, they are marked as eligible; otherwise, they remain ineligible. It is likely used for eligibility determination in payroll, benefits, or compliance processes where nationality impacts certain entitlements.",
        "formula": "DEFAULT FOR ASG_HR_ASG_ID is 0\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 is 'xx'\n\n\nELIGIBLE='N'\n\nif(PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'NonSaudi') then\n(\nELIGIBLE='Y'\n)\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on nationality. Employees classified as \"NonSaudi\" are marked as eligible (\"Y\"), while all others remain ineligible (\"N\"). It is likely used for payroll, benefits, or policy compliance where different rules apply based on nationality.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR ASG_HR_ASG_ID is 0\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 is 'xx'\n\n\nELIGIBLE='N'\n\nif(PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'NonSaudi') then\n(\nELIGIBLE='Y'\n)\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula checks an employee's nationality category. If the employee is classified as \"NonSaudi,\" they are marked as eligible (\"Y\"). Otherwise, they remain ineligible (\"N\"). This is likely used for eligibility determination in payroll, benefits, or compliance rules based on nationality.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR ASG_HR_ASG_ID is 0\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 is 'xx'\n\n\nELIGIBLE='N'\n\nif(PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'NonSaudi') then\n(\nELIGIBLE='Y'\n)\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines an employee's eligibility for a benefits plan in California. If the employee works from home and their home address is in California, they are eligible. If they do not work from home, eligibility is based on whether their assigned work location is in California. If neither condition is met, they are ineligible.",
        "formula": "/*******************************************************************\nFORMULA NAME : HJF_BEN_CA_PLAN_ELIGIBILITY\nFORMULA TYPE : Participation and Rate Eligibility\nDESCRIPTION  : HJF Benefits CA Plan Eligibility\nLEGISLATION  : US Legislative Data Group\n--------------------------------------------------------------------------------------------------------------------\nMalleswara Mogadala 03-Mar-2020 Initial Version\n--------------------------------------------------------------------------------------------------------------------\n*******************************************************************/\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\n/*=========== INPUT VALUES DEFAULTS BEGIN =====================*/ \n/*=========== INPUT VALUES DEFAULTS ENDS======================*/ \n/*================ FORMULA SECTION BEGIN =======================*/\n\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' THEN\n(\n    IF PER_PER_HOME_ADDR_REGION_2 = 'CA' THEN\n    (\n        ELIGIBLE = 'Y'\n    )\n)\nELSE\n(\n    IF PER_ASG_LOC_REGION2 = 'CA' THEN\n    (\n        ELIGIBLE = 'Y'\n    )\n)\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines an employee's eligibility for a benefits plan based on their work location. If the employee works from home, they are eligible if their home address is not in Hawaii and either their assigned country is the US or their home state is California. If they do not work from home, they are eligible if their assigned work location is not in Hawaii and is either in California or the US.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_LOC_COUNTRY IS 'XX'\n/*=========== INPUT VALUES DEFAULTS BEGIN =====================*/ \n/*=========== INPUT VALUES DEFAULTS ENDS======================*/ \n/*================ FORMULA SECTION BEGIN =======================*/\n\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' THEN\n(\n    IF (PER_PER_HOME_ADDR_REGION_2 <> 'HI' AND (PER_ASG_LOC_COUNTRY = 'US' OR PER_PER_HOME_ADDR_REGION_2 ='CA' )) THEN\n    \n\t (\n        ELIGIBLE = 'Y'\n\t )\n)\nELSE\n(\n    IF (PER_ASG_LOC_REGION2 <> 'HI' AND (PER_ASG_LOC_REGION2 = 'CA' OR PER_ASG_LOC_COUNTRY = 'US')) THEN\n\t  (\n        ELIGIBLE = 'Y'\n\t  )\n    \n)\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines an employee's eligibility for a Hawaii-specific benefits plan. If the employee works from home, they are eligible if their home address is in Hawaii. If they do not work from home, they are eligible if their assigned work location is in Hawaii.\n\n\n\n\n\n\n",
        "formula": "/*******************************************************************\nFORMULA NAME : HJF_BEN_HI_EMP_ELIGIBILITY\nFORMULA TYPE : Participation and Rate Eligibility\nDESCRIPTION  : HJF Benefits HI Plan Eligibility\nLEGISLATION  : US Legislative Data Group\n--------------------------------------------------------------------------------------------------------------------\nMalleswara Mogadala 03-Mar-2020 Initial Version\n--------------------------------------------------------------------------------------------------------------------\n*******************************************************************/\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\n/*=========== INPUT VALUES DEFAULTS BEGIN =====================*/ \n/*=========== INPUT VALUES DEFAULTS ENDS======================*/ \n/*================ FORMULA SECTION BEGIN =======================*/\n\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' THEN\n(\n    IF PER_PER_HOME_ADDR_REGION_2 = 'HI' THEN\n    (\n        ELIGIBLE = 'Y'\n    )\n)\nELSE\n(\n    IF PER_ASG_LOC_REGION2 = 'HI' THEN\n    (\n        ELIGIBLE = 'Y'\n    )\n)\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their work location and assignment type. Employees are eligible if they are not located in the United States and are classified as \"Tier 1 Expatriate/International Assignee.\"\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR PER_ASG_INTERNAL_LOCATION IS 'XX'\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 IS 'XX'\n/*=========== INPUT VALUES DEFAULTS BEGIN =====================*/ \n/*=========== INPUT VALUES DEFAULTS ENDS======================*/ \n/*================ FORMULA SECTION BEGIN =======================*/\n \nELIGIBLE = 'N'\nIF PER_ASG_INTERNAL_LOCATION != 'United States' AND \n   PER_ASG_PEOPLE_GROUP_SEGMENT1= 'Tier 1 Expatriate/International Assignee' THEN\n(\n  ELIGIBLE = 'Y'\n)\n \nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for enrolling in specific benefits (FSA Limited Purpose and HSA). Employees located in Hawaii (HI) are not eligible. Employees working from home are eligible unless their home address is in Hawaii. Employees working on-site are eligible unless their work location is in Hawaii.\n\n\n\n\n\n\n",
        "formula": "/*\nFormula Name: HJF_BEN_CARE_PLAN_ELIGIBILITY\nType: Participation and Rate Eligibility\nDescription: HI employees not allowed to eroll in FSA Lmtd Purpose, HSA\n*/\n\n\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'N'\nDEFAULT FOR PER_ASG_LOC_REGION2 IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\n/*=========== INPUT VALUES DEFAULTS BEGIN =====================*/ \n/*=========== INPUT VALUES DEFAULTS ENDS======================*/ \n/*================ FORMULA SECTION BEGIN =======================*/\n\nELIGIBLE = 'N'\nIF PER_ASG_WORK_AT_HOME = 'Y' THEN\n(\n    IF PER_PER_HOME_ADDR_REGION_2 <> 'HI' THEN\n   \n\t (\n        ELIGIBLE = 'Y'\n\t )\n)\nELSE\n(\n    IF PER_ASG_LOC_REGION2 <> 'HI' THEN\n\t  (\n        ELIGIBLE = 'Y'\n\t  )\n    \n)\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for a benefit plan based on employment type, worker tier, pay frequency, and work hours.",
        "formula": "DEFAULT FOR PER_WORKER_ASSIGNMENT_FULL_PART_TIME IS 'NONE'\n\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 IS 'XX'\n\nDEFAULT FOR PER_ASG_FREQUENCY is 'X'\n\nDEFAULT FOR PER_ASG_NORMAL_HOURS  IS 00\n\nELIGIBLE = 'N'\n \nIF (PER_WORKER_ASSIGNMENT_FULL_PART_TIME = 'PART_TIME' AND \n\n    (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Tier 1' OR PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Tier 3') AND \n\n    ((PER_ASG_FREQUENCY = 'W' AND PER_ASG_NORMAL_HOURS >= 21 AND PER_ASG_NORMAL_HOURS <= 29) OR \n\n     (PER_ASG_FREQUENCY = 'BW' AND PER_ASG_NORMAL_HOURS >= 42 AND PER_ASG_NORMAL_HOURS <= 58))\n\n   ) THEN\n\n    ELIGIBLE = 'Y'\n\nELSE IF (PER_WORKER_ASSIGNMENT_FULL_PART_TIME = 'FULL_TIME' AND \n\n         (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Tier 1' OR PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Tier 3') AND \n\n         ((PER_ASG_FREQUENCY = 'W' AND PER_ASG_NORMAL_HOURS >= 30) OR \n\n          (PER_ASG_FREQUENCY = 'BW' AND PER_ASG_NORMAL_HOURS >= 60))\n\n        ) THEN \n\n    ELIGIBLE = 'Y'\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines whether an employee is eligible for a salary increment based on their time in the current grade and step.",
        "formula": "/******************************************************************************\nFORMULA NAME: LBH Progression Formula\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: The employee needs to be in post/on the new grade for a year before\nthey would qualify for an increment, but this is not automatic it is performance-based.\nIf the increment is awarded, it is granted each year on the anniversary date.\n\nChange History:\nName     Date          Version   Comments\n-------------------------------------------------------------------------------\nEvosys    1-April-21    1.0      Initial Version\n*******************************************************************************/\n\nDEFAULT FOR ACP_HIRE_DATE IS '0001/01/01 00:00:00' (date)\nDEFAULT FOR PER_ASG_REL_DATE_START IS '0001/01/01 00:00:00' (date)\nDEFAULT FOR PER_ASG_GRADE_CODE IS 'XX'\nDEFAULT FOR PER_GRADE_STEP_NAME IS '99'\nDEFAULT FOR PER_ASG_GRADE_LADDER_NAME IS 'XX'\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_ASSIGNMENT_STATUS_TYPE_LOOKUP_MEANING is 'XXX'\nDEFAULT FOR ASG_HR_ASG_ID is 0\nDEFAULT FOR PER_ASG_ATTRIBUTE_DATE1 IS '4712/12/31' (date)\nDEFAULT FOR PER_ASG_SPECIAL_CEILING_STEP_NAME is 'XXXX'\n\n\nASG_NUMBER = 'X'\nASG_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nl_hr_asg_id = ASG_HR_ASG_ID\nL_ELIGIBLE='N'\nl_start_dt='0001/01/01 00:00:00' (date)\n\nASG_STATUS = 'XXX'\nASG_STATUS = PER_ASG_ASSIGNMENT_STATUS_TYPE_LOOKUP_MEANING\nl_hr_asg_id = ASG_HR_ASG_ID\nL_ELIGIBLE='N'\nl_start_dt='0001/01/01 00:00:00' (date)\n\n\n\n\nx = ess_log_write('Assignment Number: ' + PER_ASG_ASSIGNMENT_NUMBER)\nx = ess_log_write('Assignment Status: ' + PER_ASG_ASSIGNMENT_STATUS_TYPE_LOOKUP_MEANING)\n\nCHANGE_CONTEXTS(EFFECTIVE_DATE = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00' (date)))\n(\nAsg_step=PER_GRADE_STEP_NAME\nl_start_dt = PER_ASG_REL_DATE_START\nGrade_Code = PER_ASG_GRADE_CODE\n\nCurrent_date=get_context(effective_date, '0001/01/01 00:00:00'(date))\nService_months=0\n\nx = ess_log_write('Assignment Step: ' + Asg_step)\nx = ess_log_write('Assignment Step: ' + PER_ASG_SPECIAL_CEILING_STEP_NAME)\n\nx = ess_log_write('Grade Ladder: ' + PER_ASG_GRADE_LADDER_NAME)\nx = ess_log_write('Grade: ' + PER_ASG_GRADE_CODE)\nx = ess_log_write('effective Date: ' + to_char(Current_date,'DD-Mon-YYYY'))\nx = ess_log_write('Contract End Date'||to_char(PER_ASG_ATTRIBUTE_DATE1,'dd/mm/yyyy'))\n\nif ACP_HIRE_DATE was defaulted then\n(\nl_start_dt = PER_ASG_REL_DATE_START\n)\nelse\n(\nl_start_dt = ACP_HIRE_DATE\n)\n)\n\nService_months = MONTHS_BETWEEN(Current_date,l_start_dt)\n\nx = ess_log_write(' Start Date: ' + to_char(l_start_dt))\nx = ess_log_write(' Length of Service: ' + to_char(Service_months))\n\nl_sub_date = substr(to_char(Current_date),1,10)\nl_yyyy = substr(l_sub_date,1,4)\nl_mm = substr(l_sub_date,6,2)\nl_dd = substr(l_sub_date,9,2)\nl_debug = ess_log_write('l_yyyy= '+ (l_yyyy))\nl_debug = ess_log_write('l_mm= '+ (l_mm))\nl_debug = ess_log_write('l_dd= '+ (l_dd))\n\n\n\nif to_char(Current_date,'YYYY') = to_char(l_start_dt , 'YYYY')\nthen\nl_date = Current_date\nelse\nl_date = add_months(Current_date , -12)\n\nx = ess_log_write(' l_date: ' + to_char(l_date))\n\nCeiling_Step  = (GET_VALUE_SET('LBH_CELLING_STEP','|=P_ASSIGNMENT_ID='''||to_char(l_hr_asg_id)||''''||'|P_YEAR='''||(l_yyyy)||''''|| '|P_MONTH=''' ||(l_mm)||''''||'|P_DAY='''||(l_dd)||''''))\n\nx = ess_log_write(' Grade Ceiling Step: ' + (Ceiling_Step))\n\n If (( Service_months > 12 ) AND\n       ( Ceiling_Step = 'N' ) and\n  ( to_char(Current_date,'DD-MM') = '01-04')\n )\nTHEN\n(\nL_ELIGIBLE='Y'\nx = ess_log_write('greater then 1 year ')\n)\n  else If( to_date(to_char(l_start_dt , 'DD-MM-YYYY')) >= to_date('01-04-'||to_char(l_date , 'YYYY'))\n          and to_date(to_char(l_start_dt , 'DD-MM-YYYY')) <= to_date('01-10-'||to_char(l_date , 'YYYY'))\n AND Service_months >=6\n and ( Ceiling_Step = 'N' )\n     AND to_char(Current_date,'DD-MM') = '01-04'\n)\nTHEN\n(\nL_ELIGIBLE='Y'\nx = ess_log_write('April condition: ')\n)\n\nelse If(( to_date(to_char(l_start_dt , 'DD-MM-YYYY')) >= to_date('02-10-'||to_char(l_date , 'YYYY'))\n)\n AND Service_months =6\n and ( Ceiling_Step = 'N' )\n)\nTHEN\n(\nL_ELIGIBLE='Y'\nx = ess_log_write('Employee Completing 6 months')\n)\n\n  /* else If(( Ceiling_Step = 'N' )  \n aND Service_months = 6\n)\n THEN\n(\nx = ess_log_write('Employee Completing 6 months')\nL_ELIGIBLE='Y'\n)*/\nELSE\n(\nL_ELIGIBLE='N'\nx = ess_log_write('Not eligible ')\n)\n\nx = ess_log_write(' Eligibility Status: ' + (L_ELIGIBLE))\n\nELIGIBLE=L_ELIGIBLE\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for a benefits plan based on the assigned plan type. Employees in the \"Jan to Dec Plan\" are eligible. Employees marked as \"Not Eligible\" are not eligible. Anyone else is also not eligible. The formula returns either eligible or not eligible based on these conditions.",
        "formula": "DEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT2 IS 'X'\n\nL_RETURN = 'Y'\nIF (PER_ASG_PEOPLE_GROUP_SEGMENT2 = 'Jan to Dec Plan') THEN\n(L_RETURN = 'Y')\n\nELSE IF (PER_ASG_PEOPLE_GROUP_SEGMENT2 = 'Not Eligible') THEN\n(L_RETURN = 'N')\n\nELSE (L_RETURN='N')\n\nELIGIBLE = (L_RETURN)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on the assignment number. It extracts a specific part of the assignment number and checks if it falls within a predefined set of values (E0 to E9). If the extracted value is 5, the employee is eligible. Otherwise, they are not eligible. The formula logs the extracted number for reference.\n\n\n\n\n\n\n",
        "formula": "/* DEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 is 'X' */\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nELIGIBLE='N'\n\n/* contract = PER_ASG_PEOPLE_GROUP_SEGMENT1 */\nl_eff_date = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASG_NUMBER = 'X'\nASG_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASG_NUMBER,INSTR(ASG_NUMBER,'-',1,1)+1,2))\n\nif (ASG_CHAR = 'E0') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E1') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E2') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E3') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E4') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E5') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E6') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E7') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E8') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E9') then\n(\nASG_NUM = 1\n)\nelse\n(\nASG_NUM = to_number(ASG_CHAR)\n)\n\nif (ASG_NUM = 5) THEN\n(\nELIGIBLE='Y'\n)\n\nL_CUSTOM_MESSAGE = 'Y'\nL_CUSTOM_MESSAGE = ESS_LOG_WRITE('Assignment Number = ' || TO_CHAR(ASG_NUM))\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible for an increment based on their hire date and service period. It calculates the number of months between the employee's hire date and a predefined next increment date (April 1, 2023). If the service period is greater than six months and the employee has not reached the ceiling step, they are marked as eligible. Otherwise, they are not eligible. The formula logs relevant data for tracking.",
        "formula": "DEFAULT FOR CMP_IV_ASSIGNMENT_ID is 0\nDEFAULT FOR ASG_HR_ASG_ID is 0\nDEFAULT FOR ACP_HIRE_DATE IS '0001/01/01 00:00:00' (date)\n\nDEFAULT FOR PER_ASG_FULL_NAME is 'X'\n\nl_selected = 'N'\nl_hr_asg_id = ASG_HR_ASG_ID\nl_debug = ess_log_write('l_hr_asg_id= '+ to_char(ASG_HR_ASG_ID))\nl_service_period = 0\nlV_DATE=' '\nELIGIBLE = 'N'\n\n\nl_next_increment='2023/04/01'\nl_yyyy=substr(l_next_increment,1,4)\nl_mm=substr(l_next_increment,6,2)\nl_dd=substr(l_next_increment,10,2)\n\nl_next_inc = to_date(l_next_increment,'RRRR/MM/DD')\n\nl_debug = ess_log_write('l_yyyy= '+ (l_yyyy))\nl_debug = ess_log_write('l_mm= '+ (l_mm))\nl_debug = ess_log_write('l_dd= '+ (l_dd))\nl_ceiling_Step ='N'\nl_valid_grade = 'N'\n\nl_service_period=MONTHS_BETWEEN(l_next_inc,ACP_HIRE_DATE)\n\n\nl_debug = ess_log_write('PERSON FULL NAME = '+ (PER_ASG_FULL_NAME))\nl_debug = ess_log_write('ACP_HIRE_DATE= '+ to_char(ACP_HIRE_DATE))\nl_debug = ess_log_write('l_service_period= '+ to_char(l_service_period))\n\n\nif(l_service_period > 6)\nthen\n(\nl_ceiling_Step = (GET_VALUE_SET('LBH_CEILING_STEP','|=P_ASSIGNMENT_ID='''||to_char(l_hr_asg_id)||''''||'|P_YEAR='''||(l_yyyy)||''''|| '|P_MONTH=''' ||(l_mm)||''''||'|P_DAY='''||(l_dd)||''''))\nl_debug = ess_log_write('l_ceiling_Step= '+ (l_ceiling_Step))\n\nif l_ceiling_Step <> 'Y' then\n(\nl_selected='Y'\n)\n)\n\nelse\n(\nl_selected = 'N'\n)\n\nl_debug = ess_log_write('l_selected= '+ (l_selected))\n\n\nIF (l_selected = 'Y')\nTHEN\n(\nELIGIBLE = 'Y'\n)\nELSE\n(\nELIGIBLE = 'N'\n)\n\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on an employee's assignment number. It extracts a specific part of the assignment number and checks if it falls within a predefined range (E0 to E9). If it matches, the employee is marked as eligible. Otherwise, the extracted value is converted to a number and checked if it equals 1. If so, eligibility is granted. The formula also logs the processed assignment number for tracking.",
        "formula": "/* DEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 is 'X' */\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nELIGIBLE='N'\n\n/* contract = PER_ASG_PEOPLE_GROUP_SEGMENT1 */\nl_eff_date = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASG_NUMBER = 'X'\nASG_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASG_NUMBER,INSTR(ASG_NUMBER,'-',1,1)+1,2))\n\nif (ASG_CHAR = 'E0') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E1') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E2') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E3') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E4') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E5') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E6') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E7') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E8') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E9') then\n(\nASG_NUM = 1\n)\nelse\n(\nASG_NUM = to_number(ASG_CHAR)\n)\n\nif (ASG_NUM = 1) THEN\n(\nELIGIBLE='Y'\n)\n\nL_CUSTOM_MESSAGE = 'Y'\nL_CUSTOM_MESSAGE = ESS_LOG_WRITE('Assignment Number = ' || TO_CHAR(ASG_NUM))\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks an employee's assignment number to determine eligibility. It extracts a specific portion of the assignment number and compares it against predefined values (E0 to E9). If it matches, the value is set to 1. Otherwise, the extracted value is converted into a number. Finally, if the resulting number is 3, the employee is marked as eligible. The formula also logs the processed assignment number for reference.",
        "formula": "/* DEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 is 'X' */\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nELIGIBLE='N'\n\n/* contract = PER_ASG_PEOPLE_GROUP_SEGMENT1 */\nl_eff_date = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASG_NUMBER = 'X'\nASG_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASG_NUMBER,INSTR(ASG_NUMBER,'-',1,1)+1,2))\n\nif (ASG_CHAR = 'E0') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E1') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E2') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E3') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E4') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E5') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E6') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E7') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E8') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E9') then\n(\nASG_NUM = 1\n)\nelse\n(\nASG_NUM = to_number(ASG_CHAR)\n)\n\nif (ASG_NUM = 3) THEN\n(\nELIGIBLE='Y'\n)\n\nL_CUSTOM_MESSAGE = 'Y'\nL_CUSTOM_MESSAGE = ESS_LOG_WRITE('Assignment Number = ' || TO_CHAR(ASG_NUM))\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on an employee's group segment. If the employee belongs to the \"Sep to Aug Plan,\" they are eligible. If they are in the \"Not Eligible\" category or any other category, they are not eligible.",
        "formula": "DEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT2 IS 'X'\n\nL_RETURN = 'Y'\nIF (PER_ASG_PEOPLE_GROUP_SEGMENT2 = 'Sep to Aug Plan') THEN\n(L_RETURN = 'Y')\n\nELSE IF (PER_ASG_PEOPLE_GROUP_SEGMENT2 = 'Not Eligible') THEN\n(L_RETURN = 'N')\n\nELSE (L_RETURN='N')\n\nELIGIBLE = (L_RETURN)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on an employee's group segment. If the employee belongs to any of the listed categories (such as Chief Officers, Councillors, Office Holders, Youth, Apprentices, or specific grading groups), they are marked as eligible. Otherwise, they are not eligible.\n\n\n\n\n\n\n",
        "formula": "/*****************************************************************************\n\nChange History\n==============\nDate         Version   Author     Change Reason\n-----------  -------   ---------- -------------------------------\n09-Aug-2019  1.0     Suhas C     Initial Version\n\n*******************************************************************************/\n\n\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 IS ' '\nELIGIBLE='N'\n\n\n\nIF /**(PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Casuals') \nOR **/(PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Chief Officers')\nOR (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Councillors')\nOR (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Office Holders')\nOR (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Unknown Grades-LG')\nOR (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Youth')\nOR (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'GLPC2019 12+')\nOR (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'GLPC2019 Less Than 12')\nOR (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'EXT/VA Schools')\nOR (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Soulbury +')\nOR (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Apprentices')\nOR (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Soulbury -')\n\n\nTHEN\n(\nELIGIBLE='Y'\n)\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks an employeeâ€™s assignment group segment to determine eligibility. Employees in the \"Apr to Mar Plan\" are marked as eligible, while those labeled \"Not Eligible\" are marked as not eligible. All others are also marked as not eligible.",
        "formula": "DEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT2 IS 'X'\nDEFAULT_DATA_VALUE FOR PER_EXT_ASG_SYSTEM_PERSON_TYPE IS 'X'\nDEFAULT FOR PER_ASG_HOURLY_SALARIED_CODE_LOOKUP_MEANING IS 'SALARIED'\n\nL_RETURN = 'Y'\nIF (PER_ASG_PEOPLE_GROUP_SEGMENT2 = 'Apr to Mar Plan') THEN\n(L_RETURN = 'Y')\n\nELSE IF (PER_ASG_PEOPLE_GROUP_SEGMENT2 = 'Not Eligible') THEN\n(L_RETURN = 'N')\n\nELSE (L_RETURN='N')\n\nELIGIBLE = (L_RETURN)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee belongs to the \"NHS\" people group segment. If they do, they are marked as eligible; otherwise, they are not eligible.",
        "formula": "/*****************************************************************************\n\nChange History\n==============\nDate         Version   Author     Change Reason\n-----------  -------   ---------- -------------------------------\n22-Oct-2019  1.0     Suhas C     Initial Version\n\n*******************************************************************************/\n\n\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 IS ' '\nELIGIBLE='N'\n\n\n\nIF (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'NHS')\n\nTHEN\n(\nELIGIBLE='Y'\n)\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks the assignment number of an employee and extracts a specific part of it. If the extracted part matches a predefined set of values (E0 to E9), it is assigned a numeric value. If the final numeric value is 2, the employee is marked as eligible; otherwise, they are not eligible.",
        "formula": "/* DEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 is 'X' */\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nELIGIBLE='N'\n\n/* contract = PER_ASG_PEOPLE_GROUP_SEGMENT1 */\nl_eff_date = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASG_NUMBER = 'X'\nASG_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASG_NUMBER,INSTR(ASG_NUMBER,'-',1,1)+1,2))\n\nif (ASG_CHAR = 'E0') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E1') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E2') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E3') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E4') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E5') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E6') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E7') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E8') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E9') then\n(\nASG_NUM = 1\n)\nelse\n(\nASG_NUM = to_number(ASG_CHAR)\n)\n\nif (ASG_NUM = 2) THEN\n(\nELIGIBLE='Y'\n)\n\nL_CUSTOM_MESSAGE = 'Y'\nL_CUSTOM_MESSAGE = ESS_LOG_WRITE('Assignment Number = ' || TO_CHAR(ASG_NUM))\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks whether an employee's assignment is marked as primary. If the primary flag is set to 'Y', the employee is considered eligible. Otherwise, they are not eligible. It also logs debug messages for tracking assignment number, flag status, and final eligibility.\n\n\n\n\n\n\n",
        "formula": "/******************************************************************************\nChange History\n==============\nDate         Version   Author     Change Reason\n-----------  -------   ---------- -------------------------------\n05-May-2018   1.0      Suhas C    Initial Version\n****************************************************************************/\n\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_PRIMARY_FLAG is 'N'\n\nELIGIBLE='N'\n\nl_debug = ess_log_write('In Primary ASg Flag Formula')\nl_debug = ess_log_write('Asg Number: '+PER_ASG_ASSIGNMENT_NUMBER)\nl_debug = ess_log_write('Flag: '+PER_ASG_PRIMARY_FLAG)\n\nIF PER_ASG_PRIMARY_FLAG = 'Y' THEN\nELIGIBLE = 'Y'\n\nl_debug = ess_log_write('Eligibility: ' + ELIGIBLE)\t\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines employee eligibility based on their grade step sequence, performance rating, and various evaluation parameters. ",
        "formula": "DEFAULT_DATA_VALUE for HRA_EVALUATIONS_FF_TMPL_PERIOD_ID is -1\nDEFAULT_DATA_VALUE for HRA_EVALUATIONS_FF_EVALUATION_ID is -1\nDEFAULT_DATA_VALUE for HRA_SECTION_RATING_FF_NUMERIC_RATING is -1\nDEFAULT_DATA_VALUE for HRA_SECTION_RATING_FF_EVALUATION_ID is -1\nDEFAULT_DATA_VALUE for HRA_SECTION_RATING_FF_CALCULATED_RATING is -1\nDEFAULT_DATA_VALUE for HRA_SECTION_RATING_FF_STAR_RATING is -1\nDEFAULT FOR PER_GRADE_STEP_SEQUENCE is -1\nDEFAULT_DATA_VALUE for HRA_SECTION_RATING_FF_SECTION_TYPE_CODE is 'Default-Section'\nDEFAULT_DATA_VALUE for HRA_SECTION_RATING_FF_ROLE_TYPE_CODE is 'Default-Role'\nDEFAULT FOR PER_GRADE_STEP_NAME IS '-1'\nDEFAULT FOR PER_ASG_ACTION_REASON_CODE is 'x'\nDEFAULT FOR PER_ASG_ACTION_CODE is 'y'\nDEFAULT FOR PER_ASG_STEP_ENTRY_DATE is '0001/01/01 00:00:00' (date)\nDEFAULT_DATA_VALUE FOR HRA_EVAL_RATINGS_FF_CREATION_DATE is '0001/01/01 00:00:00' (date)\nDEFAULT_DATA_VALUE FOR HRA_RATING_FF_CREATION_DATE is '0001/01/01 00:00:00' (date)\nDEFAULT_DATA_VALUE FOR HRA_SECTION_RATING_FF_CREATION_DATE is '0001/01/01 00:00:00' (date)\nDEFAULT_DATA_VALUE FOR HRA_ITEM_RATINGS_FF_CREATION_DATE is '0001/01/01 00:00:00' (date)\nDEFAULT_DATA_VALUE FOR HRA_SECTIONS_RATINGS_CREATION_DATE is '0001/01/01 00:00:00' (date)\nDEFAULT FOR PER_GRADE_STEP_EFFECTIVE_START_DATE is '0001/01/01 00:00:00' (date)\n\nDEFAULT_DATA_VALUE FOR HRA_EVALUATIONS_FF_LAST_UPDATE_DATE is '0001/01/01 00:00:00' (date)\n\n/* Defaults for the local variables */\nDEFAULT FOR i is 1\nDEFAULT FOR j is 1\nDEFAULT FOR l_evaluation_id is -1\nDEFAULT FOR l_perf_rating is -1\nDEFAULT FOR l_Step_Seq is -1\nDEFAULT FOR l_Step_Name is '-1'\n\nELIGIBLE = 'N'\nACT_CODE = 'XX'\nACT_REASON = 'XX'\nl_perf_rating = -1\nl_calculated_rating = -1\nl_star_rating = -1\nl_hr_asg_id = GET_CONTEXT(HR_ASSIGNMENT_ID,-1)\nL_temp = ESS_LOG_WRITE('l_hr_asg_id' + to_char(l_hr_asg_id))\nL_ELIGIBLE = 'N'\n\nl_Step_Seq = PER_GRADE_STEP_SEQUENCE\nl_Step_Name = PER_GRADE_STEP_NAME\n\n\n/*formula body*/\ni = 1\nl_output = 'N'\nwhile HRA_EVALUATIONS_FF_TMPL_PERIOD_ID.exists(i)\nloop\n(\n   l_evaluation_id = -1\n   if   HRA_EVALUATIONS_FF_TMPL_PERIOD_ID[i]=300000007689014 then  /* enter the template period id for the latest template you want to refer in the formula*/\n   (\n    l_evaluation_id = HRA_EVALUATIONS_FF_EVALUATION_ID[i]\nL_temp = ESS_LOG_WRITE('l_evaluation_id: ' + to_char(l_evaluation_id) )\nj=1\nl_perf_rating  = -1\nl_calculated_rating = -1\nl_star_rating = -1\n\n\nWHILE HRA_SECTION_RATING_FF_EVALUATION_ID.exists(j)\nloop\n(\n   if HRA_SECTION_RATING_FF_EVALUATION_ID[j] = l_evaluation_id then\n   (\n     if HRA_SECTION_RATING_FF_SECTION_TYPE_CODE[j] = 'OS'\n      AND HRA_SECTION_RATING_FF_ROLE_TYPE_CODE[j] = 'MANAGER' THEN /* for getting the manager rating for Overall summary section */\n  (\n    l_perf_rating  = HRA_SECTION_RATING_FF_NUMERIC_RATING[j] /*Assign the performance rating_did to local variable */\nl_calculated_rating = HRA_SECTION_RATING_FF_CALCULATED_RATING[j]\nl_star_rating = HRA_SECTION_RATING_FF_STAR_RATING[j]\n    EXIT\n  )\n   )\n   j = j+1\n)\n   \nL_temp = ESS_LOG_WRITE('Rating Date: ' + to_char(HRA_EVAL_RATINGS_FF_CREATION_DATE[i]) )\nL_temp = ESS_LOG_WRITE('Rating Date: ' + to_char(HRA_RATING_FF_CREATION_DATE[i]) )\nL_temp = ESS_LOG_WRITE('Rating Date: ' + to_char(HRA_ITEM_RATINGS_FF_CREATION_DATE[i]) )\nL_temp = ESS_LOG_WRITE('Rating Date: ' + to_char(HRA_SECTION_RATING_FF_CREATION_DATE[i]) )\nL_temp = ESS_LOG_WRITE('Rating Date: ' + to_char(HRA_SECTIONS_RATINGS_CREATION_DATE[i]) )\n\n\nIF(PER_GRADE_STEP_EFFECTIVE_START_DATE > HRA_EVAL_RATINGS_FF_CREATION_DATE[i])\nTHEN\n(\nELIGIBLE = 'N'\nL_temp = ESS_LOG_WRITE('ELIGIBLE' + ELIGIBLE)\n)\n\n   )\n   i=i+1\n)\n\n\n\n\n\n\n\n\nIF ((l_Step_Seq = 1 OR l_Step_Seq = 6 OR l_Step_Seq = 11 OR l_Step_Seq = 16 OR l_Step_Seq = 21 OR l_Step_Seq = 26) AND (l_perf_rating = 2 OR l_perf_rating = 3 OR l_perf_rating = 4))\nTHEN\n(\nELIGIBLE = 'Y'\n)\n\nELSE IF ((l_Step_Seq = 2 OR l_Step_Seq = 7 OR l_Step_Seq = 12 OR l_Step_Seq = 17 OR l_Step_Seq = 22 OR l_Step_Seq = 27) AND (l_perf_rating = 3 OR l_perf_rating = 4))\nTHEN\n(\nELIGIBLE = 'Y'\n)\n\nELSE IF ((l_Step_Seq = 3 OR l_Step_Seq = 8 OR l_Step_Seq = 13 OR l_Step_Seq = 18 OR l_Step_Seq = 23 OR l_Step_Seq = 28) AND (l_perf_rating = 3 OR l_perf_rating = 4))\nTHEN\n(\nELIGIBLE = 'Y'\n)\n\nELSE IF ((l_Step_Seq = 4 OR l_Step_Seq = 9 OR l_Step_Seq = 14 OR l_Step_Seq = 19 OR l_Step_Seq = 24 OR l_Step_Seq = 29) AND (l_perf_rating = 4))\nTHEN\n(\nELIGIBLE = 'Y'\n)\n\n\n\n\ni = 1\nwhile HRA_EVALUATIONS_FF_TMPL_PERIOD_ID.exists(i)\nloop\n(\n   l_evaluation_id = -1\n   if   HRA_EVALUATIONS_FF_TMPL_PERIOD_ID[i]=300000007689014 then  /* enter the template period id for the latest template you want to refer in the formula*/\n   (\n    l_evaluation_id = HRA_EVALUATIONS_FF_EVALUATION_ID[i]\nL_temp = ESS_LOG_WRITE('l_evaluation_id: ' + to_char(l_evaluation_id) )\n\n   \nL_temp = ESS_LOG_WRITE('Rating Date: ' + to_char(HRA_EVAL_RATINGS_FF_CREATION_DATE[i]) )\nL_temp = ESS_LOG_WRITE('Rating Date: ' + to_char(HRA_RATING_FF_CREATION_DATE[i]) )\nL_temp = ESS_LOG_WRITE('Rating Date: ' + to_char(HRA_ITEM_RATINGS_FF_CREATION_DATE[i]) )\nL_temp = ESS_LOG_WRITE('Rating Date: ' + to_char(HRA_SECTION_RATING_FF_CREATION_DATE[i]) )\nL_temp = ESS_LOG_WRITE('Rating Date: ' + to_char(HRA_SECTIONS_RATINGS_CREATION_DATE[i]) )\nL_temp = ESS_LOG_WRITE('Rating Date: ' + to_char(HRA_EVALUATIONS_FF_LAST_UPDATE_DATE[i]) )\n\nIF(PER_GRADE_STEP_EFFECTIVE_START_DATE > HRA_EVALUATIONS_FF_LAST_UPDATE_DATE[i])\nTHEN\n(\nELIGIBLE = 'N'\nL_temp = ESS_LOG_WRITE('ELIGIBLE' + ELIGIBLE)\n)\n\n   )\n   i=i+1\n)\n\n\n\n\n\nACT_REASON = PER_ASG_ACTION_REASON_CODE\nACT_CODE = PER_ASG_ACTION_CODE\n\nL_temp = ESS_LOG_WRITE('Step Number: ' + to_char(l_Step_Seq) )\nL_temp = ESS_LOG_WRITE('Step Name: ' + l_Step_Name)\nL_temp = ESS_LOG_WRITE('Performance Rating: ' + to_char(l_perf_rating) )\nL_temp = ESS_LOG_WRITE('Calculated Rating: ' + to_char(l_calculated_rating) )\nL_temp = ESS_LOG_WRITE('Star Rating: ' + to_char(l_star_rating) )\nL_temp = ESS_LOG_WRITE('ELIGIBLE: ' + ELIGIBLE)\nL_temp = ESS_LOG_WRITE('Action Reason: ' + ACT_REASON)\nL_temp = ESS_LOG_WRITE('Action Code: ' + ACT_CODE)\nL_temp = ESS_LOG_WRITE('StepEntry Date: ' + to_char(PER_ASG_STEP_ENTRY_DATE))\nL_temp = ESS_LOG_WRITE('Step Date: ' + to_char(PER_GRADE_STEP_EFFECTIVE_START_DATE))\n\n\n\nreturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines employee eligibility based on their People Group Segment values.",
        "formula": "/*****************************************************************************\n\nChange History\n==============\nDate         Version   Author     Change Reason\n-----------  -------   ---------- -------------------------------\n09-Aug-2019  1.0     Suhas C     Initial Version\n\n*******************************************************************************/\n\n\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 IS ' '\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT3 IS ' '\nELIGIBLE='N'\n\n\n\nIF (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Teachers')\nOR (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Supply Teachers')\nOR (PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Unknown Grades-TCH')\nAND (PER_ASG_PEOPLE_GROUP_SEGMENT3 <> 'Casual Payment (Spinal Scale)')\n\nTHEN\n(\nELIGIBLE='Y'\n)\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an assignment number contains a specific character pattern after a hyphen. If the extracted two-character code matches any value from E0 to E9, it is assigned a numeric value of 1. Otherwise, the extracted value is converted to a number. If the final numeric value equals 4, the person is marked as eligible. The formula is likely used to determine eligibility based on assignment number classification.",
        "formula": "/* DEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 is 'X' */\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nELIGIBLE='N'\n\n/* contract = PER_ASG_PEOPLE_GROUP_SEGMENT1 */\nl_eff_date = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASG_NUMBER = 'X'\nASG_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASG_NUMBER,INSTR(ASG_NUMBER,'-',1,1)+1,2))\n\nif (ASG_CHAR = 'E0') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E1') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E2') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E3') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E4') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E5') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E6') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E7') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E8') then\n(\nASG_NUM = 1\n)\nelse if (ASG_CHAR = 'E9') then\n(\nASG_NUM = 1\n)\nelse\n(\nASG_NUM = to_number(ASG_CHAR)\n)\n\nif (ASG_NUM = 4) THEN\n(\nELIGIBLE='Y'\n)\n\nL_CUSTOM_MESSAGE = 'Y'\nL_CUSTOM_MESSAGE = ESS_LOG_WRITE('Assignment Number = ' || TO_CHAR(ASG_NUM))\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on location. If the location is 'LA', the person is marked as eligible; otherwise, they are not. It is likely used to check if an employee's work location qualifies them for a specific benefit, participation, or rate eligibility.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_NV_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula checks if an employee's work location is in 'FL' (Florida). If so, they are marked as eligible; otherwise, they are not. It is used to determine eligibility for a specific benefit, participation, or rate based on location.\n\n\n\n\n\n\n",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_FL_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula checks if an employee's work location is in 'VA' (Virginia). If so, they are marked as eligible; otherwise, they are not. It is used to determine eligibility for a specific benefit, participation, or rate based on location.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_VA_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula checks if an employee's work location is in 'PA' (Pennsylvania). If so, they are marked as eligible; otherwise, they are not. It is used to determine eligibility for a specific benefit, participation, or rate based on location.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_PA_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula checks if an employee's employment category is 'VW' (Volunteer Worker). If so, they are marked as eligible; otherwise, they are not. It is used to determine eligibility for benefits, participation, or rates specific to volunteer workers.\n\n\n\n\n\n\n",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_VOLUNTEER_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula checks if an employee's location is 'WI' (Wisconsin). If so, they are marked as eligible; otherwise, they are not. It is used to determine eligibility for benefits, participation, or rates specific to employees in Wisconsin.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_WI_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility for rehire cases based on rehire dates, termination dates, and legal employer changes. It checks whether an employee was rehired under a different legal employer and calculates if at least one year has passed since the last termination. If the employee was rehired under the same employer, it further evaluates the gap between the termination and rehire dates to confirm eligibility. The formula ensures that employees are only eligible if their rehire date aligns with a specific anniversary-based calculation.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_RehireCases\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility based on location. If the employee's assigned location is 'MO' (Missouri), they are marked as eligible. Otherwise, they remain ineligible.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_MO_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility based on location. If the employee's assigned location is 'CT' (Connecticut), they are marked as eligible. Otherwise, they remain ineligible.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_CT_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility for a paid time off plan based on an employee's location and background package. If the employee's location is \"Lafayette Home Office\" and their background package is \"Drug Screening\", they are marked as eligible. Otherwise, they remain ineligible.",
        "formula": "/* *******************************************************************\n * Formula Name     : LHC_ORC_ELIGIBILITY\n * Formula Type     : Participation and Rate Eligibility\n * Description      : To return eligibility 'Y' or 'N' for paid time off Plan participation\n *\n * Change History\n * --------------\n *\n * Who          Ver        Date        \n *-------------------------  ------  \n Thila K       1.0      09-FEB-2022   \n ***************************************************************************/ \n\n\n \nL_PRSON_ID(NUMBER)  =  get_context(PERSON_ID, 0)\nELIGIBLE = 'N'\n\nL_CONCAT = 'XX'\nL_CONCATINATION = 'YY'\n\nLOC_NAME = 'Lafayette Home Office'\nBKGROUND_PKG_NAME = 'Drug Screening'\n\nL_CONCAT = LOC_NAME||'_'||BKGROUND_PKG_NAME\n\nL_LOCATION_NAME = TRIM(GET_VALUE_SET('LHC_ORC_PERSON_LOCATION_NAME','|=L_PERSON_ID='||TO_CHAR(L_PRSON_ID)||'|'))\nL_BKGROUND_PKG_NAME = TRIM(GET_VALUE_SET('LHC_ORC_REG_ATTRIBUTE_VS','|=L_PERSON_ID='||TO_CHAR(L_PRSON_ID)||'|'))\n \nL_CONCATINATION = L_LOCATION_NAME||'_'||L_BKGROUND_PKG_NAME\n \n IF ( L_CONCAT = L_CONCATINATION) THEN\n       (\n            ELIGIBLE = 'Y'\n\t\t\t\n\t\t)\n\nl_debug=  ESS_LOG_WRITE('LHC_ORC_ELIGIBILITY'||'ELIGIBLE' || ELIGIBLE)\t\t\nl_debug=  ESS_LOG_WRITE('LHC_ORC_ELIGIBILITY'||'L_CONCAT'|| L_CONCAT)\t\t\nl_debug=  ESS_LOG_WRITE('LHC_ORC_ELIGIBILITY' ||'L_BKGROUND_PKG_NAME'|| L_BKGROUND_PKG_NAME)\t\t\n\nReturn ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on location. If an employee's location is \"CO\" (Colorado), they are marked as eligible. Otherwise, they remain ineligible.\n\n\n\n\n\n\n",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_CO_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility based on job role and work relation status",
        "formula": "DEFAULT FOR ACP_HIRE_DATE IS '1951/01/01 00:00:00'(date)\nDEFAULT FOR PER_ASG_ATTRIBUTE6 IS 'N'\nDEFAULT FOR PER_ASG_EFFECTIVE_START_DATE is '4712/12/31 00:00:00' (date)\nDEFAULT FOR PER_ASG_JOB_NAME IS 'TEXT'\nDEFAULT FOR PER_ASG_ACTION_CODE IS 'TEXT'\nDEFAULT FOR PER_ASG_PRIMARY_WORK_RELATION_FLAG IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE6 IS 'No'\n\n\nL_WORK_RELATION_PRIMARY_FLAG = PER_ASG_PRIMARY_WORK_RELATION_FLAG\nL_WORKER_ASSIGNMENT_JOB_NAME = PER_ASG_JOB_NAME\nl_Job_Description_Flag = 'No'\nl_Job_Description_Flag = PER_ASG_ATTRIBUTE6\n\nELIGIBLE = 'N'\n \nIF (L_WORK_RELATION_PRIMARY_FLAG = 'N' AND (l_Job_Description_Flag = 'No' OR l_Job_Description_Flag = 'Yes' OR l_Job_Description_Flag = ' ' ) AND (L_WORKER_ASSIGNMENT_JOB_NAME = 'Traveler RN - E' OR L_WORKER_ASSIGNMENT_JOB_NAME = 'Traveler PT - E' OR L_WORKER_ASSIGNMENT_JOB_NAME = 'Destination Travel Admin Support HH-E' OR L_WORKER_ASSIGNMENT_JOB_NAME = 'Destination Travel Support Supervisor HSP-E' OR L_WORKER_ASSIGNMENT_JOB_NAME = 'Destination Travel Support Supervisor HH - E' OR L_WORKER_ASSIGNMENT_JOB_NAME = 'Director of Destination Travel HH - E' OR L_WORKER_ASSIGNMENT_JOB_NAME = 'Destination Travel Administrative Coordinator - NE' OR L_WORKER_ASSIGNMENT_JOB_NAME = 'Travel RN HSP - E' OR L_WORKER_ASSIGNMENT_JOB_NAME = 'Destination Travel Admin Support HSP-E' OR L_WORKER_ASSIGNMENT_JOB_NAME = 'Destination Travel Support Specialist AZ - E' OR L_WORKER_ASSIGNMENT_JOB_NAME = 'Destination Travel Support Specialist HH-E' OR L_WORKER_ASSIGNMENT_JOB_NAME = 'Destination Travel Support Specialist HH-NE' OR L_WORKER_ASSIGNMENT_JOB_NAME = 'Destination Travel Support Specialist HSP-E'))\nTHEN\n\n(\n\nELIGIBLE = 'N'\n)\n\nELSE\n(\nELIGIBLE = 'Y'\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on the employee's location. If the employee's location code is 'WV' (West Virginia), they are marked as eligible ('Y'); otherwise, they remain ineligible ('N'). This is used to filter employees for location-based eligibility criteria.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_WV_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility based on the worker type. If the worker type is '300000000343123' or 'EMP' (Employee), the employee is marked as eligible ('Y'); otherwise, they remain ineligible ('N'). It is used to filter employees based on their worker type for participation and rate eligibility.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_EMPLOYEE_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility based on location. If the location is 'MA' (Massachusetts), the employee is marked as eligible ('Y'); otherwise, they remain ineligible ('N'). It is used to filter employees based on their assigned work location for participation and rate eligibility.\n\n\n\n\n\n\n",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_MA_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility based on location. If the location is 'MS' (Mississippi), the employee is marked as eligible ('Y'); otherwise, they remain ineligible ('N'). It is used to filter employees based on their assigned work location for participation and rate eligibility.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_MS_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility based on location. If the location is 'NV' (Nevada), the employee is marked as eligible ('Y'); otherwise, they remain ineligible ('N'). It is used to filter employees based on their assigned work location for participation and rate eligibility.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_NV_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility based on location. If the employee's location is 'DE' (Delaware), they are marked as eligible ('Y'); otherwise, they remain ineligible ('N'). It is used for participation and rate eligibility filtering based on work location.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_NV_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility based on location. If the employee's location is 'NJ' (New Jersey), they are marked as eligible ('Y'); otherwise, they remain ineligible ('N'). It is used for participation and rate eligibility filtering based on work location.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_NJ_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility based on location. If the employee's location is 'WA' (Washington), they are marked as eligible ('Y'); otherwise, they remain ineligible ('N'). It is used for participation and rate eligibility filtering based on work location.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_WA_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility based on location. If the employee's location is 'Louisiana', they are marked as eligible ('Y'); otherwise, they remain ineligible ('N'). It is used for participation and rate eligibility filtering based on work location.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_LU_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility for engagement conversations based on an employee's hire date. Employees are eligible during their first three months and then every three months (quarterly) thereafter. It applies only if the employee has a primary work relationship ('Y').",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_EngagementConversations\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their person type. By default, all employees are eligible ('Y'), but if the employee belongs to the Contingent Worker ('CWK') category, they become ineligible ('N').",
        "formula": "/*****************************************************************\nFORMULA TYPE: Participation and Rate Eligibility\n\n*****************************************************************/\n\nDEFAULT FOR PER_ASG_PERSON_ID IS 0\nDEFAULT FOR PER_ASG_PERSON_NUMBER IS 'A'\n\nl_proposed_per_type = 'XXX'\nL_PER_ID = TO_CHAR(PER_ASG_PERSON_ID)\n\nl_proposed_per_type = GET_VALUE_SET('NOV_REC_CWK_CHECKLIST_EXCL','|=PERSON_ID='''||L_PER_ID||'''')\nl_per_num = PER_ASG_PERSON_NUMBER\n\nELIGIBLE = 'Y'\n\nl_status=add_rlog (-1 , -1 ,'NOV_rec_eligb line 32 PERSON_NUMBER='||l_per_num||'-'||l_proposed_per_type||'-'||ELIGIBLE)\n\n\nIf (l_proposed_per_type = 'CWK' )then\n(\n  ELIGIBLE = 'N'\nl_status=add_rlog (-1 , -1 ,'NOV_rec_eligb line 38 PERSON_NUMBER='||l_per_num||'-'||l_proposed_per_type||'-'||ELIGIBLE)\n\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines Michigan PSL (Paid Sick Leave) eligibility based on various conditions related to an employee's work-at-home status, legal employer, home state, and assignment category.",
        "formula": "/*Michigan PSL eligibility*/\n\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='MI')\n\t\tAND (\n\t\t   l_Asg_cat='LOA Y PRN' \n\t\tOR l_Asg_cat='Leave Of Absence' \n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime')) \n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='Innovative Senior Care Home Health of Detroit LLC' \n\t\tOR l_legal_emp_name='Health at Home Hospice-Detroit LLC' \n\t\tOR l_legal_emp_name='Florida Physical Therapy Services of Miramar Beach LLC'\n\t\tOR l_legal_emp_name='Louisiana In-Home Partner-I LLC'\n\t\tOR l_legal_emp_name='Michigan In-Home Partner-III LLC'\n\t\tOR l_legal_emp_name='Michigan In-Home Partner-IV LLC'\n\t\tOR l_legal_emp_name='Michigan In-Home Partner-I LLC'\n\t\tOR l_legal_emp_name='Michigan In-Home Partner-II LLC'\n\t\t\n\t\t) \n\t\t\n\t\tAND (l_Home_state='MI')\n\t\tAND (\n\t\tl_Asg_cat='LOA Y PRN' \n\t\tOR l_Asg_cat='Leave Of Absence' \n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for a 90-day evaluation based on rehire date or job change records. If there is no prior evaluation record, it checks whether 60 days have passed since the rehire date and matches it with the current date. If a prior evaluation record exists, it verifies if the current date matches that recorded evaluation date. If either condition is met, the employee is marked as eligible.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_90DayEvaluation\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula checks if an employee is eligible for an anniversary-related evaluation based on their hire or rehire date. If there is no termination date, it determines if the current date is 30 days before the yearly anniversary of the hire date. If a previous evaluation record exists, it verifies if the current date matches the recorded evaluation date in any eligible year. If either condition is met, the employee is marked as eligible.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_HireDateAnniversary\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their worker type. If the worker type matches either '300000000343122' or 'CWK' (indicating a contingent worker), the employee is marked as eligible. The formula also logs the worker type for tracking purposes.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_CONTINGENT_FF2\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines an employee's eligibility for Colorado Paid Sick Leave (PSL) based on specific employment conditions. It checks if the employee works from home in Colorado under \"LHC Group Inc.\" or is employed by specific legal entities while residing in Colorado. The assignment category must match one of the predefined categories (e.g., full-time, part-time, PRN, or leave of absence). If all conditions are met, the employee is marked as eligible. The formula iterates through multiple work relationships to ensure the correct employment details are considered.",
        "formula": "/*Colorado PSL eligibility*/\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='CO')\n\t\tAND (\n\t\tl_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='Full-time regular'\n\t\tOR l_Asg_cat='Leave Of Absence'\n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y PRN'\n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)) \n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='LHCG LVII LLC' \n\t\tOR l_legal_emp_name='LHCG CLXIII LLC' \n\t\tOR l_legal_emp_name='Colorado In-Home Partner-I LLC' \n\t\t) \n\t\t\n\t\tAND (l_Home_state='CO')\n\t\tAND (\n\t\tl_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='Full-time regular'\n\t\tOR l_Asg_cat='Leave Of Absence'\n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y PRN'\n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines an employee's eligibility for Connecticut Paid Sick Leave (PSL) based on specific employment conditions. It checks if the employee works from home in Connecticut under \"LHC Group Inc.\" or is employed by certain healthcare-related legal entities while residing in Connecticut. The assignment category must match one of the predefined categories (e.g., part-time, PRN, or leave of absence). The formula iterates through multiple work relationships to verify employment details. If all conditions are met, the employee is marked as eligible.",
        "formula": "/*Connecticut PSL eligibility*/\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='CT')\n\t\tAND (\n\t\tl_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='Leave Of Absence'\n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y PRN'\n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime')) \n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='Adult Day Care of America Inc' \n\t\tOR l_legal_emp_name='Innovative Senior Care Home Health of Hartford LLC' \n\t\tOR l_legal_emp_name='Priority Care Inc' \n\t\tOR l_legal_emp_name='Connecticut Home Health Care Inc'\n\t\tOR l_legal_emp_name='Patient Care HHA LLC'\n\t\t) \n\t\t\n\t\tAND (l_Home_state='CT')\n\t\tAND (\n\t\tl_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='Leave Of Absence'\n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y PRN'\n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines an employee's eligibility for New Jersey Paid Sick Leave (PSL) based on their employment details.",
        "formula": "/*NJ PSL eligibility*/\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='NJ')\n\t\tAND (\n\t\tl_Asg_cat='LOA Y PRN' \n\t\tOR l_Asg_cat='Leave Of Absence' \n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime' \n\t\t)) \n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='LHCG CXLV LLC' \n\t\tOR l_legal_emp_name='LHCG CXLIV LLC' \n\t\tOR l_legal_emp_name='Patient Care of Hudson County LLC' \n\t\tOR l_legal_emp_name='Health at Home Therapy-New Jersey LLC'\n\t\tOR l_legal_emp_name='Patient Care New Jersey Inc'\n\t\tOR l_legal_emp_name='Patient Care Medical Services Inc'\n\t\t\t\t) \n\t\t\n\t\tAND (l_Home_state='NJ')\n\t\tAND (\n\t\tl_Asg_cat='LOA Y PRN' \n\t\tOR l_Asg_cat='Leave Of Absence' \n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime' \n\t\t)))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee qualifies for New York Paid Sick Leave (PSL). It checks if the employee has a primary work relationship and either works from home in New York for LHC Group Inc. or works for one of the listed New York-based healthcare organizations. The employee must also belong to one of the eligible employment categories, including part-time, PRN, leave of absence, or intermittent leave. If all conditions are met, the employee is marked as eligible. The formula also logs relevant details for auditing.",
        "formula": "/*NY PSL eligibility*/\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='NY')\n\t\tAND (\n\t\tl_Asg_cat='LOA Y PRN' \n\t\tOR l_Asg_cat='Leave Of Absence' \n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)) \n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='Willcare Inc' \n\t\tOR l_legal_emp_name='Western Region Health Corporation' \n\t\tOR l_legal_emp_name='Litson Certified Care Inc' \n\t\t\n\t\t\t\t) \n\t\t\n\t\tAND (l_Home_state='NY')\n\t\tAND (\n\t\tl_Asg_cat='LOA Y PRN' \n\t\tOR l_Asg_cat='Leave Of Absence' \n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee qualifies for Oregon Paid Sick Leave (PSL). It checks if the employee has a primary work relationship and either works from home in Oregon for LHC Group Inc. or works for one of the listed Oregon-based healthcare organizations. The home state must be Oregon in at least one of the conditions. If these criteria are met, the employee is marked as eligible. The formula also logs relevant details for auditing.\n\n\n\n\n\n\n",
        "formula": "/*OR PSL eligibility*/\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='OR')\n\t\t) \n\n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='Salem Home Care LLC' \n\t\tOR l_legal_emp_name='Innovative Senior Care Home Health of Portland LLC'\n                OR l_legal_emp_name='Heart N Home Hospice and Palliative LLC' \n\t\tOR l_legal_emp_name='Salem Home Care LLC'  \n\t\tOR l_legal_emp_name='Health at Home Hospice-Portland LLC'\n\t\tOR l_legal_emp_name='Three Rivers HomeCare LLC'\n\t\t\n\t\t\t\t) \n\t\t\n\t\tAND (l_Home_state='OR' OR PER_PER_HOME_ADDR_REGION_2 ='OR')\n\t\t))\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for Washington Paid Sick Leave (PSL). It checks if the employee has a primary work relationship and either works from home in Washington for LHC Group Inc. or works for one of the listed Washington-based healthcare organizations. The employee must also have an assignment category like PRN, Part-Time, or Leave of Absence. If these conditions are met, the employee is marked as eligible, and relevant details are logged.\n\n\n\n\n\n\n",
        "formula": "/*WA PSL eligibility*/\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='WA')\n\t\tAND (\n\t\tl_Asg_cat='LOA Y PRN' \n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)) \n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='Northwest Healthcare Alliance Inc' \n\t\tOR l_legal_emp_name='LHCG LXIII LLC' \n\t\tOR l_legal_emp_name='Northeast Washington Home Health Inc' \n\t\tOR l_legal_emp_name='Spokane Home Care Services LLC'\n\t\tOR l_legal_emp_name='Health at Home-Seattle Metro LLC'\n\t\t\t\t) \n\t\t\n\t\tAND (l_Home_state='WA')\n\t\tAND (\n\t\tl_Asg_cat='LOA Y PRN' \n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    ) \n    i = i + 1\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines New Mexico Paid Sick Leave (PSL) eligibility. It checks if the employee has a primary work relationship and either works from home in New Mexico for LHC Group Inc. or works for Innovative Senior Care Home Health of Albuquerque LLC. If these conditions are met, the employee is marked as eligible, and relevant details are logged.",
        "formula": "/*NM PSL eligibility*/\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='NM')\n\t\t) \n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='Innovative Senior Care Home Health of Albuquerque LLC' \n\t\t\n\t\t\t\t) \n\t\t\n\t\tAND (l_Home_state='NM')\n\t\t))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines California Paid Sick Leave (PSL) eligibility. It checks if an employee has a primary work relationship",
        "formula": "/*California PSL eligibility*/\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='CA')\n\t\tAND (\n\t\t   l_Asg_cat='Full-time' \n\t\tOR l_Asg_cat='Full Time Benefits' \n\t\tOR l_Asg_cat='Full-time regular' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='LTACH Only FTNB'\n\t\tOR l_Asg_cat='LOA Y Fulltime'\n\t\tOR l_Asg_cat='Leave Of Absence'\n\t\tOR l_Asg_cat='FT Leave Of Absence'\n\t\tOR l_Asg_cat='FT Intermittent or Lt Duty LOA')) \n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='Health at Home Hospice-Sacramento LLC' \n\t\tOR l_legal_emp_name='Health at Home-Sonoma LLC' \n\t\tOR l_legal_emp_name='LHCG XXXVIII LLC' \n\t\t) \n\t\t\n\t\tAND (l_Home_state='CA')\n\t\tAND (\n\t\tl_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='LTACH Only FTNB' \n\t\tOR l_Asg_cat='Full-time' \n\t\tOR l_Asg_cat='Full Time Benefits' \n\t\tOR l_Asg_cat='Full-time regular'\n\t\tOR l_Asg_cat='LOA Y Fulltime'\n\t\tOR l_Asg_cat='Leave Of Absence'\n\t\tOR l_Asg_cat='FT Leave Of Absence'\n\t\tOR l_Asg_cat='FT Intermittent or Lt Duty LOA')))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines Cook County, Illinois Paid Sick Leave (PSL) eligibility for employees. It checks if an employee has a primary work relationship",
        "formula": "/*Cooks County PSL eligibility*/\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='IL')\n\t\tAND (\n\t\tl_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='Leave Of Absence'\n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y PRN'\n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)) \n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='LHCG XXXVII LLC'\n\t\tOR l_legal_emp_name='Waukegan Hospice LLC'\n\t\t\t\t) \n\t\t\n\t\tAND (l_Home_state='IL')\n\t\tAND (\n\t\tl_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='Leave Of Absence'\n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y PRN'\n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines Massachusetts Paid Sick Leave (PSL) eligibility for employees. It checks if an employee has a primary work relationship ",
        "formula": "/*Massachusetts PSL eligibility*/\n\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND (l_legal_emp_name='LHC Group Inc')AND l_Home_state='MA')\n\t\tAND (\n\t\t   l_Asg_cat='Full-time' \n\t\tOR l_Asg_cat='Full Time Benefits' \n\t\tOR l_Asg_cat='Full-time regular' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='LTACH Only FTNB'\n\t\tOR l_Asg_cat='LOA Y Fulltime'\n\t\tOR l_Asg_cat='FT Leave Of Absence'\n\t\tOR l_Asg_cat='FT Intermittent or Lt Duty LOA'\n\t\t)) \n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='Caretenders VS of Boston LLC' \n\t\tOR l_legal_emp_name='Advanced Care House Calls of Massachusetts LLC' \n        OR l_legal_emp_name='Massachusetts Physical Therapy Services of Framingham LLC' \n\t\tOR l_legal_emp_name='Massachusetts Physical Therapy Services of Quincy Bay LLC' \n\t\tOR l_legal_emp_name='Three Rivers HomeCare LLC'\n\t\tOR l_legal_emp_name='Innovative Senior Care Home Health of Boston LLC'\n\t\tOR l_legal_emp_name='Almost Family Inc' \n\t\t) \n\t\t\n\t\tAND (l_Home_state='MA')\n\t\tAND (\n\t\tl_Asg_cat='Full-time' \n\t\tOR l_Asg_cat='Full Time Benefits' \n\t\tOR l_Asg_cat='Full-time regular' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='LTACH Only FTNB'\n\t\tOR l_Asg_cat='LOA Y Fulltime'\n\t\tOR l_Asg_cat='FT Leave Of Absence'\n\t\tOR l_Asg_cat='FT Intermittent or Lt Duty LOA'\n\t\t)))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines Maryland Paid Sick Leave (PSL) eligibility for employees. It checks if an employee has a primary work relationship ",
        "formula": "/*Maryland PSL eligibility*/\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='MD')\n\t\tAND (\n\t\tl_Asg_cat='LOA Y PRN' \n\t\tOR l_Asg_cat='Leave Of Absence' \n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime' \n\t\t)) \n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='HomeCall Inc' \n\t\tOR l_legal_emp_name='Maryland Physical Therapy Services of Frederick LLC' \n\t\tOR l_legal_emp_name='LHCG CL LLC' \n\t\tOR l_legal_emp_name='LHCG CXLIX LLC'\n                OR l_legal_emp_name='LHCG CCXXV LLC'\n                OR l_legal_emp_name='Chester River Home Care & Hospice LLC'\n\t\t\t\t) \n\t\t\n\t\tAND (l_Home_state='MD')\n\t\tAND (\n\t\tl_Asg_cat='LOA Y PRN' \n\t\tOR l_Asg_cat='Leave Of Absence' \n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines New York Domestic Paid Sick Leave (PSL) eligibility for employees. It checks if an employee has a primary work relationship ",
        "formula": "/* NY DOM PSL eligibility*/\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='NY')\n\t\tAND (\n\t\tl_Asg_cat='LOA Y PRN' \n\t\tOR l_Asg_cat='Leave Of Absence' \n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)) \n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='Willcare Inc' \n\t\tOR l_legal_emp_name='Western Region Health Corporation' \n\t\tOR l_legal_emp_name='Litson Certified Care Inc' \n\t\t) \n\t\t\n\t\tAND (l_Home_state='NY')\n\t\tAND (\n\t\tl_Asg_cat='LOA Y PRN' \n\t\tOR l_Asg_cat='Leave Of Absence' \n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for California Paid Sick Leave (PSL) for non-exempt employees. It checks if an employee has a primary work relationship ",
        "formula": "/*California PSL Non Exempt eligibility*/\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='CA')\n\t\tAND (\n\t\t   l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='LTACH Only FTNB' \n\t\tOR l_Asg_cat='Full-time' \n\t\tOR l_Asg_cat='Full Time Benefits' \n\t\tOR l_Asg_cat='Full-time regular'\n\t\tOR l_Asg_cat='LOA Y Fulltime'\n\t\tOR l_Asg_cat='Leave Of Absence'\n\t\tOR l_Asg_cat='FT Leave Of Absence'\n\t\tOR l_Asg_cat='FT Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y PRN'\n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime')) \n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='Health at Home Hospice-Sacramento LLC' \n\t\tOR l_legal_emp_name='Health at Home-Sonoma LLC' \n\t\tOR l_legal_emp_name='LHCG XXXVIII LLC' \n                OR l_legal_emp_name='LHC California Home Health I LLC'\n\t\t) \n\t\t\n\t\tAND (l_Home_state='CA')\n\t\tAND (\n\t\tl_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='LTACH Only FTNB' \n\t\tOR l_Asg_cat='Full-time' \n\t\tOR l_Asg_cat='Full Time Benefits' \n\t\tOR l_Asg_cat='Full-time regular'\n\t\tOR l_Asg_cat='LOA Y Fulltime'\n\t\tOR l_Asg_cat='Leave Of Absence'\n\t\tOR l_Asg_cat='FT Leave Of Absence'\n\t\tOR l_Asg_cat='FT Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y PRN'\n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime')))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for Massachusetts Paid Sick Leave (PSL) for non-exempt employees. It checks if an employee has a primary work relationship ",
        "formula": "/*Massachusetts NE PSL eligibility*/\n\nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND (l_legal_emp_name='LHC Group Inc') AND l_Home_state='MA')\n\t\tAND (\n\t\t   l_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='LTACH Only FTNB' \n\t\tOR l_Asg_cat='Full-time' \n\t\tOR l_Asg_cat='Full Time Benefits' \n\t\tOR l_Asg_cat='Full-time regular'\n\t\tOR l_Asg_cat='LOA Y Fulltime'\n\t\tOR l_Asg_cat='Leave Of Absence'\n\t\tOR l_Asg_cat='FT Leave Of Absence'\n\t\tOR l_Asg_cat='FT Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y PRN'\n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)) \n\t\t\n\t\tOR  \n\t\t\n\t\t((\n\t\tl_legal_emp_name='Caretenders VS of Boston LLC' \n\t\tOR l_legal_emp_name='Advanced Care House Calls of Massachusetts LLC' \n        OR l_legal_emp_name='Massachusetts Physical Therapy Services of Framingham LLC' \n\t\tOR l_legal_emp_name='Massachusetts Physical Therapy Services of Quincy Bay LLC' \n\t\tOR l_legal_emp_name='Three Rivers HomeCare LLC'\n\t\tOR l_legal_emp_name='Innovative Senior Care Home Health of Boston LLC' \n\t\tOR l_legal_emp_name='Almost Family Inc'\n\t\t) \n\t\t\n\t\tAND (l_Home_state='MA')\n\t\tAND (\n\t\tl_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='PRN' \n\t\tOR l_Asg_cat='LTACH Only FTNB' \n\t\tOR l_Asg_cat='Full-time' \n\t\tOR l_Asg_cat='Full Time Benefits' \n\t\tOR l_Asg_cat='Full-time regular'\n\t\tOR l_Asg_cat='LOA Y Fulltime'\n\t\tOR l_Asg_cat='Leave Of Absence'\n\t\tOR l_Asg_cat='FT Leave Of Absence'\n\t\tOR l_Asg_cat='FT Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y PRN'\n\t\tOR l_Asg_cat='PT/PRN Leave Of Absence'\n\t\tOR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\tOR l_Asg_cat='LOA Y Parttime'\n\t\t)))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for Massachusetts Paid Sick Leave (PSL) for non-exempt employees. It checks if an employee has a primary work relationship",
        "formula": "/*Illinois Paid Sick Leave eligibility\n\n-------------------------------------------------------------------------------\nVignesh                  18-Mar-2024\n*******************************************************************************/\n \nDEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t/*((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='IL')*/\n\t\t((l_Home_state='IL')\n\t\tAND (\n\t\tl_Asg_cat='Part Time 30 Plus' \n\t\tOR l_Asg_cat='Part Time' \n\t\tOR l_Asg_cat='PRN 30 Plus' \n\t\tOR l_Asg_cat='PRN' \n\t\t/*OR l_Asg_cat='Leave Of Absence'\n\t\t OR l_Asg_cat='Intermittent or Lt Duty LOA'*/\n\t\t OR l_Asg_cat='LOA Y PRN'\n\t\t OR l_Asg_cat='PT/PRN Leave Of Absence'\n\t\t OR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA'\n\t\t OR l_Asg_cat='LOA Y Parttime'\n\t\t)))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_IL_PAID_SICK'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_IL_PAID_SICK'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_IL_PAID_SICK'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_IL_PAID_SICK'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_IL_PAID_SICK'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks eligibility for quarterly check-ins based on an employee's hire date. Employees become eligible every 3 months from their hire date if they have a primary work relationship. The logic calculates the total months of service and checks if it is a multiple of 3. If true, the employee is marked eligible for that quarter.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_QuarterlyCheckin\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility based on location. If an employee's work location is in Kentucky (KY), they are marked as eligible. Otherwise, they remain ineligible.\n\n\n\n\n\n\n",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_FL_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility based on location. If an employee's work location is in Texas (TX), they are marked as eligible. Otherwise, they remain ineligible.",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_TX_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula checks an employee's work location and determines eligibility. If the employee is located in California (CA), they are marked as eligible; otherwise, they remain ineligible.\n\n\n\n\n\n\n",
        "formula": "/******************************************************************************\nFORMULA NAME: LHC_CA_LOC_ELIGIBILITY_FF\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION :"
    },
    {
        "prompt": "This formula determines eligibility for an Arizona Paid Sick Leave (PSL) policy based on work-from-home status, employer, home state, and employment category. ",
        "formula": "DEFAULT FOR PER_ASG_WORK_AT_HOME IS 'XX'\nDEFAULT FOR PER_ORG_LEGAL_EMP_NAME IS 'XX'\nDEFAULT FOR PER_PER_HOME_ADDR_REGION_2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_CATEGORY IS 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PRIMARY_FLAG IS 'XX'\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERSON_ID is 0\nDEFAULT FOR PER_WORKER_ASSIGNMENT_PRIMARY_ASSIGNMENT_FLAG IS 'xx'\nDEFAULT FOR PER_ASG_PERIOD_OF_SERVICE_ID is 0\nDEFAULT FOR PER_ASG_PERSON_ID is 0\nDEFAULT_DATA_VALUE FOR PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID is 0\n\nELIGIBLE = 'N'\n\nl_work_at_home=PER_ASG_WORK_AT_HOME\nl_legal_emp_name=PER_ORG_LEGAL_EMP_NAME\nl_Home_state=PER_PER_HOME_ADDR_REGION_2\nl_Asg_cat=PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING\nl_person_id = PER_ASG_PERSON_ID\nl_ppos_id = PER_ASG_PERIOD_OF_SERVICE_ID\n\ni = 1\nCHANGE_CONTEXTS(PERSON_ID=l_person_id)\n(\nWhile PER_EXT_WORK_REL_PRIMARY_FLAG.EXISTS(i)\nLoop\n(\n    if (PER_EXT_WORK_REL_PRIMARY_FLAG[i] = 'Y' \n        AND PER_EXT_WORK_REL_PERSON_ID[i] = l_person_id\n        AND PER_EXT_WORK_REL_PERIOD_OF_SERVICE_ID[i] = l_ppos_id\n\t\tAND (\n\t\t((l_work_at_home='Y' AND l_legal_emp_name='LHC Group Inc' AND l_Home_state='AZ')\n\t\tAND (l_Asg_cat='Part Time 30 Plus' OR l_Asg_cat='Part Time' OR l_Asg_cat='PRN 30 Plus' OR l_Asg_cat='PRN' OR l_Asg_cat='Intermittent or Lt Duty LOA' OR l_Asg_cat='LOA Y PRN' OR l_Asg_cat='Leave Of Absence' OR l_Asg_cat='PT/PRN Leave Of Absence' OR l_Asg_cat='LOA Y Parttime' OR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA')) \n\t\tOR  \n\t\t((l_legal_emp_name='LHCG LVI LLC' OR l_legal_emp_name='Health at Home Hospice-Phoenix LLC' OR l_legal_emp_name='LHCG CXCVI LLC' OR l_legal_emp_name='LHCG CCII LLC' OR l_legal_emp_name='Arizona In-Home Partner-III LLC' OR l_legal_emp_name='LHCG CLXXI LLC' OR l_legal_emp_name='LHCG CLXXII LLC' OR l_legal_emp_name='Arizona In-Home Partner-I LLC' OR l_legal_emp_name='LHCG LXXVII LLC' OR l_legal_emp_name='Tucson Home Care Services LLC' OR l_legal_emp_name='Nurse On Call of Arizona LLC' OR l_legal_emp_name='Arizona In-Home Partner-II LLC') \n\t\tAND (l_Home_state='AZ')\n\t\tAND (l_Asg_cat='Part Time 30 Plus' OR l_Asg_cat='Part Time' OR l_Asg_cat='PRN 30 Plus' OR l_Asg_cat='PRN'OR l_Asg_cat='Intermittent or Lt Duty LOA' OR l_Asg_cat='LOA Y PRN' OR l_Asg_cat='Leave Of Absence' OR l_Asg_cat='PT/PRN Leave Of Absence' OR l_Asg_cat='LOA Y Parttime' OR l_Asg_cat='PT/PRN Intermittent or Lt Duty LOA')))\n\n)\n\nthen \n(\nELIGIBLE = 'Y'\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'l_work_at_home Flag :'|| PER_ASG_WORK_AT_HOME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'Legal Employer :'|| PER_ORG_LEGAL_EMP_NAME)\nr=  ESS_LOG_WRITE('LHC_CT_PSL_SEC_ELG'|| 'State : '|| PER_PER_HOME_ADDR_REGION_2)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_ATTRIBUTE_CATEGORY)\nr=  ESS_LOG_WRITE('LHC_NY_PSL_SEC_ELG'|| 'Asignemnt Category: '|| PER_ASG_EMPLOYMENT_CATEGORY_LOOKUP_MEANING)\nEXIT\n    )\n    \n    i = i + 1\n\n\n)\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks eligibility for a career-related benefit based on a predefined value set. It retrieves the person ID and looks up their eligibility using the SC_ABS_CAREER_ELIGIBLE value set. If the value is 'Y', the person is marked eligible; otherwise, they remain ineligible.",
        "formula": "l_person_id=GET_CONTEXT(PERSON_ID,0)\nEligible = 'N'\nFlexi = GET_VALUE_SET('SC_ABS_CAREER_ELIGIBLE','|=P_PERSON_ID=' || to_char(l_person_id))\nl_debug = ess_log_write('Flexi Eligible  = '||(Flexi ))\n \nIf Flexi = 'Y' then \n(\nEligible = 'Y'\n) \nReturn Eligible"
    },
    {
        "prompt": "This formula determines eligibility for a tuition-related benefit by retrieving the person ID and checking their status in the SC_ABS_TU_ELIGIBLE value set. The eligibility result is logged, and the retrieved value (either 'Y' or 'N') is returned.",
        "formula": "l_person_id=GET_CONTEXT(PERSON_ID,0)\n\nEligible = 'N'\nEligible = GET_VALUE_SET('SC_ABS_TU_ELIGIBLE','|=P_PERSON_ID=' || to_char(l_person_id))\nl_debug = ess_log_write('TU Eligible  = '||(Eligible))\n\nReturn Eligible"
    },
    {
        "prompt": "This formula checks if an employee's grade name starts with 'G' to determine eligibility. If the grade name matches the condition, the person is marked eligible ('Y'); otherwise, they remain ineligible ('N'). The grade name is also logged for debugging purposes.",
        "formula": "DEFAULT FOR PER_ASG_USER_PERSON_TYPE IS 'NULL'\nDEFAULT FOR PER_ASG_GRADE_NAME is 'NULL'\n\nEligible ='N'\n\nl_debug = ess_log_write(' PER_ASG_GRADE_NAME = ' || PER_ASG_GRADE_NAME)\n\nIF PER_ASG_GRADE_NAME like 'G%' THEN\n(Eligible = 'Y')\n\nReturn Eligible"
    },
    {
        "prompt": "This formula determines eligibility based on the primary assignment flag.",
        "formula": "/******************************************************************************\n  Formula Name    : Primary Assignment Eligibility Formula \n  Formula Type    : Participation and Rate Eligibility\n  Creation Date   : 28-Jul-2021\n  Created By      : Rahul Raj\n  Description     : Eligibility formula for primary assignment\n*****************************************************************************/\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_PRIMARY_FLAG is 'N'\n\nELIGIBLE='N'\n\nl_debug = ess_log_write('In Primary Asg Flag Formula')\nl_debug = ess_log_write('Asg Number: '+PER_ASG_ASSIGNMENT_NUMBER)\nl_debug = ess_log_write('Flag: '+PER_ASG_PRIMARY_FLAG)\n\nIF PER_ASG_PRIMARY_FLAG = 'Y' THEN\n    ELIGIBLE = 'Y'\n    \nl_debug = ess_log_write('Eligibility: ' + ELIGIBLE)    \n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on the input status.",
        "formula": "INPUTS ARE STATUS(text)\nDEFAULT FOR L_STATUS IS 'REJ'\nL_STATUS = STATUS\nELIGIBLE = 'N'\nIF L_STATUS = 'COM' THEN\n(\nELIGIBLE = 'Y'\n)\nELSE\n(\nELIGIBLE = 'N'\n)\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility based on the status of a process. If the status is \"REJ\" (Rejected), the person is marked as eligible. For any other status, they are not eligible. The logic suggests that eligibility is granted only when an application or request is rejected. This could be used in scenarios where rejection qualifies someone for an alternative process, appeal, or reassessment.",
        "formula": "INPUTS ARE STATUS(text)\nDEFAULT FOR L_STATUS IS 'COM'\nL_STATUS = STATUS\nELIGIBLE = 'N'\nIF L_STATUS = 'REJ' THEN\n(\nELIGIBLE = 'Y'\n)\nELSE\n(\nELIGIBLE = 'N'\n)\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if a person is eligible based on their job classification and a numeric attribute. If the numeric attribute is 52.20 and the person falls into one of these categoriesâ€”Employee, Officers, Modern Apprentice, or Associated Professionalsâ€”they are marked as eligible. Otherwise, they are not eligible. This logic ensures that only specific job roles with a defined attribute value qualify for a particular program or benefit.",
        "formula": "DEFAULT FOR PER_ASG_USER_PERSON_TYPE IS 'NULL'\nDEFAULT FOR PER_ASG_ATTRIBUTE_NUMBER1 is 0\n\nEligible ='N'\n\nIF \n((PER_ASG_ATTRIBUTE_NUMBER1 = 52.20)\nAND\n(UPPER(PER_ASG_USER_PERSON_TYPE) = UPPER('Employee') \nOR UPPER(PER_ASG_USER_PERSON_TYPE) = UPPER('Officers')\nOR UPPER(PER_ASG_USER_PERSON_TYPE) = UPPER('Modern Apprentice')\nOR UPPER(PER_ASG_USER_PERSON_TYPE) = UPPER('Associated Professionals')))\n\nThen\nEligible ='Y'\n\nReturn Eligible"
    },
    {
        "prompt": "This formula determines eligibility based on a predefined value set. It retrieves a person's eligibility status from the SC_ABS_FLEXI_ELIGIBLE value set using their Person ID. If the retrieved value is 'Y', the person is marked as eligible; otherwise, they are not eligible. This logic is used to check if a person qualifies for a flexible working arrangement or benefit based on predefined system rules.",
        "formula": "l_person_id=GET_CONTEXT(PERSON_ID,0)\nEligible = 'N'\nFlexi = GET_VALUE_SET('SC_ABS_FLEXI_ELIGIBLE','|=P_PERSON_ID=' || to_char(l_person_id))\nl_debug = ess_log_write('Flexi Eligible  = '||(Flexi ))\n \nIf Flexi = 'Y' then \n(\nEligible = 'Y'\n) \nReturn Eligible"
    },
    {
        "prompt": "This formula determines eligibility for grade step progression based on length of service and performance rating. If an employee has at least 6 months of service, is not at the ceiling step of their grade, and has a qualifying performance rating (such as strong performer, aspirational performer, or being on certain types of leave), they are eligible for progression. The system logs key details like start date, service duration, grade, and eligibility status for reference.\n\n\n\n\n\n\n",
        "formula": "DEFAULT FOR ACP_HIRE_DATE IS '0001/01/01 00:00:00' (date)\nDEFAULT FOR PER_ASG_REL_DATE_START IS '0001/01/01 00:00:00' (date)\nDEFAULT FOR PER_ASG_CONTRACT_ATTRIBUTE_DATE1 is '0001/01/01 00:00:00' (date)\nDEFAULT FOR PER_ASG_GRADE_CODE IS 'XX'\nDEFAULT FOR PER_GRADE_STEP_NAME IS '99'\nDEFAULT FOR PER_ASG_ATTRIBUTE1 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE18 is 'X'\n\nCurrent_date=get_context(effective_date, '0001/01/01 00:00:00'(date))\nAsg_step=PER_GRADE_STEP_NAME\nService_days=0\nl_start_dt='0001/01/01 00:00:00' (date)\nPERFORMANCE_RATING = PER_ASG_ATTRIBUTE2\n\nl_log = 'X'\n\nl_start_dt = PER_ASG_REL_DATE_START\n\nService_days = MONTHS_BETWEEN(Current_date,l_start_dt)\n\nGrade_Code = PER_ASG_GRADE_CODE\n\nCeiling_Step = GET_VALUE_SET('GET_SPINAL_CEILING','|=L_GRADE='''||Grade_Code||'''')\n\n\nIf (Service_days=>6 AND Asg_step<>Ceiling_Step AND \n(PERFORMANCE_RATING = 'Strong performer' \nOR \nPERFORMANCE_RATING = 'Aspirational performer'\nOR\nPERFORMANCE_RATING = 'Consistent performer'\nOR\nPERFORMANCE_RATING = 'Developing performer'\nOR\nPERFORMANCE_RATING = 'Rising performer'\nOR\nPERFORMANCE_RATING = 'Strong developer performer'\nOR\nPERFORMANCE_RATING = 'On long term leave'\nOR\nPERFORMANCE_RATING = 'On long term sick'\nOR\nPERFORMANCE_RATING = 'On maternity, adoption or shared parental leave'\nOR\nPERFORMANCE_RATING = 'On secondment'))\n\nTHEN\n(\nL_ELIGIBLE='Y'\n)\nELSE\n(\nL_ELIGIBLE='N'\n)\n\n\nl_log = ESS_LOG_WRITE(' Assignment Start Date: ' + to_char(l_start_dt))\nl_log = ESS_LOG_WRITE(' Length of Service: ' + to_char(Service_days))\nl_log = ESS_LOG_WRITE(' Assignment Grade Code: ' + (Grade_Code))\nl_log = ESS_LOG_WRITE(' Grade Ceiling Step: ' + (Ceiling_Step))\nl_log = ESS_LOG_WRITE(' Assignment Grade Code: ' + (PERFORMANCE_RATING))\nl_log = ESS_LOG_WRITE(' Eligibility Status: ' + (L_ELIGIBLE))\n\nL_ELIGIBLE = 'Y'\n\nELIGIBLE=L_ELIGIBLE\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for SCC NHS staff based on employment category, collective agreement, and work hours. Employees covered under Uniformed Fire, Teachers, or Teachers: EOTAS agreements, those categorized as Casual employees, or those with zero normal working hours are not eligible. Additionally, employees with annual weeks less than 52.143 are also not eligible. If none of these conditions apply, the employee remains eligible.",
        "formula": "/**********************************************\nFORMULA NAME: SCC NHS Staff Eligibility\nFORMULA TYPE: Participant Eligibility\nDESCRIPTION: Eligibility criteria for SCC NHS Staff\n\nSunil Hatte\nChange History:\n**********************************************/\n\n\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'XX'\nDEFAULT FOR PER_ASG_EMPLOYMENT_CATEGORY_MEANING is 'XX'\nDEFAULT FOR PER_ASG_NORMAL_HOURS    is 0\nDEFAULT FOR PER_ASG_ATTRIBUTE3 is '52.143'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'FSAF'\n\ncollective_agreement = 'x'\ncollective_agreement = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\n\n\nELIGIBLE= 'Y'\n\nAnnual_weeks = To_number(PER_ASG_ATTRIBUTE3)\n\n\n\n\nif ( collective_agreement = 'Uniformed Fire' or collective_agreement = 'Teachers' or collective_agreement = 'Teachers: EOTAS' or PER_ASG_EMPLOYMENT_CATEGORY_MEANING = 'Casual' or PER_ASG_NORMAL_HOURS=0 ) then\n\t(\n\t ELIGIBLE = 'N'\n\t)\n\tif( Annual_weeks > 0 and Annual_weeks< 52.143) then\n\t(\n\tELIGIBLE = 'N'\n\t)\n\n\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines an employee's eligibility for a rolling year plan based on their assignment number and contract type. It extracts a portion of the assignment number and checks if it falls within a specific range. If the extracted value matches a predefined condition and the contract type belongs to a list of accepted categories, the employee is marked as eligible. The contract type is retrieved from a lookup table based on the effective date. The formula ultimately returns whether the employee qualifies for the plan.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 4) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines an employee's eligibility for a fixed-year plan based on their contract type and assignment number. It extracts a portion of the assignment number and checks if it matches a predefined value. The contract type is retrieved from a lookup table based on the effective date. If the contract type is \"Teachers\" and the extracted assignment number equals 10, the employee is marked as eligible. The formula ultimately returns whether the employee qualifies for the plan.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 5      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 10)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee qualifies for a fixed-year plan based on their contract type and assignment number. It extracts a portion of the assignment number and converts it to a numeric value. The contract type is retrieved from a lookup table using the effective date. If the contract type is \"Teachers\" and the extracted assignment number equals 11, the employee is eligible. The formula returns whether the employee meets the criteria for participation.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 5      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 11)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee qualifies for a rolling-year plan based on their contract type and assignment number. It extracts a portion of the assignment number and converts it to a numeric value. The contract type is retrieved from a lookup table using the effective date. If the contract type matches specific categories (e.g., LG Standard, NHS, Fire Standard) and the extracted assignment number equals 3, the employee is eligible. The formula returns whether the employee meets the participation criteria.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 3) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for a rolling-year plan based on an employeeâ€™s contract type and assignment number. It extracts a numeric value from the assignment number and retrieves the contract type from a lookup table. If the extracted assignment number equals 6 and the contract type matches predefined categories (e.g., LG Standard, NHS, Fire Standard), the employee qualifies. The formula logs details for tracking and returns whether the employee meets the participation criteria.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 6) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for a rolling-year plan based on an employeeâ€™s contract type and assignment number. ",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 7) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for the Fixed Year Plan 5 based on their contract type and assignment number. It extracts the last two characters of the assignment number and converts them into a numeric value. If the contract type is \"Teachers\" and the assignment number ends in 13, the employee is marked as eligible. The formula also retrieves the employee's sickness scheme type from a table based on the contract type and effective date. Eligibility is logged along with other key details for debugging.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 5      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 13)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee qualifies for the Rolling Year Plan based on their contract type and assignment number. It extracts the last two characters of the assignment number and converts them into a numeric value. If the assignment number ends in 1 and the contract type matches specific employee categories (e.g., LG Standard, NHS, Unison, Fire Standard, etc.), the employee is eligible. The formula retrieves the employee's sickness scheme type from a table based on the contract type and effective date. Key details are logged for debugging.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 1) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee qualifies for the Rolling Year Plan based on their contract type and assignment number. It extracts the last two characters of the assignment number and converts them into a numeric value. If the assignment number ends in 10 and the contract type matches specific employee categories (e.g., LG Standard, NHS, Unison, Fire Standard, etc.), the employee is eligible. The formula retrieves the employee's sickness scheme type from a table based on the contract type and effective date. Key details are logged for debugging.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 10) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks eligibility for the Rolling Year Plan based on an employee's contract type and assignment number. It extracts the last two characters of the assignment number, converts them to a number, and verifies if it equals 12. The formula then retrieves the employee's sickness scheme type based on the contract type and effective date. If the contract type belongs to specific categories (e.g., LG Standard, NHS, Fire Standard, Unison, etc.) and the assignment number condition is met, the employee qualifies. Logging is included for debugging.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 12) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for the Fixed Year Plan 5 based on the employee's contract type and assignment number.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 5      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 12)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for a Fixed Year Plan 5 based on an employeeâ€™s contract type and assignment number. It checks if the employee's contract is associated with a sickness scheme type. The formula extracts the last two characters of the assignment number and converts them into a numeric value. If the employee belongs to the Teachers category and their assignment number ends in 8, they qualify for the plan. If these conditions are met, the formula marks the employee as eligible.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 5      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 8)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for Fixed Year Plan 5 by checking an employee's contract type and assignment number. It retrieves the sickness scheme type based on the contract and extracts the last two characters from the assignment number, converting them into a numeric value. If the employee belongs to the Teachers category and their assignment number ends in 9, they qualify for the plan. If these conditions are met, the employee is marked as eligible.\n\n\n\n\n\n\n",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 5      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 9)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for the Rolling Year Plan by verifying an employeeâ€™s contract type and assignment number. It retrieves the sickness scheme type based on the contract and extracts the last two characters from the assignment number, converting them into a numeric value. If the employee belongs to specific public sector groups (e.g., LG Standard, NHS, Fire Standard) and their assignment number ends in 2, they qualify for the plan. If these conditions are met, the employee is marked as eligible.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 2) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for the Fixed Year Plan 5 by checking an employeeâ€™s contract type and assignment number. It retrieves the sickness scheme type based on the contract and extracts the last two characters from the assignment number, converting them into a numeric value. If the employee is classified as a Teacher and their assignment number ends in 5, they qualify for the plan. If these conditions are met, the employee is marked as eligible.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 5      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 5)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks eligibility for the Fixed Year Plan 5 by evaluating an employeeâ€™s contract type and assignment number. It retrieves the sickness scheme type based on the contract and extracts the last two characters from the assignment number, converting them into a numeric value. If the employee is classified as a Teacher and their assignment number ends in 6, they qualify for the plan. If these conditions are met, the employee is marked as eligible.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 5      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 6)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for the Rolling Year Plan by evaluating an employeeâ€™s contract type and assignment number. It retrieves the sickness scheme type based on the contract and extracts the last two characters from the assignment number, converting them into a numeric value. If the employee belongs to one of the specified groups (e.g., LG Standard, NHS, Fire Standard) and their assignment number ends in 5, they qualify for the plan. If these conditions are met, the employee is marked as eligible.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 5) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines eligibility for the Rolling Year Plan based on an employeeâ€™s contract type and assignment number. ",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 8) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for annual leave based on their collective agreement. It checks if the employee's collective agreement is labeled as \"ES Building Operatives.\" If the agreement matches this label, the employee is marked as eligible for annual leave. Otherwise, they are not eligible. The formula is designed to ensure only employees under the specified collective agreement qualify for this benefit.",
        "formula": "/**********************************************\nFORMULA NAME: ESC Annual Leave Participant Eligibility\nFORMULA TYPE: Participant Eligibility\nDESCRIPTION: \n\nPratik Mistry\nChange History:\n**********************************************/\n\n\n\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'FSAF'\n\ncollective_agreement = 'x'\ncollective_agreement = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\n\n\nELIGIBLE= 'N'\n\n\nif ( collective_agreement = 'ES Building Operatives') then\n(\n ELIGIBLE = 'Y'\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible for annual leave based on their collective agreement. It specifically looks for employees whose collective agreement is labeled as \"East Suffolk June.\" If the agreement matches this label, the employee is marked as eligible for annual leave. Otherwise, they are considered ineligible. The formula ensures that only employees under the \"East Suffolk June\" agreement qualify for this benefit.",
        "formula": "/**********************************************\nFORMULA NAME: ESC Annual Leave Participant Eligibility\nFORMULA TYPE: Participant Eligibility\nDESCRIPTION: \n\nPratik Mistry\nChange History:\n**********************************************/\n\n\n\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'FSAF'\n\ncollective_agreement = 'x'\ncollective_agreement = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\n\n\nELIGIBLE= 'N'\n\n\nif ( collective_agreement = 'East Suffolk June') then\n(\n ELIGIBLE = 'Y'\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for annual leave by checking their collective agreement. It specifically looks for employees whose collective agreement is labeled as \"East Suffolk April.\" If the agreement matches this label, the employee is marked as eligible for annual leave. Otherwise, they are considered ineligible. The formula ensures that only employees under the \"East Suffolk April\" agreement qualify for this benefit.",
        "formula": "/**********************************************\nFORMULA NAME: ESC Annual Leave Participant Eligibility\nFORMULA TYPE: Participant Eligibility\nDESCRIPTION: \n\nPratik Mistry\nChange History:\n**********************************************/\n\n\n\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'FSAF'\n\ncollective_agreement = 'x'\ncollective_agreement = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\n\n\nELIGIBLE= 'N'\n\n\nif ( collective_agreement = 'East Suffolk April') then\n(\n ELIGIBLE = 'Y'\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for a rolling year plan based on their contract type and assignment number. It checks if the employee's assignment number ends with a specific pattern (E0 to E9 or a numeric value) and if their contract type matches one of the predefined schemes like \"LG Standard,\" \"Fire Standard,\" or \"NHS.\" If the assignment number ends with 11 and the contract type matches any of the specified schemes, the employee is marked as eligible. The formula ensures that only employees meeting these specific criteria qualify for the rolling year plan.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 11) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible for a rolling year plan based on their assignment number and contract type. It examines if the assignment number ends with \"13\" and if the employee's contract type matches predefined schemes such as \"LG Standard,\" \"Fire Standard,\" or \"NHS.\" If both conditions are met, the employee is marked as eligible. The formula ensures that only employees with the specified assignment number and contract type qualify for the rolling year plan.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 13) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for a rolling year plan based on their assignment number and contract type. It checks if the assignment number ends with \"15\" and if the employee's contract type matches one of the predefined schemes, such as \"LG Standard,\" \"Fire Standard,\" or \"NHS.\" If both conditions are satisfied, the employee is marked as eligible. The formula ensures that only employees with the specified assignment number and contract type qualify for the rolling year plan.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 15) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible for a rolling year plan based on their assignment number and contract type. It verifies if the assignment number ends with \"9\" and if the employee's contract type matches one of the predefined schemes, such as \"LG Standard,\" \"Fire Standard,\" or \"NHS.\" If both conditions are met, the employee is marked as eligible. The formula ensures that only employees with the specified assignment number and contract type qualify for the rolling year plan.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 9) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for a fixed year plan based on their assignment number and contract type. It checks if the assignment number ends with \"7\" and if the employee's contract type is \"Teachers.\" If both conditions are satisfied, the employee is marked as eligible. The formula ensures that only employees with the specified assignment number and contract type qualify for the fixed year plan.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 5      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 7)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for a fixed year plan based on their assignment number and contract type. It checks if the assignment number ends with \"14\" and if the employee's contract type is \"Teachers.\" If both conditions are met, the employee is marked as eligible. The formula ensures that only employees with the specified assignment number and contract type qualify for the fixed year plan.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 5      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 14)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for a rolling year plan based on their assignment number and contract type. It checks if the assignment number ends with \"14\" and if the employee's contract type matches one of the predefined schemes, such as \"LG Standard,\" \"Fire Standard,\" or \"NHS.\" If both conditions are met, the employee is marked as eligible. The formula ensures that only employees with the specified assignment number and contract type qualify for the rolling year plan.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_ROLLING_YEAR_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION:\nChange History:\nName: Ankush Mundhada\nDate\nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 is ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 is ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      ROLLING YEAR PLAN        *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*********************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, '1900/01/01 00:00:00'(DATE))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\n\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('EFF_DATE = ' || TO_CHAR(EFF_DATE))\n\tCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\n\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF (\n\t(ASG_NUM = 14) AND\n\t(\n\t\tEMPLOYEE = 'LG Standard' \n\t\tOR EMPLOYEE = 'LG Standard ESC' \n\t\tOR EMPLOYEE = 'Fire Standard' \n\t\tOR EMPLOYEE = 'Coroners Staff' \n\t\tOR EMPLOYEE = 'NHS'\n\t\tOR EMPLOYEE = 'Unison'\n\t\tOR EMPLOYEE = 'East Suffolk Services Ltd'\n\t\tOR EMPLOYEE = 'Freeport East'\n\t)\n) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER LAST DIGIT = ' || to_char(ASG_NUM))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for a fixed year plan based on their assignment number and contract type. It checks if the assignment number ends with \"1\" and if the employee's contract type is \"Teachers.\" If both conditions are met, the employee is marked as eligible. The formula ensures that only employees with the specified assignment number and contract type qualify for the fixed year plan.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 1      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 1)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for a fixed year plan based on their assignment number and contract type. It checks if the assignment number ends with \"4\" and if the employee's contract type is \"Teachers.\" If both conditions are met, the employee is marked as eligible. The formula ensures that only employees with the specified assignment number and contract type qualify for the fixed year plan.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 4      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 4)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their collective agreement. It checks if the employee's collective agreement is labeled as \"Uniformed Fire.\" If the agreement matches this label, the employee is marked as eligible. Otherwise, they are considered ineligible. The formula ensures that only employees under the \"Uniformed Fire\" agreement qualify for the specified eligibility.",
        "formula": "/**********************************************\nFORMULA NAME: SCC NHS Staff Eligibility\nFORMULA TYPE: Participant Eligibility\nDESCRIPTION: Eligibility criteria for SCC NHS Staff\n\nSunil Hatte\nChange History:\n**********************************************/\n\n\nDEFAULT FOR PER_ASG_ATTRIBUTE2 is 'XX'\n\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME is 'FSAF'\n\ncollective_agreement = 'x'\ncollective_agreement = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\n\n\nELIGIBLE= 'N'\n\n\n\nif ( collective_agreement = 'Uniformed Fire' ) then\n\t(\n\t ELIGIBLE = 'Y'\n\t)\n\n\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for a fixed year plan based on their assignment number and contract type. It checks if the assignment number ends with \"2\" and if the employee's contract type is \"Teachers.\" If both conditions are met, the employee is marked as eligible. The formula ensures that only employees with the specified assignment number and contract type qualify for the fixed year plan.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 2      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 2)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for a fixed year plan based on their assignment number and contract type. It checks if the assignment number ends with \"3\" and if the employee's contract type is \"Teachers.\" If both conditions are met, the employee is marked as eligible. The formula ensures that only employees with the specified assignment number and contract type qualify for the fixed year plan.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 3      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 3)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for a fixed year plan based on their assignment number and contract type. It checks if the assignment number ends with \"15\" and if the employee's contract type is \"Teachers.\" If both conditions are met, the employee is marked as eligible. The formula ensures that only employees with the specified assignment number and contract type qualify for the fixed year plan.",
        "formula": "/***************************************************************************\nFORMULA NAME: SCC_FIXED_YEAR_PLAN_ELIGIBILITY\nFORMULA TYPE: Participation and Rate Eligibility\nDESCRIPTION: \nChange History:\nName: Ankush Mundhada\nDate \nComments\n---------------------------------------------------------------------------------\n*******************************************************************************/\n\nDEFAULT FOR PER_ASG_ATTRIBUTE14 IS ' '\nDEFAULT FOR PER_ASG_ATTRIBUTE16 IS ' '\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nDEFAULT FOR PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME IS 'X'\nDEFAULT FOR PER_ASG_ATTRIBUTE2 IS 'X'\n\nCUSTOM_MESSAGE = 'X'\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*      FIXED YEAR PLAN 5      *')\nCUSTOM_MESSAGE = ESS_LOG_WRITE('*******************************')\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nELIGIBLE='N'\nCONTRACT_TYPE = 'X'\nEMPLOYEE = 'X'\n\nCONTRACT_TYPE = PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME\nEFF_DATE = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nASSIGNMENT_NUMBER = 'X'\nASSIGNMENT_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nASG_NUM = 0\nASG_CHAR= 'X'\nASG_CHAR = (SUBSTR(ASSIGNMENT_NUMBER,INSTR(ASSIGNMENT_NUMBER,'-',1,1)+1,2))\n\nIF (ASG_CHAR = 'E0') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E1') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E2') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E3') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E4') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E5') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E6') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E7') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E8') THEN\n(\n\tASG_NUM = 1\n)\nELSE IF (ASG_CHAR = 'E9') THEN\n(\n\tASG_NUM = 1\n)\nELSE\n(\n\tASG_NUM = TO_NUMBER(ASG_CHAR)\n)\n\nIF (PER_ASG_COL_AGREEMENT_COLLECTIVE_AGREEMENT_NAME WAS NOT DEFAULTED) THEN\n(\n\tEMPLOYEE = GET_TABLE_VALUE('SICKNESS_SCHEME_TYPE','SICKNESS_SCHEME',CONTRACT_TYPE,EFF_DATE)\n)\nELSE\n(\n\tEMPLOYEE = 'NO CONTRACT TYPE'\n)\n\nIF ((EMPLOYEE = 'Teachers' AND ASG_NUM = 15)) THEN\n(\n\tELIGIBLE='Y'\n)\n\nCUSTOM_MESSAGE = ESS_LOG_WRITE('EMPLOYEE TYPE = ' || (EMPLOYEE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('CONTRACT TYPE = ' || (CONTRACT_TYPE))\nCUSTOM_MESSAGE = ESS_LOG_WRITE('ASSIGNMENT NUMBER = ' || (ASSIGNMENT_NUMBER))\nCUSTOM_MESSAGE = ESS_LOG_WRITE(' ')\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their proposed worker type. It checks if the employee's proposed worker type is set to a specific value, \"300000000341188.\" If the proposed worker type matches this value, the employee is marked as eligible. Otherwise, they are considered ineligible. The formula ensures that only employees with the specified proposed worker type qualify for the eligibility criteria.",
        "formula": "/*Eliibility profile formula for propoed worker type employee\nto find PER_ASG_PROPOSED_WORKER_TYPE\nSELECT PERSON_TYPE_ID, SYSTEM_PERSON_TYPE \nfrom PER_PERSON_TYPES\nWHERE DEFAULT_FLAG = 'Y'\n*/\n\nDEFAULT FOR PER_ASG_PROPOSED_WORKER_TYPE IS '0000000'\n\n\nl_proposed_per_type = PER_ASG_PROPOSED_WORKER_TYPE\n\nELIGIBLE = 'N'\n\n\n  IF (l_proposed_per_type = '300000000341188' )THEN\n\n\n(\nELIGIBLE = 'Y'\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible to progress to the next step in their grade based on their salary review date. It checks if the salary review date falls within the next month from the effective date. If the salary review date is within this period, the employee is marked as eligible. Otherwise, they are considered ineligible. The formula ensures that only employees with a salary review date in the upcoming month qualify for progression.",
        "formula": "/**************************************************************\nFORMULA NAME : WCC_GRADE_PROGR\nFORMULA TYPE : Participation and Rate Eligibility\nDESCRIPTION  :"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their probation end date. It checks if the probation end date is within 30 days from the effective date and has not yet passed. If the probation end date falls within this 30-day window and is not in the past, the employee is marked as eligible. Otherwise, they are considered ineligible. The formula ensures that only employees nearing the end of their probation period qualify for eligibility.",
        "formula": "DEFAULT FOR PER_ASG_DATE_PROBATION_END IS '0001/01/01 00:00:00' (date)\n\nELIGIBLE='N'\n\nL_EFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, to_date('1951/01/01 00:00:00') )\nL_PRBN_END_DATE = PER_ASG_DATE_PROBATION_END\n\n\nIF ((PER_ASG_DATE_PROBATION_END WAS NOT DEFAULTED) \n\tAND ( DAYS_BETWEEN(L_PRBN_END_DATE,L_EFF_DATE) <= 30 )\n\tAND ( DAYS_BETWEEN(L_PRBN_END_DATE,L_EFF_DATE) >= 0 )\n\tAND ( L_PRBN_END_DATE >= L_EFF_DATE)\n) THEN\n\nELIGIBLE='Y'\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their probation end date. It checks if the probation end date is between 31 and 75 days from the effective date and has not yet passed. If the probation end date falls within this range and is not in the past, the employee is marked as eligible. Otherwise, they are considered ineligible. The formula ensures that only employees whose probation period is ending within this specific timeframe qualify for eligibility.\n",
        "formula": "DEFAULT FOR PER_ASG_DATE_PROBATION_END IS '0001/01/01 00:00:00' (date)\n\nELIGIBLE='N'\n\nL_EFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, to_date('1951/01/01 00:00:00') )\nL_PRBN_END_DATE = PER_ASG_DATE_PROBATION_END\n\n\nIF ((PER_ASG_DATE_PROBATION_END WAS NOT DEFAULTED) \n\tAND ( DAYS_BETWEEN(L_PRBN_END_DATE,L_EFF_DATE) <= 75 )\n\tAND ( DAYS_BETWEEN(L_PRBN_END_DATE,L_EFF_DATE) > 30 )\n\tAND ( L_PRBN_END_DATE >= L_EFF_DATE)\n) THEN\n\nELIGIBLE='Y'\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula checks if an employee is eligible based on their proposed worker type. It compares the worker type against the value 300000000341187. If the worker type matches, the employee is marked as eligible. If it does not match, the employee remains ineligible. This is used to determine eligibility for a program or benefit based on worker classification.",
        "formula": "DEFAULT FOR PER_ASG_PROPOSED_WORKER_TYPE IS '0000000'\n\n\nl_proposed_per_type = PER_ASG_PROPOSED_WORKER_TYPE\n\nELIGIBLE = 'N'\n\n\n  IF (l_proposed_per_type = '300000000341187' )THEN\n\n\n(\nELIGIBLE = 'Y'\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible based on their primary assignment flag. It checks if the primary assignment flag is set to 'Y'. If the flag is 'Y', the employee is marked as eligible. If the flag is 'N' or any other value, the employee is considered ineligible. The formula ensures that only employees with a primary assignment flag set to 'Y' qualify for eligibility.",
        "formula": "DEFAULT FOR PER_ASG_PRIMARY_ASSIGNMENT_FLAG is 'A'\n\nl_value1 = 'A'\nELIGIBLE = 'N'\n\nl_value1 = PER_ASG_PRIMARY_ASSIGNMENT_FLAG\n\nif(l_value1 = 'Y')\nthen\n(\nELIGIBLE = 'Y'\n)\nelse if(l_value1 = 'N')\nthen\n(\nELIGIBLE = 'N'\n)\nelse\n(\nELIGIBLE = 'N'\n)\n\n \nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for a mid-review based on their probation period and hire date",
        "formula": "DEFAULT FOR PER_ASG_DATE_PROBATION_END IS '0001/01/01 00:00:00' (DATE)\nDEFAULT FOR ACP_HIRE_DATE IS '4712/12/31 00:00:00' (DATE)\n\nRET = ESS_LOG_WRITE('BEGIN MID_REVIEW_FF' )\n\nL_PROBATION_DAYS = 0\nELIGIBLE = 'N'\n\nL_EFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, to_date('1951/01/01 00:00:00'))\nL_HIRE_DATE = ACP_HIRE_DATE\nRET = ESS_LOG_WRITE(' Hire Date : '|| to_char(L_HIRE_DATE))\nL_PRBN_END_DATE = PER_ASG_DATE_PROBATION_END\n\nL_PROBATION_DAYS = DAYS_BETWEEN(L_PRBN_END_DATE, L_HIRE_DATE)\nRET = ESS_LOG_WRITE(' Probation Days : '|| to_char(L_PROBATION_DAYS))\n\nL_CHECK_DAYS= DAYS_BETWEEN(L_EFF_DATE, L_HIRE_DATE)\nRET = ESS_LOG_WRITE(' Check days between e and h date : '|| to_char(L_CHECK_DAYS))\n\nIF (L_PROBATION_DAYS < 89)\nTHEN\n(\n  ELIGIBLE = 'N'\n)\nELSE IF (L_PROBATION_DAYS >= 89 AND L_PROBATION_DAYS < 119)\nTHEN\n(\n  IF (DAYS_BETWEEN(L_EFF_DATE, L_HIRE_DATE) >= 45 AND DAYS_BETWEEN(L_EFF_DATE, L_HIRE_DATE) <= 50)\n  THEN\n  (\n    ELIGIBLE = 'Y'\n  )\n)\nELSE IF (L_PROBATION_DAYS >= 119 AND L_PROBATION_DAYS < 150)\nTHEN\n(\n  IF (DAYS_BETWEEN(L_EFF_DATE, L_HIRE_DATE) >= 61 AND DAYS_BETWEEN(L_EFF_DATE, L_HIRE_DATE) <= 65)\n  THEN\n  (\n    ELIGIBLE = 'Y'\n  )\n)\nELSE IF (L_PROBATION_DAYS >= 150)\nTHEN\n(\n  IF (DAYS_BETWEEN(L_EFF_DATE, L_HIRE_DATE) >= 76 AND DAYS_BETWEEN(L_EFF_DATE, L_HIRE_DATE) <= 80)\n  THEN\n  (\n    ELIGIBLE = 'Y'\n  )\n)\n\nRETURN ELIGIBLE"
    },
    {
        "prompt": "This formula determines if an employee is eligible for a final review based on their probation period and hire date. It checks if the employee is within a defined window before the end of their probation period, depending on the length of the probation. For shorter probation periods, eligibility is based on days remaining before probation ends. For longer probation periods, eligibility is based on days since the hire date. The formula ensures employees are reviewed at the appropriate time before their probation ends.\n",
        "formula": "DEFAULT FOR PER_ASG_DATE_PROBATION_END IS '0001/01/01 00:00:00' (DATE)\nDEFAULT FOR ACP_HIRE_DATE IS '4712/12/31 00:00:00' (DATE)\n\nRET = ESS_LOG_WRITE('BEGIN FINAL_REVIEW_FF' )\n\nL_PROBATION_DAYS = 0\nELIGIBLE = 'N'\n\nL_EFF_DATE = GET_CONTEXT(EFFECTIVE_DATE, to_date('1951/01/01 00:00:00'))\nL_HIRE_DATE = ACP_HIRE_DATE\nRET = ESS_LOG_WRITE(' Hire Date : '|| to_char(L_HIRE_DATE))\nL_PRBN_END_DATE = PER_ASG_DATE_PROBATION_END\n\nL_LESS_DAYS = DAYS_BETWEEN(L_PRBN_END_DATE, L_EFF_DATE)\nRET = ESS_LOG_WRITE(' Check days between pro and eff date : '|| to_char(L_LESS_DAYS))\n\nL_PROBATION_DAYS = DAYS_BETWEEN(L_PRBN_END_DATE, L_HIRE_DATE)\nRET = ESS_LOG_WRITE(' Probation Days : '|| to_char(L_PROBATION_DAYS))\nL_CHECK_DAYS= DAYS_BETWEEN(L_EFF_DATE, L_HIRE_DATE)\nRET = ESS_LOG_WRITE(' Check days between e and h date : '|| to_char(L_CHECK_DAYS))\n\nIF (L_PROBATION_DAYS < 89)\nTHEN\n(\n  IF (DAYS_BETWEEN(L_PRBN_END_DATE, L_EFF_DATE) > 10 AND DAYS_BETWEEN(L_PRBN_END_DATE, L_EFF_DATE) <= 14)\n  THEN\n  (\n    ELIGIBLE = 'Y'\n  )\n)\nELSE IF (L_PROBATION_DAYS >= 89 AND L_PROBATION_DAYS < 119)\nTHEN\n(\n  IF (DAYS_BETWEEN(L_EFF_DATE, L_HIRE_DATE) >= 76 AND DAYS_BETWEEN(L_EFF_DATE, L_HIRE_DATE) <= 80)\n  THEN\n  (\n    ELIGIBLE = 'Y'\n  )\n)\nELSE IF (L_PROBATION_DAYS >= 119 AND L_PROBATION_DAYS < 150)\nTHEN\n(\n  IF (DAYS_BETWEEN(L_EFF_DATE, L_HIRE_DATE) >= 106 AND DAYS_BETWEEN(L_EFF_DATE, L_HIRE_DATE) <= 110)\n  THEN\n  (\n    ELIGIBLE = 'Y'\n  )\n)\nELSE IF (L_PROBATION_DAYS >= 150)\nTHEN\n(\n  IF (DAYS_BETWEEN(L_EFF_DATE, L_HIRE_DATE) >= 135 AND DAYS_BETWEEN(L_EFF_DATE, L_HIRE_DATE) <= 140) \n  THEN\n  (\n    ELIGIBLE = 'Y'\n  )\n)\n\nRETURN ELIGIBLE"
    }
]