[
    {
        "page_content": "***question***: What is Oracle Fast Formula?\n\n***answer***: Oracle Fast Formula is a tool used for creating custom business logic in Oracle HCM and Payroll. It allows you to define logic and calculations for things like payroll processing, benefits, and other HR processes. RETURN result",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the syntax structure of a Fast Formula?\n\n***answer***: Fast Formula syntax typically consists of variables, functions, operators, and expressions. The formula logic is written in statements, and it usually ends with a RETURN statement to specify the output. RETURN variable",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What are the types of Fast Formulas?\n\n***answer***: There are three main types of Fast Formulas - Element Entry Formula, Validation Formula, and Aggregate Formula. RETURN result",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you declare a variable in Oracle Fast Formula?\n\n***answer***: Variables are declared using the VARIABLE keyword followed by the variable name and type. VARIABLE salary NUMBER RETURN salary",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you return a value in a Fast Formula?\n\n***answer***: The result of the formula is returned using the RETURN statement. RETURN salary",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What types of data can a Fast Formula handle?\n\n***answer***: Fast Formulas handle various data types like NUMBER, DATE, CHAR, and BOOLEAN. RETURN data_type",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Can Fast Formulas use IF-ELSE conditions?\n\n***answer***: Yes, Fast Formulas can use IF-ELSE statements to control the flow based on conditions. IF salary > 1000 THEN bonus = salary * 0.1 ELSE bonus = 0 RETURN bonus",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you perform arithmetic operations in Fast Formula?\n\n***answer***: You can perform arithmetic operations using standard operators like +, -, *, /, and %. total_salary = basic_salary + bonus RETURN total_salary",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What are constants in Oracle Fast Formula?\n\n***answer***: Constants are predefined values, such as PI, TRUE, FALSE, and NULL. constant_value = 100 RETURN constant_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you write comments in Oracle Fast Formula?\n\n***answer***: You can write single-line comments using --, and multi-line comments using . -- This is a comment RETURN total_salary",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the use of NVL function in Fast Formula?\n\n***answer***: The NVL function replaces NULL values with a specified value. result = NVL(salary, 0) RETURN result",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you use the TO_NUMBER function in Fast Formula?\n\n***answer***: The TO_NUMBER function converts a string to a numeric value. salary = TO_NUMBER('2000') RETURN salary",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What does the FUND function do?\n\n***answer***: The FUND function retrieves the value of a specific payroll element for an employee. fund_value = FUND('Earnings') RETURN fund_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the purpose of SYSDATE in a Fast Formula?\n\n***answer***: SYSDATE returns the current system date and time. current_date = SYSDATE RETURN current_date",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How can you round a number in Fast Formula?\n\n***answer***: Use the ROUND function to round a number to a specified decimal place. rounded_salary = ROUND(salary, 2) RETURN rounded_salary",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What does TRUNC do in Oracle Fast Formula?\n\n***answer***: The TRUNC function truncates a number or date to a specified precision. truncated_value = TRUNC(salary, 1) RETURN truncated_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the LENGTH function used for in Fast Formula?\n\n***answer***: The LENGTH function returns the length of a string. string_length = LENGTH('Oracle') RETURN string_length",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you compare two strings in Fast Formula?\n\n***answer***: Strings can be compared using = for equality or <> for inequality. IF name1 = name2 THEN RETURN 'Names are equal' ELSE RETURN 'Names are different'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How can you use UPPER and LOWER in Fast Formula?\n\n***answer***: The UPPER function converts a string to uppercase, and LOWER converts a string to lowercase. upper_name = UPPER('john') RETURN upper_name",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the ADD_MONTHS function in Fast Formula?\n\n***answer***: The ADD_MONTHS function adds or subtracts months from a given date. future_date = ADD_MONTHS(SYSDATE, 3) RETURN future_date",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you define a loop in Oracle Fast Formula?\n\n***answer***: You can define a FOR loop to iterate over a range of values. FOR i IN 1..10 LOOP result = i * 10 END LOOP RETURN result",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the purpose of IS NULL in Fast Formula?\n\n***answer***: IS NULL is used to check if a value is NULL. IF variable IS NULL THEN RETURN 0 ELSE RETURN variable",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you handle errors in Fast Formula?\n\n***answer***: Fast Formula does not have built-in error handling mechanisms, but you can use RAISE to raise an error explicitly in the logic. IF salary < 0 THEN RAISE_APPLICATION_ERROR(-20001, 'Salary cannot be negative') RETURN salary",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Can you call external APIs from within a Fast Formula?\n\n***answer***: No, Fast Formula cannot call external APIs. It is designed to work within the Oracle HCM environment for internal logic. RETURN result",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the GET_ELEMENT_ENTRY_VALUE function used for?\n\n***answer***: This function is used to retrieve the value of a payroll element for a specific employee within a given date range. element_value = GET_ELEMENT_ENTRY_VALUE('Earnings', '01-JAN-2024', '31-JAN-2024') RETURN element_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you access employee data in Fast Formula?\n\n***answer***: Employee data can be accessed through variables like PER_PERSONAL, PER_ASSIGNMENT, and others related to employee information. employee_name = PER_PERSONAL.FIRST_NAME RETURN employee_name",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How can you calculate payroll deductions using Fast Formula?\n\n***answer***: Payroll deductions can be calculated by defining a formula that uses payroll elements and applying the appropriate logic. deduction = salary * deduction_rate RETURN deduction",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the difference between ELEMENT_ENTRY and ELEMENT_TYPE in Fast Formula?\n\n***answer***: ELEMENT_ENTRY refers to a specific payroll element\u2019s value for an employee, while ELEMENT_TYPE refers to the classification of the payroll element. element_value = ELEMENT_ENTRY('Earnings') RETURN element_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you concatenate two strings in Fast Formula?\n\n***answer***: You concatenate strings using the || operator. full_name = first_name || ' ' || last_name RETURN full_name",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the use of CEIL function in Fast Formula?\n\n***answer***: The CEIL function rounds a number up to the nearest integer. rounded_salary = CEIL(salary) RETURN rounded_salary",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the purpose of the DEBUG function in Fast Formula?\n\n***answer***: The DEBUG function outputs debug messages to assist with formula troubleshooting. DEBUG('Current value of salary ' || salary) RETURN salary",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Why should you avoid using SELECT statements in Fast Formula?\n\n***answer***: Fast Formula is optimized for in-memory processing, and using SELECT statements may slow down performance. RETURN result",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you ensure a Fast Formula executes efficiently?\n\n***answer***: Keep logic simple, avoid complex loops, minimize database calls, and use built-in functions like NVL for efficiency. IF NVL(salary, 0) > 1000 THEN RETURN salary ELSE RETURN 0",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Can you debug a Fast Formula in Oracle HCM?\n\n***answer***: Yes, you can use DEBUG functions or log output to debug Fast Formulas. DEBUG('Formula output ' || result) RETURN result",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the impact of using too many nested IF statements in a Fast Formula?\n\n***answer***: Overusing nested IF statements can make the formula harder to read and may impact performance. IF salary > 1000 THEN IF salary < 2000 THEN RETURN salary * 0.1 ELSE RETURN salary * 0.2 RETURN result",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the purpose of using the `COALESCE` function in Fast Formula?\n\n***answer***: The `COALESCE` function returns the first non-NULL value in a list of expressions. COALESCE(variable1, variable2, 'default') RETURN COALESCE(variable1, variable2, 'default')",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you define a constant value in a Fast Formula?\n\n***answer***: You define a constant using the `CONSTANT` keyword. CONSTANT TAX_RATE NUMBER(3,2) = 0.15 RETURN TAX_RATE",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the `ROUND` function used for in Fast Formula?\n\n***answer***: The `ROUND` function rounds a numeric value to a specified decimal place. rounded_value = ROUND(value, 2) RETURN rounded_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the difference between `IF-THEN-ELSE` and `CASE` statements in Fast Formula?\n\n***answer***: `IF-THEN-ELSE` allows you to execute conditional logic with multiple conditions. A `CASE` statement evaluates multiple conditions and returns a result based on the first matching condition. CASE WHEN condition1 THEN result1 WHEN condition2 THEN result2 ELSE default_result END RETURN result",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you use `SELECT` in Fast Formula to query element values?\n\n***answer***: `SELECT` statements should be avoided in Fast Formula. It is designed for in-memory calculations, and queries against the database can slow down performance. Fast Formula uses other methods to fetch values. RETURN result",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you check if a number is even or odd in Fast Formula?\n\n***answer***: You can use the modulus operator `%` to check if a number is divisible by 2. IF number % 2 = 0 THEN RETURN 'Even' ELSE RETURN 'Odd'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the purpose of the `PER_PERSONAL` table in Fast Formula?\n\n***answer***: The `PER_PERSONAL` table holds personal information about employees, such as their names, address, and contact details. employee_name = PER_PERSONAL.FIRST_NAME RETURN employee_name",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How can you extract the year from a date in Fast Formula?\n\n***answer***: You can use the `EXTRACT` function to extract the year part of a date. year = EXTRACT(YEAR FROM SYSDATE) RETURN year",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the `SELECT_VALUE` function used for in Fast Formula?\n\n***answer***: The `SELECT_VALUE` function retrieves a specific value from a list or table based on a condition. value = SELECT_VALUE('Element', 'Condition') RETURN value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Can you use `NULLIF` in Fast Formula?\n\n***answer***: Yes, `NULLIF` returns `NULL` if two expressions are equal. Otherwise, it returns the first expression. result = NULLIF(value1, value2) RETURN result",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the `GET_EMPLOYEE_DATE` function in Fast Formula?\n\n***answer***: The `GET_EMPLOYEE_DATE` function retrieves the date associated with an employee's record for a specific event, such as hiring date. hire_date = GET_EMPLOYEE_DATE('HIRE_DATE') RETURN hire_date",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you calculate the difference between two dates in Fast Formula?\n\n***answer***: You can subtract two dates to find the difference in days. date_diff = end_date - start_date RETURN date_diff",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the `TRIM` function used for in Fast Formula?\n\n***answer***: The `TRIM` function removes leading and trailing spaces from a string. trimmed_string = TRIM(' Hello ') RETURN trimmed_string",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the `ISDATE` function in Fast Formula?\n\n***answer***: The `ISDATE` function checks if a given expression is a valid date. IF ISDATE('2024-12-31') THEN RETURN 'Valid Date' ELSE RETURN 'Invalid Date'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How can you set a default value in Fast Formula?\n\n***answer***: You can use the `NVL` or `COALESCE` function to set a default value for NULL values. default_value = NVL(variable, 0) RETURN default_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you define a loop for a range of values in Fast Formula?\n\n***answer***: Use a `FOR` loop to iterate over a specified range. FOR i IN 1..5 LOOP result = i * 10 END LOOP RETURN result",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you compare two dates in Fast Formula?\n\n***answer***: You can use standard comparison operators like `=`, `<`, or `>` to compare dates. IF start_date > end_date THEN RETURN 'Invalid date range' ELSE RETURN 'Valid date range'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What does `PER_ASSIGNMENT` represent in Fast Formula?\n\n***answer***: The `PER_ASSIGNMENT` table holds information about an employee\u2019s assignment, such as job, location, and department. assignment_name = PER_ASSIGNMENT.JOB RETURN assignment_name",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you check if a string is empty in Fast Formula?\n\n***answer***: You can use `LENGTH` function to check if a string is empty. IF LENGTH(string) = 0 THEN RETURN 'Empty' ELSE RETURN 'Not Empty'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the purpose of the `MONTHS_BETWEEN` function?\n\n***answer***: The `MONTHS_BETWEEN` function returns the number of months between two dates. months_diff = MONTHS_BETWEEN(end_date, start_date) RETURN months_diff",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the `LAST_DAY` function used for in Fast Formula?\n\n***answer***: The `LAST_DAY` function returns the last day of the month for a given date. last_day_of_month = LAST_DAY(SYSDATE) RETURN last_day_of_month",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you calculate the sum of a range of values in Fast Formula?\n\n***answer***: You can use a `FOR` loop to sum values over a range. sum = 0 FOR i IN 1..5 LOOP sum = sum + i END LOOP RETURN sum",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you handle NULL values when performing calculations in Fast Formula?\n\n***answer***: Use `NVL` or `COALESCE` functions to replace NULL values with a default value. total = NVL(value, 0) + 100 RETURN total",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the difference between `<>` and `!=` in Fast Formula?\n\n***answer***: Both `<>` and `!=` are used for inequality comparisons in Fast Formula. They are functionally identical. IF value <> 100 THEN RETURN 'Not Equal' ELSE RETURN 'Equal'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you check if a value exists in a list in Fast Formula?\n\n***answer***: Use a combination of `CASE` or `IF-THEN-ELSE` to check if a value is part of a predefined list. IF value IN ('A', 'B', 'C') THEN RETURN 'Found' ELSE RETURN 'Not Found'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the `PER_JOB` table used for in Fast Formula?\n\n***answer***: The `PER_JOB` table holds job-related information for an employee, such as job code and description. job_description = PER_JOB.DESCRIPTION RETURN job_description",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you format a date in Fast Formula?\n\n***answer***: You can use `TO_CHAR` to format a date in a specific format. formatted_date = TO_CHAR(SYSDATE, 'DD-MON-YYYY') RETURN formatted_date",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you assign a value to a variable in Fast Formula?\n\n***answer***: You simply use the assignment operator (`=`) to assign values to variables. salary = basic_salary + bonus RETURN salary",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you implement a conditional calculation in Fast Formula?\n\n***answer***: You can use an `IF-THEN-ELSE` statement to apply conditional logic. IF salary > 1000 THEN RETURN salary * 0.1 ELSE RETURN 0",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the `GET_ELEMENT_VALUE` function used for?\n\n***answer***: The `GET_ELEMENT_VALUE` function retrieves a specific element\u2019s value for an employee. element_value = GET_ELEMENT_VALUE('Bonus') RETURN element_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you generate a random number in Fast Formula?\n\n***answer***: You can use the `DBMS_RANDOM.VALUE` function to generate a random number. random_number = DBMS_RANDOM.VALUE(1, 100) RETURN random_number",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you create a date from separate year, month, and day values?\n\n***answer***: You can use the `TO_DATE` function to create a date from year, month, and day values. date_value = TO_DATE(year || '-' || month || '-' || day, 'YYYY-MM-DD') RETURN date_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you calculate age from a date of birth in Fast Formula?\n\n***answer***: Use `SYSDATE` and subtract the birth date to calculate the age in years. age = FLOOR(MONTHS_BETWEEN(SYSDATE, birth_date) / 12) RETURN age",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you calculate the percentage of a value in Fast Formula?\n\n***answer***: You can calculate the percentage by multiplying the value by the percentage. percentage_value = value * 0.15 RETURN percentage_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the `DECODE` function used for in Fast Formula?\n\n***answer***: The `DECODE` function is similar to a CASE or IF-THEN-ELSE expression. It returns a value based on a condition. result = DECODE(variable, 'A', 'Yes', 'B', 'No', 'Unknown') RETURN result",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you check if an employee has a specific assignment status?\n\n***answer***: You can use `PER_ASSIGNMENT.STATUS` to check the assignment status. IF PER_ASSIGNMENT.STATUS = 'ACTIVE' THEN RETURN 'Active Employee' ELSE RETURN 'Inactive Employee'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you calculate the number of workdays between two dates?\n\n***answer***: Use the `WORKDAYS_BETWEEN` function to find the number of workdays between two dates. workdays_diff = WORKDAYS_BETWEEN(start_date, end_date) RETURN workdays_diff",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the purpose of the `GET_ELEMENT_ENTRY_VALUE` function?\n\n***answer***: `GET_ELEMENT_ENTRY_VALUE` retrieves the value of a payroll element for a specific employee within a date range. element_value = GET_ELEMENT_ENTRY_VALUE('Earnings', '01-JAN-2024', '31-JAN-2024') RETURN element_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you get the current year in Fast Formula?\n\n***answer***: You can use the `EXTRACT` function to extract the current year from the system date. current_year = EXTRACT(YEAR FROM SYSDATE) RETURN current_year",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you compare two numbers in Fast Formula?\n\n***answer***: Use standard comparison operators such as `=`, `>`, `<`, `>=`, `<=`, and `<>`. IF salary > 1000 THEN RETURN 'Above threshold' ELSE RETURN 'Below threshold'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the `LEAST` function used for in Fast Formula?\n\n***answer***: The `LEAST` function returns the smallest value in a list of expressions. smallest_value = LEAST(value1, value2, value3) RETURN smallest_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the `GREATEST` function used for in Fast Formula?\n\n***answer***: The `GREATEST` function returns the largest value in a list of expressions. largest_value = GREATEST(value1, value2, value3) RETURN largest_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you get the first day of the current month in Fast Formula?\n\n***answer***: You can use the `TRUNC` function to get the first day of the current month. first_day_of_month = TRUNC(SYSDATE, 'MM') RETURN first_day_of_month",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you perform a case-insensitive comparison of strings in Fast Formula?\n\n***answer***: Use the `UPPER` or `LOWER` functions to make a case-insensitive comparison. IF UPPER(name) = UPPER('John') THEN RETURN 'Match' ELSE RETURN 'No Match'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you check if a number is negative in Fast Formula?\n\n***answer***: You can use an `IF` statement to check if a number is less than zero. IF number < 0 THEN RETURN 'Negative' ELSE RETURN 'Positive'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you format a currency value in Fast Formula?\n\n***answer***: Use `TO_CHAR` with a format mask to format a value as currency. formatted_value = TO_CHAR(value, '999,999.99') RETURN formatted_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you check if a date is in the future in Fast Formula?\n\n***answer***: You can use the `SYSDATE` to compare the date with the current system date. IF date > SYSDATE THEN RETURN 'Future Date' ELSE RETURN 'Past Date'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What does the `ADD_MONTHS` function do in Fast Formula?\n\n***answer***: The `ADD_MONTHS` function adds a specified number of months to a date. future_date = ADD_MONTHS(SYSDATE, 3) RETURN future_date",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you calculate the difference between two times in Fast Formula?\n\n***answer***: You can subtract one time value from another to calculate the difference. time_diff = time_end - time_start RETURN time_diff",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you check if a string contains a substring in Fast Formula?\n\n***answer***: You can use the `INSTR` function to find if a string contains a substring. IF INSTR(string, 'Oracle') > 0 THEN RETURN 'Substring Found' ELSE RETURN 'Substring Not Found'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you calculate the sum of values in a list using Fast Formula?\n\n***answer***: Use a loop to sum the values in a list. sum = 0 FOR i IN 1..count LOOP sum = sum + list(i) END LOOP RETURN sum",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you use `SELECT_VALUE` in Fast Formula?\n\n***answer***: `SELECT_VALUE` is used to retrieve a value from an element or table based on a condition. selected_value = SELECT_VALUE('Element', 'Condition') RETURN selected_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the `FLOOR` function in Fast Formula?\n\n***answer***: The `FLOOR` function rounds a numeric value down to the nearest integer. floored_value = FLOOR(value) RETURN floored_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you extract the day of the week from a date in Fast Formula?\n\n***answer***: Use the `TO_CHAR` function to extract the day of the week. day_of_week = TO_CHAR(SYSDATE, 'Day') RETURN day_of_week",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you find the length of an array in Fast Formula?\n\n***answer***: Use the `COUNT` function to find the number of elements in an array. array_length = COUNT(array) RETURN array_length",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you calculate the cumulative sum of a payroll element in Fast Formula?\n\n***answer***: Use the `SUM` function along with a date range to calculate the cumulative sum. cumulative_sum = SUM('Earnings', '01-JAN-2024', '31-DEC-2024') RETURN cumulative_sum",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the `PER_JOB` table used for in Fast Formula?\n\n***answer***: The `PER_JOB` table contains job-related data such as job code and job title. job_code = PER_JOB.JOB_CODE RETURN job_code",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you get the last day of the previous month in Fast Formula?\n\n***answer***: Use the `ADD_MONTHS` and `LAST_DAY` functions. last_day_previous_month = LAST_DAY(ADD_MONTHS(SYSDATE, -1)) RETURN last_day_previous_month",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you calculate the annual salary from a monthly salary in Fast Formula?\n\n***answer***: Multiply the monthly salary by 12 to calculate the annual salary. annual_salary = monthly_salary * 12 RETURN annual_salary",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you calculate a weighted average in Fast Formula?\n\n***answer***: Use a weighted formula to calculate the average. weighted_average = (value1 * weight1 + value2 * weight2) / (weight1 + weight2) RETURN weighted_average",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you create a date from a string in Fast Formula?\n\n***answer***: Use the `TO_DATE` function to convert a string to a date. date_value = TO_DATE('2024-12-31', 'YYYY-MM-DD') RETURN date_value",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the `SYSDATE` function used for in Fast Formula?\n\n***answer***: `SYSDATE` returns the current system date and time. current_date = SYSDATE RETURN current_date",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you check if an element value is greater than a certain threshold in Fast Formula?\n\n***answer***: Use a conditional statement to check the value. IF element_value > threshold THEN RETURN 'Above Threshold' ELSE RETURN 'Below Threshold'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you set an element value conditionally in Fast Formula?\n\n***answer***: Use `IF-THEN` logic to set the value conditionally. IF salary > 5000 THEN bonus = 1000 ELSE bonus = 500 RETURN bonus",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you check if a variable is NULL in Fast Formula?\n\n***answer***: Use the `IS NULL` condition to check for NULL values. IF variable IS NULL THEN RETURN 'NULL' ELSE RETURN 'Not NULL'",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you convert a string to uppercase in Fast Formula?\n\n***answer***: Use the `UPPER` function to convert a string to uppercase. upper_case_string = UPPER('oracle') RETURN upper_case_string",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you use the `LENGTH` function in Fast Formula?\n\n***answer***: The `LENGTH` function returns the length of a string. string_length = LENGTH('Oracle Fast Formula') RETURN string_length",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: How do you concatenate two strings in Fast Formula?\n\n***answer***: Use the `||` operator to concatenate strings. full_name = first_name || ' ' || last_name RETURN full_name",
        "metadata": {
            "source": "dataset"
        }
    }
]