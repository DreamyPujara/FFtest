[
    {
        "page_content": "***question***: Write an Absence duration formula that calculates absence duration based on an employee\u2019s work schedule and assigned shift timings. It first retrieves the assigned work schedule and then applies specific rules based on the schedule type.\n\nFor employees with an 8-hour Elapsed General Work Schedule, the system calculates the available working hours:\n\nIf the absence starts at mid-day (50% of the shift completed), the system checks the planned end time:\nIf a specific end duration is provided, the absence is adjusted accordingly.\nOtherwise, the full shift duration is considered.\nIf the absence starts at a custom time:\nIf the planned start time falls within working hours, the absence is adjusted accordingly.\nIf the start time is outside working hours, the full shift is considered.\nFor employees on the Afghanistan General Work Schedule (Summer with 1-hour break):\n\nIf the absence duration is 4.5 hours or less, it is rounded up to 4 hours.\nIf the absence is longer than 4.5 hours, it is counted as a full 8-hour shift.\nFor Security Guards and Drivers, special weekend rules apply:\n\nIf the absence falls on a Friday or Saturday, it is ignored (set to 0 hours).\nIf the employee takes a partial-day absence on a weekend, it is capped at 10 hours max.\nThe formula ensures correct duration adjustments for full-day, partial-day, and weekend absences, then returns the final absence duration for payroll processing.\n\n***Instruction for the fastformula***: **DBI Values Used:**\n- EFFECTIVE_DATE\n- HR_ASSIGNMENT_ID\n- PERSON_ID\n\n**Input Values:**\n- IV_START_DATE (date)\n- IV_END_DATE (date)\n- IV_START_TIME (text)\n- IV_END_TIME (text)\n- IV_START_DURATION (number)\n- IV_END_DURATION (number)\n- IV_ABS_START_DATE (date)\n- IV_ABS_END_DATE (date)\n\n**Return Type:**\nThe formula returns a numeric value representing the calculated duration.\n\n**Logic Summary:**\n1. **Initialization and Context Retrieval:** The formula begins by setting default values for various input variables and retrieving context-specific values like the effective date, HR assignment ID, and person ID. It also logs the start of the process for debugging purposes.\n\n2. **Date and Time Conversion:** The input dates and times are converted into a consistent date-time format to facilitate further calculations. This includes creating `ld_period_start_date` and `ld_period_end_date` for the period of interest.\n\n3. **Work Schedule Determination:** The formula checks the work schedule associated with the HR assignment. Depending on the schedule (e.g., '8 hours Elapsed General Work Schedule AFG NEW', 'New Afghanistan General Work Schedule Summer with 1 Hour break', 'AFG Security Guard Work Schedule 60 hours', 'AFG Drivers Work Schedule 50 hours'), different logic paths are followed.\n\n4. **Availability Calculation:** For each relevant work schedule, the formula calculates the available hours (`ln_entry_duration_d`) for the specified period using the `GET_PAY_AVAILABILITY` function. This calculation considers the start and end dates, as well as the start and end times.\n\n5. **Conditional Adjustments:** Based on the start and end durations provided as inputs (`IV_START_DURATION` and `IV_END_DURATION`), the formula makes adjustments to the calculated duration. These adjustments ensure that the final duration aligns with the specified start and end conditions.\n\n6. **Weekend and Special Day Handling:** The formula checks if the start or end date falls on a Friday or Saturday. If so, it applies specific rules to adjust the duration, such as setting it to zero or a predefined value.\n\n7. **Duration Accumulation and Return:** The calculated duration is accumulated in the `DURATION` variable. After all necessary calculations and adjustments, the final duration is returned as the output of the formula.\n\nThis structured approach ensures that the formula accurately calculates the duration based on the specified inputs and work schedule, taking into account various conditions and adjustments.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates absence requests for employees in the UK based on absence type, approval status, and work schedule rules. It ensures that employees do not exceed their allowed absence limits.\n\nFor Carers Leave:\n\nChecks if the request is submitted but not yet approved and adds it to the total approved hours.\nIf the total requested absence exceeds the annual limit, it rejects the request with an error message.\nAllows leave to be applied only in full-day or half-day increments.\nFor Annual Leave:\n\nEnsures that leave can only be taken in half-day or full-day increments, based on the employee's normal working hours.\nIf the requested duration does not align with half/full-day rules, the request is rejected.\nFor Sick Leave:\n\nLimits the weekly allowance by dividing total normal hours by 5 (i.e., daily work schedule).\nEnsures leave can only be taken in half-day or full-day increments, similar to Annual Leave.\nIf the request does not comply with these rules, the formula returns an error message indicating the issue. Otherwise, it validates the request for approval.\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_ASG_FTE_VALUE\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- PER_ASG_NORMAL_HOURS\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_ATTRIBUTE_NUMBER1\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n\nInput Values:\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION (number)\n- IV_ATTRIBUTE_NUMBER1 (number)\n- IV_START_TIME (text)\n- IV_END_TIME (text)\n\nReturn Type:\nThe formula returns a set of values including VALID (text), ERROR_CODE (text), ERROR_MESSAGE (text), TOKEN_NAME (array of text), TOKEN_VALUE (array of text), and TOKEN (text).\n\nLogic Summary:\n1. The formula initializes various default values for absence-related database items and input variables.\n2. It sets up context variables for the person, assignment, and legislative data group based on the provided start and end dates.\n3. The formula calculates effective dates for the start and end of the period based on the input start date.\n4. It iterates through existing absence entries to accumulate approved absence hours for 'Carers Leave' if the status is 'SUBMITTED' and approval status is 'APPROVED' or 'AWAITING'.\n5. Depending on the absence type ('Carers Leave', 'Annual Leave', 'Sick Leave'), the formula checks if the total requested absence hours exceed the valid allocation for the year.\n6. For 'Carers Leave', it validates if the total duration matches the default or half duration.\n7. For 'Annual Leave' and 'Sick Leave', it ensures the requested duration is in half or full day increments.\n8. If any validation fails, it sets VALID to 'N', constructs an error message, and returns the error details.\n9. If all validations pass, it sets VALID to 'Y' and returns the success status.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the absence duration based on an employee\u2019s assigned work schedule and working hours. It applies different rules for various schedules to ensure accurate payroll processing.\n\nFor an 8-hour Elapsed General Work Schedule:\n\nThe system loops through each day in the absence period to determine actual working hours.\nIf the absence starts mid-shift, it checks the planned end time:\nIf an end duration is provided, it adjusts the absence accordingly.\nOtherwise, it retains the full available work hours.\nFor Afghanistan General Work Schedule (Summer with 1-hour break):\n\nIf the absence is 4.5 hours or less, it is rounded to 4 hours.\nIf the absence is more than 4.5 hours, it is counted as a full 8-hour shift.\nFor Security Guards and Drivers' Work Schedules:\n\nIf the absence falls on a Friday or Saturday, it is ignored (set to 0 hours).\nIf the absence is partial on a weekend, it is capped at 10 hours.\nFinal Calculation:\n\nThe formula accumulates absence hours across multiple days.\nIt returns the total adjusted absence duration based on the employee\u2019s schedule and shift policies.\n\n***Instruction for the fastformula***: **DBI Values Used:**\n- EFFECTIVE_DATE\n- HR_ASSIGNMENT_ID\n- PERSON_ID\n\n**Input Values:**\n- IV_START_DATE (date)\n- IV_END_DATE (date)\n- IV_START_TIME (text)\n- IV_END_TIME (text)\n- IV_START_DURATION (number)\n- IV_END_DURATION (number)\n- IV_ABS_START_DATE (date)\n- IV_ABS_END_DATE (date)\n\n**Return Type:**\n- The formula returns a numeric value representing the total duration calculated based on the input parameters and the work schedule.\n\n**Logic Summary:**\n1. **Initialization and Context Retrieval:**\n   - The formula initializes default values for various input variables and retrieves context values like the effective date, HR assignment ID, and person ID.\n   - It also logs the start of the process for debugging purposes.\n\n2. **Work Schedule Determination:**\n   - The work schedule associated with the HR assignment is determined based on the start date of the period.\n   - The formula checks if the work schedule is '8 hours Elapsed General Work Schedule AFG NEW'. If so, it proceeds with a specific logic; otherwise, it handles other schedules differently.\n\n3. **Duration Calculation for '8 hours Elapsed General Work Schedule AFG NEW':**\n   - For each day within the start and end date range, the formula calculates the available hours for the day.\n   - It adjusts the duration based on the start and end durations provided as inputs.\n   - The calculated duration for each day is added to the total duration.\n\n4. **Duration Calculation for Other Schedules:**\n   - If the work schedule is 'New Afghanistan General Work Schedule Summer with 1 Hour break', the formula calculates the duration based on predefined rules.\n   - For the 'AFG Security Guard Work Schedule 60 hours' and 'AFG Drivers Work Schedule 50 hours', the formula follows a similar logic as the '8 hours Elapsed General Work Schedule AFG NEW', with specific adjustments for weekends and other conditions.\n\n5. **Final Duration Calculation:**\n   - The total duration is accumulated over the period and returned as the final result.\n   - The formula includes logging statements at various points to aid in debugging and understanding the flow of execution.\n\nThis formula is designed to calculate the total duration of work based on different work schedules and input parameters, ensuring accurate time tracking for various roles and schedules within an organization.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: his formula validates absence requests based on the type of leave, ensuring employees do not exceed policy limits for various leave categories.\n\nFor Maternity Leave:\n\nChecks the past rolling year (365 days) for taken leave.\nIf the total exceeds 98 days, the request is rejected.\nFor Paternity Leave:\n\nChecks the past rolling year for taken leave.\nIf the total exceeds 5 days, the request is rejected.\nFor Exceptional Permission Leave:\n\nEnsures that employees do not exceed 10 days of leave in a rolling year.\nFor Annual Leave:\n\nChecks the employee's length of service.\nIf the employee has less than 6 months of service, the request is rejected.\nFor Unpaid Leave:\n\nLimits the total unpaid leave to 30 days in a rolling year.\nIf any of these conditions fail, the formula returns an error message. Otherwise, the request is validated for approval.\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_REL_LENGTH_OF_SERVICE_BY_HIRE\n- PER_PER_PERSON_NUMBER\n\nInput Values:\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION\n\nReturn Type:\nThe formula returns a set of values including a validation status (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), and a token message (TOKEN). It also returns arrays for token names (TOKEN_NAME) and token values (TOKEN_VALUE).\n\nLogic Summary:\n1. The formula initializes several default values and retrieves context-specific data like person ID and absence type ID.\n2. It checks the type of absence (Maternity Leave, Paternity Leave, Exceptional Permission, Annual Leave, Unpaid Leave) and calculates the total absence days for the specified type within a rolling year.\n3. For each absence type, it adds the input total duration to the calculated total absence days and checks if the total exceeds the allowed limit for that type. If it does, it sets a validation flag to 'N' and constructs an error message.\n4. For Annual Leave, it additionally checks the employee's length of service. If the service is less than 6 months, it sets the validation flag to 'N' and constructs an appropriate message.\n5. If any validation fails, it returns the validation status, error code, error message, and the constructed token message. If all validations pass, it simply returns the validation status.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates absence requests based on the type of leave, ensuring employees do not exceed policy limits for different leave categories.\n\nFor Parental Leave:\n\nChecks if the total parental leave taken exceeds 10 days.\nIf exceeded, the request is rejected.\nFor Birthday Leave:\n\nEnsures the absence date matches the employee\u2019s date of birth.\nIf the selected date does not match, the request is rejected.\nFor Maternity Leave:\n\nChecks the employee\u2019s gender before allowing maternity leave.\nIf the employee is female ('F'), the maximum allowed leave is 60 days in a rolling year.\nIf the employee is not female, only 4 days are allowed.\nIf the total maternity leave exceeds the limit, the request is rejected.\nIf any of these conditions fail, the formula returns an error message. Otherwise, the request is validated for approval.\n\n***Instruction for the fastformula***: ```\nDBI Values Used: \n- ANC_ABS_TYP_NAME\n- PER_PER_SEX\n- PER_PER_DATE_OF_BIRTH\n\nInput Values: \n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION\n\nReturn Type: \nThe formula returns a set of values including a validation status (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), and token information (TOKEN_NAME, TOKEN_VALUE, TOKEN).\n\nLogic Summary: \n1. The formula initializes several default values and retrieves context-specific IDs for absence type, person, assignment, and legislative data group.\n2. It then checks the type of absence being applied for (Parental Leave, Birthday Leave, Maternity Leave) and performs specific validations and calculations for each type:\n   - For Parental Leave, it calculates the total absence duration based on the start date and checks if it exceeds 10 days.\n   - For Birthday Leave, it verifies if the start date matches the person's date of birth.\n   - For Maternity Leave, it calculates the total absence duration over the past year, considering the person's sex to determine the allowed limit (4 days for males, 60 days for females).\n3. If any validation fails, it sets a corresponding error message and marks the application as invalid (VALID = 'N').\n4. Finally, it returns the validation status along with error details if the application is invalid, or just the validation status if it is valid.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates absence requests based on the type of leave and ensures employees do not exceed policy limits. It also checks eligibility based on service duration.\n\nFor Bereavement Leave:\n\nLimits total leave to 5 days per year.\nIf exceeded, the request is rejected.\nFor Family and Medical Leave:\n\nRequires at least 1 year of service before applying.\nLimits leave to 16 weeks in a rolling year.\nIf exceeded, the request is rejected.\nFor Paid Parental Leave:\n\nRequires at least 30 days of service before applying.\nLimits leave to 16 weeks in a 12-month period.\nFor Short-Term Disability Leave:\n\nLimits the maximum leave to 90 days per year.\nIf exceeded, the request is rejected.\nIf any of these conditions fail, the formula returns an error message. Otherwise, the request is validated for approval.\n\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_REL_LENGTH_OF_SERVICE_BY_HIRE\n- IV_START_DATE\n- IV_END_DATE\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- IV_TOTALDURATION\n\nInput Values:\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION\n\nReturn Type:\nThe formula returns a set of values including a validation status (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), token names (TOKEN_NAME), token values (TOKEN_VALUE), and a specific token (TOKEN).\n\nLogic Summary:\n1. The formula initializes various default values and retrieves context-specific IDs such as absence type ID, person ID, assignment ID, and legislative data group ID.\n2. It calculates the current year from the start date and sets the effective date and year-end date for the current year.\n3. The formula iterates through an array of absence entry IDs, updating context for each entry to gather details like absence type name, approval status, and absence status.\n4. It checks for specific absence types ('Bereavement Leave', 'Family and Medical Leave', 'Short term and Long term Disability', 'Paid Parental Leave') and accumulates the duration of approved or awaiting absences for each type.\n5. For each absence type, the formula validates the total duration of the requested leave against predefined limits:\n   - For 'Bereavement Leave', it ensures the total does not exceed 5 days in a year.\n   - For 'Family and Medical Leave', it checks if the employee has completed at least one year of service and limits the leave to 16 weeks in a year.\n   - For 'Paid Parental Leave', it ensures the employee has completed at least 30 days of service and limits the leave to 16 weeks in a twelve-month period.\n   - For 'Short term and Long term Disability', it limits the leave to 90 days in a year for short-term disability.\n6. If any validation fails, it sets an appropriate error message and marks the validation as invalid (VALID = 'N').\n7. Finally, the formula returns the validation status, error code, error message, and any relevant tokens. If validation is successful, it returns only the validation status.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates absence requests based on the type of leave and ensures employees comply with policy rules.\n\nFor Annual Leave:\n\nEmployees cannot apply for leave before completing their probation period.\nFor Study Leave:\n\nThe total leave cannot exceed 10 days in a rolling period.\nFor Compassionate Leave & Bereavement Leave:\n\nLimited to 5 days per year.\nFor Maternity Leave:\n\nRestricted to 90 days in a rolling year.\nFor Pre-Adoptive Leave:\n\nMaximum of 30 days allowed.\nFor Unpaid Leave:\n\nEmployees must have exhausted their Annual Leave balance before applying.\nMaximum limit: 240 hours.\nFor Sick Leave:\n\nRequires at least 2 months of service before applying.\nFull Sick Leave capped at 45 days.\nShort Sick Leave capped at 10 days.\nIf any of these conditions fail, the formula returns an error message. Otherwise, the request is validated for approval.\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_REL_LENGTH_OF_SERVICE_BY_HIRE\n\nInput Values:\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION\n\nReturn Type:\nThe formula returns a set of values including a validation status (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), and tokens for error messages (TOKEN_NAME, TOKEN_VALUE, TOKEN).\n\nLogic Summary:\n1. The formula initializes default values for various database items and input variables, setting up the context for leave validation.\n2. It checks the length of service by hire date and adjusts it if necessary.\n3. The formula retrieves context-specific values like absence type ID, person ID, assignment ID, and legislative data group ID.\n4. It then validates different types of leave applications based on specific rules:\n   - For 'Annual Leave', it checks if the application is made before the end of the probation period.\n   - For 'Study Leave', it calculates the total absence duration and ensures it does not exceed 10 days.\n   - For 'Compassionate Leave' and 'Bereavement Leave', it limits the total duration to 5 days.\n   - For 'Maternity Leave', it restricts the total duration to 90 days.\n   - For 'Pre-adoptive Leave', it caps the duration at 30 days.\n   - For 'Unpaid Leave', it checks if there is any remaining 'Annual Leave' balance and limits the total duration to 240 hours.\n   - For 'Sick Leave', it ensures the employee has completed at least two months of service and limits the duration to 45 days for 'Sick Leave' and 10 days for 'Short Sick Leave'.\n5. If any validation fails, it sets an appropriate error message and marks the application as invalid (VALID = 'N').\n6. Finally, it returns the validation status along with any error messages and tokens if the application is invalid, or just the validation status if it is valid.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates absence requests based on the type of leave and ensures compliance with company policies.\n\nFor Annual Leave:\n\nEmployees cannot apply before completing their probation period.\nFor Study Leave:\n\nThe total leave cannot exceed 10 days.\nFor Compassionate & Bereavement Leave:\n\nLimited to 5 days per year.\nFor Maternity Leave:\n\nRestricted to 60 working days.\nFor Pre-Adoptive Leave:\n\nMaximum of 30 days allowed.\nFor Unpaid Leave:\n\nEmployees must have zero Annual Leave balance before applying.\nThe leave is capped at 240 hours.\nFor Sick Leave:\n\nMaximum allowed is 15 days.\nIf any of these conditions fail, the formula returns an error message.\n\n***Instruction for the fastformula***: ```\nDBI Values Used: \n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_REL_LENGTH_OF_SERVICE_BY_HIRE\n\nInput Values: \n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION\n\nReturn Type: \nThe formula returns a set of values including a validation status (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), and tokens for additional information.\n\nLogic Summary: \n1. The formula initializes several default values and input parameters, including start and end dates, absence reason, and total duration.\n2. It checks the length of service by hire date and adjusts it if necessary.\n3. The formula retrieves context-specific values such as absence type ID, person ID, assignment ID, and legislative data group ID.\n4. It then checks the absence type and applies specific validation rules based on the type:\n   - For 'Annual Leave', it verifies if the start date is before the end of the probation period.\n   - For 'Study Leave', it calculates the total absence days and ensures it does not exceed 10 days.\n   - For 'Compassionate Leave' and 'Bereavement Leave', it checks if the total absence does not exceed 5 days.\n   - For 'Maternity Leave', it ensures the total absence does not exceed 60 working days.\n   - For 'Pre-adoptive Leave', it checks if the total absence does not exceed 30 days.\n   - For 'Unpaid Leave', it first checks if there is any Annual Leave balance and then ensures the total absence does not exceed 240 hours.\n   - For 'Sick Leave', it ensures the total absence does not exceed 15 days.\n5. If any validation fails, it sets a token with an appropriate message and marks the validation status as 'N'. Otherwise, the validation status remains 'Y'.\n6. Finally, the formula returns the validation status, error code, error message, and tokens based on the validation results.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula determines pay factor and entitlement based on an employee\u2019s probation period and length of service.\n\nBy default, the pay factor is set to 100%, and the band entitlement is 12 months \u00d7 5 days \u00d7 8 hours.\nIf the employee is still in their probation period or has less than 6 months of service, the formula:\nKeeps the pay factor at 100%.\nReduces the band entitlement to 8 months \u00d7 5 days \u00d7 8 hours.\nThe final pay factor and entitlement values are returned\n\n***Instruction for the fastformula***: ```\nDBI Values Used: \n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n\nInput Values: \n- None\n\nReturn Type: \n- The formula returns two values: bandpayfactor (a numeric value) and bandentitlement (a numeric value).\n\nLogic Summary: \n1. The formula initializes two variables, L_PROBATION_END and L_HIRE_DATE, with values from the database items PER_ASG_DATE_PROBATION_END and PER_ASG_REL_ORIGINAL_DATE_OF_HIRE, respectively.\n2. It also sets a variable L_DATE to the current date.\n3. Two variables, bandpayfactor and bandentitlement, are initially set to 100 and 480 (calculated as 12 months * 5 days * 8 hours), respectively.\n4. The formula checks if the probation end date (L_PROBATION_END) is later than the current date (L_DATE) or if the employee has been hired for less than 6 months (calculated using the difference between the current date and the hire date).\n5. If either of these conditions is true, the values of bandpayfactor and bandentitlement are updated to 100 and 320 (calculated as 8 days * 5 days * 8 hours), respectively.\n6. Finally, the formula returns the values of bandpayfactor and bandentitlement.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates absence entries for UK employees, ensuring compliance with absence policies and entitlements.\n\nCompassionate Leave Validation\n\nChecks submitted and approved leave records.\nEnsures total absence hours do not exceed the allocated limit (normal weekly hours).\nValidates that leave can only be taken in half or full-day increments.\nParental Leave Validation\n\nRequires child selection in the absence request.\nEnsures a maximum of 4 weeks per year per child.\nPaternity Leave Validation\n\nLimits paternity leave to 2 weeks per year.\nIf any condition fails, an error message is returned\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_ASG_FTE_VALUE\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- PER_ASG_NORMAL_HOURS\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_ATTRIBUTE_NUMBER1\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n\nInput Values:\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION (number)\n- IV_ATTRIBUTE_NUMBER1 (number)\n- IV_START_TIME (time)\n- IV_END_TIME (time)\n\nReturn Type:\nThe formula returns a set of values including VALID (text), ERROR_CODE (text), ERROR_MESSAGE (text), TOKEN_NAME (array of text), TOKEN_VALUE (array of text), and TOKEN (text).\n\nLogic Summary:\n1. The formula initializes various default values for absence-related database items and input variables.\n2. It sets up context variables for the person, assignment, and legislative data group based on the current context.\n3. The formula calculates effective start and end dates for the year based on the input start date.\n4. It iterates through existing absence entries to calculate the total approved absence hours for 'Compassionate Leave' if the status is 'SUBMITTED' and approval status is 'APPROVED' or 'AWAITING'.\n5. For 'Compassionate Leave', it checks if the total applied absence hours exceed the valid hours (normal working hours). If so, it sets an error message and marks the application as invalid.\n6. It retrieves the default and half-day duration for the period and validates if the applied duration matches either of these values. If not, it sets an error message and marks the application as invalid.\n7. For 'Parental Leave', it checks if a child is selected. If not, it sets an error message. It then calculates the total duration for the selected child and checks if it exceeds 4 weeks. If so, it sets an error message and marks the application as invalid.\n8. For 'Paternity Leave', it calculates the total absence days for the year and checks if it exceeds 2 weeks. If so, it sets an error message and marks the application as invalid.\n9. Finally, based on the validation results, it returns the appropriate values indicating the validity of the application, along with any error messages or tokens.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates absence entry rules for Pakistan (PK). Here\u2019s a concise summary of its key conditions:\n\nAnnual Leave: Employees cannot apply for annual leave within six months of their hire date.\n\nUncertified Leave: Cannot exceed 7 days in total.\n\nUnpaid Leave: Allowed only if the annual leave balance is zero. The maximum allowed is 90 days.\n\nCompassionate Leave: Cannot exceed 10 days.\n\nStudy Leave: Cannot exceed 30 days.\n\nMaternity Leave:\n\nDefault eligibility: 140 days.\nBirth of twins: 186 days.\nBirth with complications: 156 days.\nCannot exceed the specified eligibility.\nIf any of these conditions are violated, an error message is triggered\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_REL_LENGTH_OF_SERVICE_BY_HIRE\n\nInput Values:\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION\n\nReturn Type:\nThe formula returns a set of values including a validation status (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), and token details (TOKEN_NAME, TOKEN_VALUE, TOKEN).\n\nLogic Summary:\n1. The formula initializes several context variables like absence type ID, person ID, assignment ID, and legislative data group ID from the current context.\n2. It retrieves the absence type name and checks if the employee is eligible for 'Annual Leave' based on their hire date. If the employee has been hired for less than six months, the application is invalid.\n3. For 'Uncertified Leave', it calculates the total absence days for the current year. If the total duration exceeds 7 days, the application is invalid.\n4. For 'Unpaid Leave', it checks if there is any remaining 'Annual Leave' balance. If there is, the application is invalid. Otherwise, it calculates the total absence days for the current year and checks if it exceeds 90 days.\n5. For 'Compassionate Leave', it calculates the total absence days for the current year and checks if it exceeds 10 days.\n6. For 'Study Leave', it calculates the total absence days for the current year and checks if it exceeds 30 days.\n7. For 'Maternity Leave', it calculates the total absence days for the past year and checks if it exceeds the eligibility limit based on the absence reason (e.g., 140 days for normal birth, 186 days for twins, etc.).\n8. If any of the conditions make the application invalid, it sets an appropriate error message and returns the validation status as 'N'. Otherwise, it returns the validation status as 'Y'.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the total absence duration by considering weekends and holidays. It converts the start and end dates to a proper format and iterates through the date range to count working days. If an employee is categorized as AKF_LOCAL, weekends and holidays are included; otherwise, only working days are counted. The formula uses GET_PAY_AVAILABILITY to check available workdays and returns the final absence duration as DURATION\n\n***Instruction for the fastformula***: ```\nDBI Values Used: \n- ABSENCE_TYPE_ID\n\nInput Values: \n- IV_START_DATE (date)\n- IV_END_DATE (date)\n\nReturn Type: \n- DURATION (number)\n\nLogic Summary: \n1. The formula starts by setting default values for start and end dates, absence type name, and employee category. These defaults are placeholders and may not be used if actual input values are provided.\n2. It then converts the input start and end dates into a specific date format for processing.\n3. The total duration in days between the start and end dates is calculated, including the start date.\n4. The formula retrieves the context of an absence type ID and sets it as the current context for further operations.\n5. If the absence type is 'Annual Leave', the formula proceeds to calculate the number of working days, holidays, and weekends within the specified date range.\n6. It iterates through each day from the start date to the end date, checking the availability of the day for work. If the day is available, it is counted as a working day.\n7. If a day is not available for work, the formula checks if it is a Saturday or Sunday and counts it as a weekend day. Otherwise, it is counted as a holiday.\n8. Depending on the employee category, the total duration is adjusted. If the category is not 'AKF_LOCAL', only working days are counted. Otherwise, working days, weekends, and holidays are all included.\n9. Finally, the formula returns the calculated duration as the output.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates leave accrual based on the employee's enrollment start date and the accrual period. If the plan enrollment start date is before or equal to the accrual period start date, it assumes 20 working days. Otherwise, it dynamically calculates available working days using GET_PAY_AVAILABILITY. If the employee has less than 13 working days, the accrual is set to 0. The final accrued leave is returned as accrual.\n\n***Instruction for the fastformula***: ```\nDBI Values Used: \n- HR_ASSIGNMENT_ID\n- PERSON_ID\n\nInput Values: \n- IV_ACCRUAL\n- IV_ACCRUALPERIODSTARTDATE (DATE)\n- IV_ACCRUALPERIODENDDATE (DATE)\n- IV_PLANENROLLMENTSTARTDATE (DATE)\n- IV_PLANENROLLMENTENDDATE (DATE)\n\nReturn Type: \nThe formula returns a numeric value representing the accrual amount.\n\nLogic Summary: \n1. The formula initializes several variables, including `L_HIRE_DATE`, `L_ACCRUAL`, and `L_WORKING_DAYS`. The `L_HIRE_DATE` is set to the `IV_PLANENROLLMENTSTARTDATE`, and `L_ACCRUAL` is set to the `IV_ACCRUAL` value.\n2. It checks if the `IV_PLANENROLLMENTSTARTDATE` is earlier than or equal to the `IV_ACCRUALPERIODSTARTDATE`. If true, `L_WORKING_DAYS` is set to 20. Otherwise, it calculates `L_WORKING_DAYS` using the `GET_PAY_AVAILABILITY` function, which determines the number of working days between the `IV_PLANENROLLMENTSTARTDATE` and `IV_ACCRUALPERIODENDDATE`.\n3. If `L_WORKING_DAYS` is less than 13, the `L_ACCRUAL` is set to 0, indicating no accrual.\n4. Finally, the formula returns the value of `L_ACCRUAL` as the accrual amount.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates absence duration based on the leave type and employee category.\n\nChild Care Leave: Calculates total days between start and end dates and converts them to hours (days \u00d7 8).\nAdditional Paid Leave for High Altitude Regions: Counts working days and includes weekends if they fall in the leave period.\nAnnual Leave: Differentiates between working days, weekends, and holidays. If the employee category is 'AKF_LOCAL', weekends are included; otherwise, only working days are counted.\nThe final computed leave duration is returned.\n\n***Instruction for the fastformula***: ```\nDBI Values Used: \n- ABSENCE_TYPE_ID\n- PER_WORKER_ASSIGNMENT_EMPLOYEE_CATEGORY\n\nInput Values: \n- IV_START_DATE (date)\n- IV_END_DATE (date)\n\nReturn Type: \nThe formula returns a numeric value representing the total duration of an absence in days.\n\nLogic Summary: \n1. The formula initializes default values for start and end dates, absence type name, and employee category.\n2. It converts the input start and end dates into a specific date format for processing.\n3. The total duration between the start and end dates is calculated in days.\n4. The absence type ID is retrieved from the context and set for further processing.\n5. Depending on the absence type:\n   - If it's 'Child Care Leave', the total duration is multiplied by 8.\n   - If it's 'Additional paid leave for high altitude regions', the formula iterates through each day between the start and end dates, checking for work availability. It counts only the days that are available for work, including weekends if they are not workdays.\n   - If it's 'Annual Leave', the formula also iterates through each day, categorizing days into workdays, weekends, and holidays. The total duration is calculated based on the employee category, including weekends for a specific category.\n6. Finally, the formula returns the calculated total duration in days.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates absence requests based on leave type and specific conditions.\n\nUnpaid Leave: Allowed only if there is no remaining Annual Leave balance.\nAdmin Leave: Limited to 10 days.\nPaternity Leave: Limited to 10 days within the last 365 days.\nMaternity Leave: Duration varies based on absence reasons:\nSingle Child Birth: 126 days\nMultiple Infants / High Altitude / Complexity: 140\u2013180 days\nValidation ensures the total leave does not exceed the allowed limit.\nIf conditions are not met, an error message is returned.\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ABSENCE_TYPE_ID\n- PERSON_ID\n- HR_ASSIGNMENT_ID\n- LEGISLATIVE_DATA_GROUP_ID\n\nInput Values:\n- IV_START_DATE (date)\n- IV_END_DATE (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION (number)\n\nReturn Type:\nThe formula returns a set of values including a validation status (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), and a token message (TOKEN). It also returns arrays for token names (TOKEN_NAME) and token values (TOKEN_VALUE).\n\nLogic Summary:\n1. The formula initializes default values for start and end dates, absence type name, and employee category.\n2. It retrieves context values for absence type ID, person ID, assignment ID, and legislative data group ID.\n3. The formula checks the absence type and performs specific validations based on the type:\n   - For 'Unpaid Leave', it checks if there is any remaining 'Annual Leave' balance. If there is, it sets a validation error indicating that unpaid leave cannot be applied.\n   - For 'Admin Leave', it calculates the total absence days for the current year. If the total exceeds 10 days, it sets a validation error.\n   - For 'Paternity Leave', it calculates the total absence days over the past year. If the total exceeds 10 days, it sets a validation error.\n   - For 'Maternity Leave', it calculates the total absence days over the past year and checks the absence reason. Depending on the reason, it sets a limit on the number of days allowed. If the total exceeds this limit, it sets a validation error.\n4. If any validation fails, it sets a token message explaining the error and returns the validation status as 'N' along with the error code, message, and token details.\n5. If all validations pass, it returns the validation status as 'Y'.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates different types of leave requests based on eligibility criteria:\n\nExam Leave: Maximum 7 days allowed.\nSick Leave: Limited to 190 days.\nHajj Leave: Requires 3 years of service.\nUrgent/Compassionate Leave: Maximum 10 days, reduced proportionally for service less than 1 year.\nPaternity Leave: Limited to 5 days in a rolling 365-day period.\nMaternity Leave: Maximum 90 days in a rolling year.\nLeave Without Pay:\nAllowed only if Annual Leave balance is zero.\nMaximum of 15 days.\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_REL_LENGTH_OF_SERVICE_BY_HIRE\n\nInput Values:\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION\n\nReturn Type:\nThe formula returns a set of values including a validation status (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), and a token message (TOKEN).\n\nLogic Summary:\n1. The formula initializes several variables with default values and retrieves context-specific information like absence type ID, person ID, assignment ID, and legislative data group ID.\n2. It checks the type of absence being applied for (Exam Leave, Sick Leave, Hajj Leave, Urgent/Compassionate Leave, Paternity Leave, Maternity Leave, Leave Without Pay) and applies specific rules for each type.\n3. For Exam Leave and Sick Leave, it calculates the total absence days for the current year and checks if the total duration exceeds the allowed limit (7 days for Exam Leave and 190 days for Sick Leave). If the limit is exceeded, it sets a validation error.\n4. For Hajj Leave, it checks if the employee has completed at least 3 years of service. If not, it sets a validation error.\n5. For Urgent/Compassionate Leave, it calculates the total absence days for the current year and checks if the total duration exceeds the eligibility limit based on service length. If the limit is exceeded, it sets a validation error.\n6. For Paternity Leave and Maternity Leave, it calculates the total absence days for the past year and checks if the total duration exceeds the allowed limit (5 days for Paternity Leave and 90 days for Maternity Leave). If the limit is exceeded, it sets a validation error.\n7. For Leave Without Pay, it first checks if there is any Annual Leave balance. If there is, it sets a validation error. Then, it calculates the total absence days for the current year and checks if the total duration exceeds 15 days. If the limit is exceeded, it sets a validation error.\n8. If any validation error is set, the formula returns an error message and the validation status as 'N'. Otherwise, it returns the validation status as 'Y'.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates different types of leave requests based on eligibility criteria:\n\nProbation Restriction\n\nLeave cannot be applied before the end of the probation period.\nHajj Leave\n\nRequires 5 years of service.\nMaternity Leave\n\nLimited to 180 days in a rolling year.\nPaternity Leave\n\nLimited to 30 days in a rolling year.\nStudy Leave\n\nMaximum 15 days.\nBereavement Leave\n\nMaximum 5 days.\nMarriage Leave\n\nMaximum 7 days.\nCompassion Leave\n\nMaximum 10 days.\nLeave Without Pay\n\nMaximum 30 consecutive days.\nIf any condition is not met, the leave request is rejected with an appropriate error message.\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_REL_LENGTH_OF_SERVICE_BY_HIRE\n\nInput Values:\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION\n\nReturn Type:\nThe formula returns a set of values including a validation status (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), and a token message (TOKEN). It also returns arrays for token names and values.\n\nLogic Summary:\n1. The formula initializes several context variables such as absence type ID, person ID, assignment ID, and legislative data group ID. It also sets a default service period and probation end date.\n2. It checks if the probation end date is defaulted and updates it to the start date if necessary. If the new probation date is after the start date, it sets a token message indicating that leave cannot be applied before the end of probation and marks the validation as invalid.\n3. If the validation is still valid, it retrieves the absence type name based on the absence type ID. Depending on the absence type, it performs specific validations:\n   - For 'Hajj Leave', it checks if the service period is less than 5 years.\n   - For 'Maternity Leave', 'Paternity Leave', 'Study Leave', 'Bereavement Leave', 'Marriage Leave', and 'Compassion Leave', it calculates the total absence days within a rolling year period and checks if it exceeds the allowed limit.\n   - For 'Leave Without Pay', it checks if the total duration exceeds 30 consecutive days.\n4. If any of the validations fail, it sets a corresponding token message and marks the validation as invalid.\n5. Finally, it returns the validation status, error code, error message, and token message. If the validation is invalid, it also returns the token name and value.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates different leave requests for Pakistan (PK) employees based on predefined eligibility rules.\n\nKey Validations:\nMarriage Leave\n\nCannot start within the next 5 days.\nMaximum 15 days allowed.\nMaternity/Paternity Leave\n\nMaximum 9 months (calculated based on working hours).\nFamily Support Leave\n\nLimited to 15 days.\nAnnual Leave\n\nCannot be availed before completing 6 months of service.\nCompassionate Leave\n\nEligibility varies based on relationship with the deceased (e.g., spouse gets 20 days, son/daughter gets 5 days, funeral only gets 1 day).\nSchool Support Leave\n\nCannot be applied beyond one quarter.\nMaximum 4 hours per child per quarter.\nUnpaid Leave\n\nCan only be applied if no Annual Leave balance is available.\nIf a leave request exceeds the allowed limit, the application is rejected with an error message.\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_REL_LENGTH_OF_SERVICE_BY_HIRE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_ATTRIBUTE_NUMBER1\n- ANC_ABS_ENTRS_DURATION\n- PER_ASG_NORMAL_HOURS\n\nInput Values:\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION (number)\n- IV_ATTRIBUTE_NUMBER1 (number)\n\nReturn Type:\nThe formula returns a set of values including VALID (text), ERROR_CODE (text), ERROR_MESSAGE (text), TOKEN_NAME (array of text), TOKEN_VALUE (array of text), and TOKEN (text).\n\nLogic Summary:\n1. The formula initializes various default values and retrieves context-specific data like absence type ID, person ID, assignment ID, and legislative data group ID.\n2. It checks the absence type and applies specific validation rules based on the type:\n   - For 'Marriage Leave', it ensures the start date is not within the next 5 days and the total duration does not exceed 15 days.\n   - For 'Maternity Leave' or 'Paternity Leave', it calculates the total absence days over the past year and ensures the total does not exceed 9 months.\n   - For 'Family Support Leave', it checks the total absence days since the start of the year and ensures it does not exceed 15 days.\n   - For 'Annual Leave', it verifies the employee has been with the company for at least 6 months.\n   - For 'Compassionate Leave', it calculates the total duration based on the absence reason and ensures it does not exceed the eligibility limit.\n   - For 'School Support', it checks the leave duration within a quarter and ensures a child is selected, and the total duration does not exceed 4 hours for the selected child.\n   - For 'Unpaid Leave', it ensures there is no remaining Annual Leave balance.\n3. If any validation fails, it sets a corresponding error message and marks the request as invalid (VALID = 'N').\n4. Finally, it returns the validation status along with any error messages and tokens if the request is invalid. If the request is valid, it simply returns the VALID status.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates leave accrual based on the employee\u2019s hire date and the accrual period.\n\nKey Rules:\nIf the employee was hired before or on the accrual period start date:\n\nThe standard accrual value is retained.\nIf the employee was hired after the accrual period start date:\n\nThe hire date\u2019s day of the month determines the initial accrual:\n\nBefore the 15th \u2192 2 days accrued.\nBetween 15th and 25th \u2192 1 day accrued.\nAfter the 25th \u2192 No accrual.\nThe remaining months of the year contribute 2 days per month.\n\nFinal Calculation:\n\nThe total accrual is converted to hours (by multiplying with 8 hours per day).\nThe formula ensures that new hires earn leave fairly based on when they joined.\n\n***Instruction for the fastformula***: ```\nDBI Values Used: \n- HR_ASSIGNMENT_ID\n- PERSON_ID\n\nInput Values: \n- IV_ACCRUAL\n- IV_ACCRUALPERIODSTARTDATE (DATE)\n- IV_ACCRUALPERIODENDDATE (DATE)\n- IV_PLANENROLLMENTSTARTDATE (DATE)\n- IV_PLANENROLLMENTENDDATE (DATE)\n\nReturn Type: \nThe formula returns a numeric value representing the calculated accrual.\n\nLogic Summary: \n1. The formula initializes several variables, including `L_HRS` set to 8, and retrieves context values for `hr_assign_id` and `hr_person_id`.\n2. It sets `L_HIRE_DATE` to the value of `IV_PLANENROLLMENTSTARTDATE` and `L_ACCRUAL` to `IV_ACCRUAL`.\n3. It checks if `L_HIRE_DATE` is less than or equal to `IV_ACCRUALPERIODSTARTDATE`. If true, `L_ACCRUAL` remains as `IV_ACCRUAL`.\n4. If `L_HIRE_DATE` is greater than `IV_ACCRUALPERIODSTARTDATE`, it further checks the day of `L_HIRE_DATE`. If the day is less than 15, `L_ACCRUAL` is set to 2; otherwise, it is set to 1. If the day is greater than 25, `L_ACCRUAL` is set to 0.\n5. It calculates the month difference between `L_HIRE_DATE` and the end of the year, multiplies it by 2, and adds this value to `L_ACCRUAL`.\n6. Finally, it multiplies `L_ACCRUAL` by `L_HRS` to get the final accrual value, which is then returned.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates different types of leave requests based on predefined limits and conditions.\n\nKey Rules:\nAbsence Tracking:\n\nIt tracks previously approved leave durations for:\nEmergency Leave\nPaternity Leave\nSick Leave\nAcademic Leave\nUnpaid Leave\nValidation Checks:\n\nEmergency Leave: Cannot exceed 10 days in a year.\nPaternity Leave: Cannot exceed 10 days in a year.\nSick Leave: Cannot exceed 20 days in a year.\nAcademic Leave: Cannot exceed 15 days in a year.\nUnpaid Leave:\nIf Annual Leave balance is available: Unpaid Leave is not allowed.\nIf no Annual Leave balance: Cannot exceed 30 days in a year.\nProcess Flow:\n\nRetrieves the leave type being applied for.\nChecks existing approved leave for the same type.\nAdds the requested duration to the approved leave.\nIf the total exceeds the defined limit, it rejects the request.\nReturn Values:\n\nIf valid, the leave request proceeds.\nIf invalid, an error message is returned specifying why it was rejected.\nwrite a  ensures employees do not exceed leave limits and cannot take unpaid leave if they have remaining annual leave balance.\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ABSENCE_TYPE_ID\n- PERSON_ID\n- HR_ASSIGNMENT_ID\n- LEGISLATIVE_DATA_GROUP_ID\n\nInput Values:\n- IV_END_DATE (date)\n- IV_START_DATE (date)\n- IV_TOTALDURATION\n\nReturn Type:\nThe formula returns a set of values including a validation status (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), and a token message (TOKEN_NAME, TOKEN_VALUE, TOKEN).\n\nLogic Summary:\n1. The formula initializes several variables, including the current year, effective date, and year-end date based on the start date provided as input.\n2. It retrieves context values for absence type ID, person ID, assignment ID, and legislative data group ID.\n3. The formula iterates through an array of absence entry IDs, changing contexts for each entry to gather details like absence type name, approval status, and absence status.\n4. It calculates the total approved days for specific leave types (Emergency, Paternity, Sick, Academic, Unpaid) based on the conditions that the absence is submitted and either approved or awaiting approval.\n5. After calculating the approved days, the formula checks if adding the requested duration (IV_TOTALDURATION) exceeds the allowed limits for each leave type. If it does, it sets a validation flag (VALID) to 'N' and prepares an error message.\n6. For unpaid leave, it also checks if there is any remaining annual leave balance. If there is, it prevents applying for unpaid leave.\n7. Finally, the formula returns the validation status along with error codes, messages, and token values if the validation fails, or just the validation status if it passes.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the allowable leave balance for an employee by determining the minimum, maximum, and increment values for leave deduction.\n\nKey Steps:\nRetrieve Employee Context:\n\nGets effective date (L_DATE).\nFetches HR assignment ID, Person ID, and Legislative Data Group ID.\nCheck Leave Balance:\n\nDefines the leave plan name as 'Annual Leave'.\nFetches the remaining balance of the leave plan.\nDetermine Allowed Leave Limits:\n\nMinimum leave (MIN) is always 0.\nMaximum leave (MAX) is 50% of the available balance.\nIncrement value (INCREMENT) is set to 1 (ensuring leave is deducted in whole numbers).\nReturn Values:\n\nReturns the allowed range for leave deduction based on the available balance.\nwrite a  ensures that employees cannot take more than half of their remaining annual leave at once, maintaining balance control in the system.\n\n***Instruction for the fastformula***: ```\nDBI Values Used: \n- EFFECTIVE_DATE\n- HR_ASSIGNMENT_ID\n- PERSON_ID\n- LEGISLATIVE_DATA_GROUP_ID\n\nInput Values: \n- None explicitly defined in the formula. The values are derived from context.\n\nReturn Type: \nThe formula returns three values: MIN, MAX, and INCREMENT, which are all numeric types.\n\nLogic Summary: \n1. The formula initializes several variables to zero or default values, including `MIN`, `MAX`, `INCREMENT`, and `L_BALANCE`.\n2. It retrieves the context values for `EFFECTIVE_DATE`, `HR_ASSIGNMENT_ID`, `PERSON_ID`, and `LEGISLATIVE_DATA_GROUP_ID` and assigns them to local variables.\n3. The context is then changed to use these retrieved values.\n4. The formula calculates the balance for a plan named 'Annual Leave' and stores it in `L_BALANCE`.\n5. It sets `MIN` to 0, `MAX` to half of `L_BALANCE` (rounded down to the nearest whole number), and `INCREMENT` to 1.\n6. Finally, the formula returns the values of `MIN`, `MAX`, and `INCREMENT`.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write an accrual matrix formula for :\nIf the employee was hired before or on the accrual period start date, they receive the full accrual.\nIf the employee was hired after the accrual period start date, the leave is prorated based on the number of days they worked in the period.\nThe prorated accrual is calculated as:\n(Days remaining in the accrual period) \u00f7 (Total days in the period) \u00d7 Full Accrual\n\n***Instruction for the fastformula***: ```\nDBI Values Used: \n- HR_ASSIGNMENT_ID\n- PERSON_ID\n\nInput Values: \n- IV_ACCRUAL\n- IV_ACCRUALPERIODSTARTDATE (DATE)\n- IV_ACCRUALPERIODENDDATE (DATE)\n- IV_PLANENROLLMENTSTARTDATE (DATE)\n- IV_PLANENROLLMENTENDDATE (DATE)\n\nReturn Type: \nThe formula returns a numeric value representing the calculated accrual.\n\nLogic Summary: \nThe formula calculates an employee's accrual based on their enrollment start date and the accrual period. Here's a step-by-step breakdown:\n\n1. The formula initializes several variables, including the number of hours (`L_HRS`), assignment ID (`hr_assign_id`), person ID (`hr_person_id`), and hire date (`L_HIRE_DATE`), which is set to the plan enrollment start date.\n\n2. It checks if the hire date is on or before the accrual period start date. If so, the accrual is set to the input value `IV_ACCRUAL`.\n\n3. If the hire date is after the accrual period start date, the formula calculates a prorated accrual. It determines the day of the month for both the hire date and the accrual period end date.\n\n4. The proration factor (`L_PRORATE`) is calculated by finding the difference between the end date day and the hire date day, adding one, and then dividing by the end date day. This factor represents the portion of the accrual period the employee was active.\n\n5. The final accrual is calculated by multiplying the input accrual (`IV_ACCRUAL`) by the proration factor (`L_PRORATE`).\n\n6. The calculated accrual is returned as the result.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Checks Leave Limits Based on Absence Type:\nPaternity Leave: Maximum 10 days per year (80 hours limit).\nMaternity Leave: Maximum 126 days per year (1008 hours limit).\nUnpaid Leave: Maximum 30 days per year (240 hours limit).\nExam Leave: Maximum 2 days per year (16 hours limit).\nCompares Used Leave \u2013 It checks the employee's total absence days in the past year, adds the current leave request, and validates against the allowed limit.\nIf Exceeding Limits:\nSets an error message.\nPrevents the leave request.\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n\nInput Values:\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION\n\nReturn Type:\nThe formula returns a set of values including a validation status (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), and tokens for error messages (TOKEN_NAME, TOKEN_VALUE, TOKEN).\n\nLogic Summary:\n1. The formula initializes several context variables like absence type ID, person ID, assignment ID, and legislative data group ID.\n2. It checks the absence type name (L_ABS_TYPE) and performs specific calculations based on the type of leave:\n   - For 'Paternity Leave', it calculates the total absence days in the past year, converts it to hours, adds the current request duration, and checks if it exceeds 80 hours (10 days).\n   - For 'Maternity Leave', it performs a similar calculation but checks if the total exceeds 1008 hours (126 days).\n   - For 'Unpaid Leave', it calculates the total absence days from the start of the year, converts it to hours, and checks if it exceeds 240 hours (30 days).\n   - For 'Exam Leave', it performs the same calculation but checks if the total exceeds 16 hours (2 days).\n3. If any of the leave types exceed their respective limits, the formula sets a validation flag (VALID) to 'N', generates an appropriate error message, and returns the validation status along with error details.\n4. If the validation is successful (VALID = 'Y'), the formula simply returns the validation status.\n5. The formula ensures that the leave application adheres to the specified duration limits for each leave type, providing feedback if the limits are exceeded.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Checks If Employee Was Enrolled Before or During the Accrual Period:\nIf enrolled before the accrual period \u2192 Full accrual is granted.\nIf enrolled during the accrual period:\nCalculates remaining eligible days (days from enrollment start to period end).\nComputes total days in the accrual period.\nAdjusts the accrual proportionally based on the number of eligible days.\nReturns the Calculated Accrual\n\n***Instruction for the fastformula***: ```\nDBI Values Used: \n- HR_ASSIGNMENT_ID\n- PERSON_ID\n\nInput Values: \n- IV_ACCRUAL\n- IV_ACCRUALPERIODSTARTDATE (DATE)\n- IV_ACCRUALPERIODENDDATE (DATE)\n- IV_PLANENROLLMENTSTARTDATE (DATE)\n- IV_PLANENROLLMENTENDDATE (DATE)\n\nReturn Type: \nThe formula returns a numeric value representing the calculated accrual.\n\nLogic Summary: \nThe formula calculates an accrual value based on specific dates and an initial accrual amount. It first sets default values for various inputs and retrieves context-specific assignment and person IDs. The formula then compares the plan enrollment start date with the accrual period start date. If the enrollment start date is on or before the accrual period start date, the initial accrual value is used as is. If the enrollment start date is after the accrual period start date, the formula calculates a prorated accrual value. This proration is based on the number of days between the accrual period end date and the plan enrollment start date, relative to the total number of days in the accrual period. The final prorated accrual value is then returned.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Bereavement Leave\n\nMax 3 days allowed.\nPaternity Leave\n\nMax 10 days in the past one year.\nMaternity Leave\n\nAllowed only after probation and 80 days of service.\nDuration:\n182 days if the employee has less than 2 children.\n84 days if the employee has 2 or more children.\nMarriage Leave\n\nRequires marriage date input.\nCan only be taken within 5 days before or after the marriage date.\nUnpaid Leave\n\nAllowed only if Annual Leave balance is zero.\nMax 15 days.\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_REL_LENGTH_OF_SERVICE_BY_HIRE\n- IV_ATTRIBUTE_DATE1\n- PER_PER_CONT_REL_CONTACT_PERSON_ID\n- PER_PER_CONT_REL_CONTACT_TYPE\n\nInput Values:\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION\n- IV_ATTRIBUTE_DATE1 (date)\n\nReturn Type:\nThe formula returns a set of values including a validation status (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), token names and values, and a specific token message.\n\nLogic Summary:\n1. The formula initializes several default values and retrieves context-specific data such as absence type ID, person ID, assignment ID, and legislative data group ID.\n2. It checks the absence type and applies specific rules based on the type:\n   - For 'Bereavement Leave - AKF India', it calculates the total absence days from the start date of the year up to the start date of the leave. If the total exceeds 24 hours, it invalidates the leave request.\n   - For 'Paternity Leave - AKF India', it calculates the total absence days from the previous year up to the start date. If the total exceeds 10 days, it invalidates the leave request.\n   - For 'Maternity Leave - AKF India', it checks if the employee is still in probation or has less than 80 days of service. If so, it invalidates the leave request. It also checks the number of contact persons and sets a limit on the total absence days based on this count. If the limit is exceeded, it invalidates the leave request.\n   - For 'Marriage Leave - AKF India', it checks if the marriage date is provided and if the leave dates are within 5 days from the marriage date. If not, it invalidates the leave request.\n   - For 'Unpaid Leave - AKF India', it checks if there is any remaining annual leave balance. If there is, it invalidates the leave request. Otherwise, it calculates the total absence days from the start of the year. If the total exceeds 120 hours, it invalidates the leave request.\n3. If any of the conditions invalidate the leave request, it sets an appropriate error message and returns the validation status as 'N'. Otherwise, it returns the validation status as 'Y'.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the total duration of leave between a start and end date. It iterates through each day, checks its availability using GET_PAY_AVAILABILITY, and adjusts for half-day or full-day leave conditions. If a day is non-working, it is considered a full day. The final leave duration is accumulated and returned as DURATION.\n\n***Instruction for the fastformula***: ```\nDBI Values Used: None\n\nInput Values: \n- IV_START_DATE (date)\n- IV_END_DATE (date)\n\nReturn Type: DURATION (numeric)\n\nLogic Summary:\n1. The formula initializes two input dates, IV_START_DATE and IV_END_DATE, with default values set to a distant future date ('4712/12/31 00:00:00').\n2. It converts these input dates into a specific date format ('DDMMYYYY') and assigns them to local variables l_start_date and l_end_date.\n3. A variable l_total_duration_d is initialized to 0, which will accumulate the total duration.\n4. The formula then enters a loop that starts from the IV_START_DATE and iterates day by day until it reaches IV_END_DATE.\n5. For each day, it calculates the next day (l_ed) and checks if it exceeds the IV_END_DATE. If it does, l_ed is set to IV_END_DATE.\n6. It then calls the GET_PAY_AVAILABILITY function with specific parameters to determine the availability for the day. The result is stored in L_DAY.\n7. Depending on the value of L_DAY, it is adjusted: if L_DAY is between 0 and 0.5, it is set to 0.5; if it is greater than 0.5 or equal to 0, it is set to 1.\n8. The adjusted L_DAY value is added to l_total_duration_d.\n9. The loop continues by moving to the next day until the end date is reached.\n10. Finally, the accumulated total duration (l_total_duration_d) is returned as DURATION.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write an Absence Discretionary Disbursement Rule formula to calculate the maximum leave balance a person can take from their 'Earned Leave' plan, ensuring it doesn't go below 16.5. If the balance is less than 16.5, the maximum is set to 0. It then returns the minimum, maximum, and increment values for the leave balance\n\n***Instruction for the fastformula***: ```\nDBI Values Used: \n- EFFECTIVE_DATE\n- HR_ASSIGNMENT_ID\n- PERSON_ID\n- LEGISLATIVE_DATA_GROUP_ID\n\nInput Values: \n- None explicitly defined in the formula. The values are derived from context and constants.\n\nReturn Type: \nThe formula returns three values: MIN, MAX, and INCREMENT, which are all numeric types.\n\nLogic Summary: \n1. The formula initializes MIN and MAX to 0 and sets INCREMENT to 1.\n2. It retrieves the effective date from the context, defaulting to '4712/12/31 00:00:00' if not available, and stores it in L_DATE.\n3. It gets the HR assignment ID, person ID, and legislative data group ID from the context, defaulting to 0 if not available, and stores them in ln_hr_assignment_id, ln_person_id, and ln_leg_group_id respectively.\n4. The plan name 'Earned Leave' is set to lc_plan_name.\n5. The context is changed to use the retrieved HR assignment ID, person ID, effective date, and legislative data group ID.\n6. It calculates the balance for the 'Earned Leave' plan and stores it in L_BALANCE.\n7. MAX is set to L_BALANCE minus 16.5. If this value is less than 0, MAX is reset to 0.\n8. Finally, the formula returns MIN, MAX, and INCREMENT.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write a global absence entry validation formula to check the following :\nUnpaid Leave: It checks if there is any balance in 'Earned Leave' or 'General Leave'. If there is, unpaid leave cannot be applied.\nExtra Ordinary Leave: It ensures that the employee has completed at least one year of service before applying for write a  leave.\nOptional Leave: It verifies that the absence reason matches the correct date for the leave type.\nStudy Leave: It requires the employee to have completed at least three years of service before applying for write a  leave.\nMaternity Leave: It checks if the employee has completed 80 working days. It also sets different limits for the leave duration based on the reason (e.g., miscarriage, adoption) and ensures the total leave taken does not exceed the limit in a rolling year.\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_REL_LENGTH_OF_SERVICE_BY_HIRE\n- PER_PER_CONT_REL_CONTACT_PERSON_ID\n- PER_PER_CONT_REL_CONTACT_TYPE\n\nInput Values:\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION\n\nReturn Type:\nThe formula returns a set of values including a validation status (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), and a token message (TOKEN). It also returns arrays for token names (TOKEN_NAME) and token values (TOKEN_VALUE).\n\nLogic Summary:\n1. The formula initializes several context variables like absence type ID, person ID, assignment ID, and legislative data group ID based on the start date provided as input.\n2. It checks the service period of the employee based on the hire date and updates the service period context.\n3. For 'Unpaid Leave - AKRSP India', it checks if the employee has any earned or general leave balance. If there is a balance, it sets a validation message and marks the request as invalid.\n4. For 'Extra Ordinary Leave - AKRSP India', it checks if the employee has completed at least one year of service. If not, it sets a validation message and marks the request as invalid.\n5. For various types of 'Optional Leave - AKRSP India', it verifies if the selected date matches the lookup meaning for the absence reason. If not, it sets a validation message and marks the request as invalid.\n6. For 'Study Leave - AKRSP India', it checks if the employee has completed at least three years of service. If not, it sets a validation message and marks the request as invalid.\n7. For 'Maternity Leave - AKRSP India', it checks if the employee has completed 80 working days. If not, it sets a validation message and marks the request as invalid. It also calculates the limit based on the absence reason (Miscarriage, Adoption) and the number of children. It then checks the total absence days in the last year and compares it with the limit. If the limit is exceeded, it sets a validation message and marks the request as invalid.\n8. If any validation fails, it returns an error message, error code, and a token message. Otherwise, it returns a valid status.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write a global absence entry validation formula to check the following :\nValidation:\nFor annual, casual, and compensatory leave, it checks if the probation period is completed.\nFor maternity and paternity leave, it checks if the employee has completed one year of service.\nFor paternity leave, it ensures the total absence does not exceed 10 days in a rolling year.\nFor maternity leave, it ensures the total absence does not exceed 75 days in a rolling year.\nFor Hajj leave, it checks if the employee has completed one year of service and ensures the leave does not exceed 30 days for Hajj or 15 days for Umrah.\nIf any condition is not met, it sets the validation to 'N' and returns an error message.\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_REL_LENGTH_OF_SERVICE_BY_HIRE\n\nInput Values:\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION\n\nReturn Type:\nThe formula returns a set of values including a validation status (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), and a token message (TOKEN). It also returns arrays for token names (TOKEN_NAME) and token values (TOKEN_VALUE).\n\nLogic Summary:\n1. The formula initializes context and default values for various absence types and dates.\n2. It checks the absence type (L_ABS_TYPE) and validates it against specific rules:\n   - For 'Annual Leave', 'Casual Leave', and 'Compensatory Leave', it ensures the start date is after the probation end date. If not, it sets an error message and marks the application as invalid.\n   - For 'Maternity Leave' and 'Paternity Leave', it checks if the employee has completed at least one year of service. If not, it sets an error message and marks the application as invalid. For 'Paternity Leave', it also checks the total absence days in the past year and ensures it does not exceed 10 days. For 'Maternity Leave', it ensures the total absence does not exceed 75 days.\n   - For 'Hajj Leave', it checks for one year of service and then validates the duration based on the absence reason ('Hajj' or 'Umrah'), ensuring it does not exceed 30 or 15 days, respectively.\n3. If any validation fails, it sets an appropriate error message and marks the application as invalid.\n4. Finally, it returns the validation status along with any error messages and tokens if the application is invalid. If the application is valid, it simply returns the validation status.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write a discretionary disbursement ruleto calculate the leave plan balance for 'Annual Leave - AKF Pakistan'.\nMin, Max, Increment Calculation:\nMIN is set to 0.\nMAX is set to the lesser of half the leave balance (rounded down) or 11.\nINCREMENT is set to 1.\nReturn Values: Returns the calculated MIN, MAX, and INCREMENT values.\n\n***Instruction for the fastformula***: ```\nDBI Values Used: \n- EFFECTIVE_DATE\n- HR_ASSIGNMENT_ID\n- PERSON_ID\n- LEGISLATIVE_DATA_GROUP_ID\n\nInput Values: \n- PER_ASG_DATE_PROBATION_END (default value is '4712/12/31 00:00:00' with a date type)\n- lc_plan_name (set to 'Annual Leave - AKF Pakistan')\n\nReturn Type: \nThe formula returns three values: MIN, MAX, and INCREMENT, all of which are numeric.\n\nLogic Summary: \n1. The formula starts by setting default values for various context variables such as EFFECTIVE_DATE, HR_ASSIGNMENT_ID, PERSON_ID, and LEGISLATIVE_DATA_GROUP_ID. These values are retrieved from the context or set to default values if not available.\n2. It then initializes a variable L_BALANCE to 0.\n3. The context is changed to use the retrieved or default values for HR_ASSIGNMENT_ID, PERSON_ID, EFFECTIVE_DATE, and LEGISLATIVE_DATA_GROUP_ID.\n4. The formula calculates the balance of the 'Annual Leave - AKF Pakistan' plan and assigns it to L_BALANCE.\n5. The MIN value is set to 0, the MAX value is calculated as the lesser of half of L_BALANCE (rounded down) or 11, and the INCREMENT is set to 1.\n6. Finally, the formula returns the MIN, MAX, and INCREMENT values, which can be used to define a range and step for a selection or calculation process.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write a global absence accrual matrix formula that calculates the prorated accrual amount for a leave plan based on the enrollment start date. If the enrollment start date is later than the accrual period start date, it prorates the accrual amount by the number of months remaining in the year. The formula then returns the prorated accrual amount.\n\n***Instruction for the fastformula***: ```\nDBI Values Used: \n- EFFECTIVE_DATE\n- HR_ASSIGNMENT_ID\n- PERSON_ID\n- ACCRUAL_PLAN_ID\n\nInput Values: \n- IV_ACCRUAL\n- IV_ACCRUALPERIODSTARTDATE (DATE)\n- IV_ACCRUALPERIODENDDATE (DATE)\n- IV_PLANENROLLMENTSTARTDATE (DATE)\n- IV_PLANENROLLMENTENDDATE (DATE)\n\nReturn Type: \nThe formula returns a numeric value representing the prorated accrual amount.\n\nLogic Summary: \nThe formula calculates a prorated accrual amount based on the enrollment start date relative to the accrual period start date. Here's a step-by-step description of the logic:\n\n1. The formula initializes several default values for input variables and retrieves context-specific values like the effective date, assignment ID, person ID, and accrual plan ID.\n\n2. It checks if the plan enrollment start date is later than the accrual period start date. If so, it proceeds with the proration calculation.\n\n3. The month (MM) and day (DD) of the plan enrollment start date are extracted.\n\n4. The total number of months remaining in the year from the enrollment start date is calculated. If the day of the month is 15 or greater, an additional month is added to the total.\n\n5. A proration factor is calculated by dividing the total months by 12.\n\n6. The initial accrual amount is then multiplied by the proration factor to get the prorated accrual amount.\n\n7. Finally, the prorated accrual amount is returned as the result of the formula.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write a global absence entry validation fast formula that validates different types of leave requests for AKRSP Pakistan based on specific conditions. Here's a simple explanation of what it does:\n\nPaternity and Maternity Leave: It checks if the employee has completed at least 4 months of service. For maternity leave, it also ensures that the total leave taken does not exceed 84 days in a rolling year.\nUnpaid Leave: It checks if the total unpaid leave taken in the year exceeds 90 days. It also ensures that there is no balance in 'Annual Leave' or 'Casual Leave' before allowing unpaid leave.\nCompassionate Leave: It ensures that there is no balance in 'Annual Leave' or 'Casual Leave' before allowing compassionate leave. It also checks if the total compassionate leave taken in the year exceeds 10 days.\nIf any of these conditions are not met, the formula returns an error message\n\n***Instruction for the fastformula***: ```\nDBI Values Used:\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_REL_LENGTH_OF_SERVICE_BY_HIRE\n\nInput Values:\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_ABSENCE_REASON (text)\n- IV_TOTALDURATION\n\nReturn Type:\nThe formula returns a set of values including VALID (text), ERROR_CODE (text), ERROR_MESSAGE (text), TOKEN_NAME (array of text), TOKEN_VALUE (array of text), and TOKEN (text).\n\nLogic Summary:\n1. The formula initializes several context variables like absence type ID, person ID, assignment ID, and legislative data group ID. It also sets default values for various parameters like absence type name and dates.\n\n2. It checks the absence type. If the absence type is 'Paternity Leave - AKRSP Pakistan' or 'Maternity Leave - AKRSP Pakistan', it calculates the length of service. If the service period is less than 120 days, it invalidates the request with a message indicating insufficient service.\n\n3. For 'Maternity Leave - AKRSP Pakistan', it calculates the total absence days in the past year. If the total exceeds 84 days, it invalidates the request with a message about the limit.\n\n4. For 'Unpaid Leave - AKRSP Pakistan', it checks the total absence days in the current year. If it exceeds 90 days, it invalidates the request. It also checks if there is any remaining balance of Annual Leave or Casual Leave. If there is, it issues a warning.\n\n5. For 'Compassionate Leave - AKRSP Pakistan', it first checks if there is any remaining balance of Annual Leave or Casual Leave. If there is, it invalidates the request. It then checks the total absence days in the current year. If it exceeds 10 days, it invalidates the request.\n\n6. If any validation fails, it sets the VALID flag to 'N', sets an appropriate error message, and returns the validation status along with error details. If all validations pass, it simply returns the VALID flag as 'Y'.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write a Global Absence type Duration formula to calculates the total duration of an absence in days. Here's a simple explanation of what it does:\n\nIt initializes the start and end dates.\nIt loops through each day from the start date to the end date.\nFor each day, it calculates the availability using the GET_PAY_AVAILABILITY function.\nIt adjusts the day value to 0.5 if it's between 0 and 0.5, and to 1 if it's more than 0.5 or equal to 0.\nIt adds the adjusted day value to the total duration.\nIt returns the total duration in days.\n\n***Instruction for the fastformula***: ```\nDBI Values Used: None\n\nInput Values: \n- IV_START_DATE (date)\n- IV_END_DATE (date)\n\nReturn Type: DURATION (numeric)\n\nLogic Summary:\n1. The formula initializes two input dates, IV_START_DATE and IV_END_DATE, with default values set to a distant future date ('4712/12/31 00:00:00').\n2. It converts these input dates into a specific date format (DDMMYYYY) and assigns them to local variables l_start_date and l_end_date.\n3. A variable l_total_duration_d is initialized to 0, which will hold the cumulative duration.\n4. The formula then enters a loop that starts from the IV_START_DATE and iterates day by day until it reaches IV_END_DATE.\n5. For each day, it calculates the next day (l_ed) and checks if it exceeds the IV_END_DATE. If it does, l_ed is set to IV_END_DATE.\n6. It then calls a function GET_PAY_AVAILABILITY to determine the availability for the current day and the next day, storing the result in L_DAY.\n7. Depending on the value of L_DAY, it adjusts it to either 0.5 or 1 based on specific conditions.\n8. The adjusted L_DAY value is added to l_total_duration_d.\n9. The loop continues by incrementing the current date by one day.\n10. Once the loop completes, the total duration calculated in l_total_duration_d is returned as the final DURATION.\n```",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write a global absence accrual matrix formula that does the below calculation:\nInitial Accrual Calculation:\nIf the enrollment start date is before or on the accrual period start date, the formula uses the provided accrual amount.\nIf the enrollment start date is after the accrual period start date, it calculates the number of days between the enrollment start date and the accrual period end date. It also calculates the total number of days in the accrual period. The formula then prorates the accrual amount by dividing the standard accrual amount (24) by the total number of days in the accrual period and multiplying it by the number of days from the enrollment start date to the accrual period end date. write a  gives the prorated accrual amount.\nRounding:\n\nThe formula separates the integer part and the fractional part of the prorated accrual amount. If the fractional part is greater than 0.5, it rounds up to 1; otherwise, it rounds to 0.5. The final accrual amount is the sum of the integer part and the adjusted fractional part, multiplied by the standard hours (7).\nMaternity Leave Check:\n\nThe formula checks if the employee was on maternity leave in the previous year. It sets a check date to December 31st of the previous year. It then loops through the absence entries to see if any of them are for maternity leave. If the employee was on maternity leave, it retrieves the balance of 'Annual Leave' as of the check date and adds it to the accrual amount.\nFTE Adjustment:\n\nThe formula adjusts the accrual amount based on the employee's full-time equivalent (FTE) value. It loops through the assignment details, retrieves the FTE value for each period, and calculates the FTE accrual for that period. It sums up the FTE accruals for all periods to get the total FTE accrual. If the total FTE accrual is greater than or equal to 1, it sets it to 1. If the assignment status is 'INACTIVE', it sets the total FTE accrual to 0. The final accrual amount is then multiplied by the total FTE accrual.\nFinal Rounding:\n\nThe formula rounds the final accrual amount to the nearest 0.5 or 1, similar to the initial rounding step.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_TYP_NAME\n- PER_ASG_AVAILABILITY_WORKDAY_PATTERN\n- PER_ASG_WORK_SCH_WORKDAY_PATTERN\n- PER_ASG_EFFECTIVE_END_DATE\n- PER_ASG_EFFECTIVE_START_DATE\n- PER_ASG_FTE_VALUE\n- PER_ASG_ASSIGNMENT_STATUS_TYPE\n- ASG_HR_ASG_ID\n- PER_PER_ENTERPRISE_TERMINATION_DATE\n\n**Input Values:**\n- IV_ACCRUAL\n- IV_ACCRUALPERIODSTARTDATE\n- IV_ACCRUALPERIODENDDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n\n**Return Type:**\nThe formula returns a numeric value representing the calculated accrual amount, rounded to two decimal places.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by logging input values for auditing purposes. It checks if the plan enrollment start date is before or on the accrual period start date to determine the initial accrual amount.\n2. **Accrual Calculation**: If the plan enrollment start date is after the accrual period start date, it calculates the accrual based on the days the employee has been enrolled within the accrual period, considering the total days in the accrual period.\n3. **Maternity Leave Check**: It checks if the employee has taken maternity leave by examining absence records around a specific date (December 31st of the previous year) and adjusts the accrual balance accordingly.\n4. **FTE Adjustment**: The formula then calculates the full-time equivalent (FTE) accrual by evaluating the employee's assignment details over time, considering changes in FTE value and assignment status.\n5. **Final Accrual Calculation**: The total accrual is adjusted by the calculated FTE value and then rounded to the nearest half or whole number based on the fraction part of the accrual.\n6. **Return Accrual**: Finally, the formula returns the calculated accrual amount, ensuring it reflects the employee's work pattern and any leave adjustments.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write a formula for absence carryover that calculates  the carryover amount for a leave plan. It starts with a default carryover of 35 days. The formula then checks if the employee was on maternity leave in the previous year by looking at absence entries around the end of the previous year. If the employee was on maternity leave, the carryover is set to 0. Finally, it returns the calculated carryover amount.\n\n***Instruction for the fastformula***: **Summary**\n\n* **DBI Values Used**: ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR, ANC_ABS_ENTRS_ABSENCE_TYPE_ID, ANC_ABS_TYP_NAME\n* **Input Values**: IV_PLANENROLLMENTSTARTDATE, IV_ACCRUALPERIODSTARTDATE\n* **Return Type**: The formula returns a numeric value representing the carryover amount.\n* **Logic Summary**: The formula determines the carryover amount based on absence entries. It starts by setting default values for absence type and carryover. It then iterates through each absence entry, checking the absence type. If the absence type is 'Maternity Leave', it sets a flag to indicate this. The formula then adjusts the carryover amount based on this flag. If the flag is set to 'Y', the carryover amount is set to 0; otherwise, it retains its initial value. The formula uses date calculations to determine the relevant time period for checking absence entries. The final carryover amount is then returned as the result.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the accrual amount for a leave plan based on several factors:\n\nInitial Accrual Calculation:\n\nThe formula starts by determining the standard working hours per day. If the normal working hours are 35, it sets the working day to 7 hours; otherwise, it uses 7.5 hours.\nIf the enrollment start date is before or on the accrual period start date, it multiplies the provided accrual amount by the working day hours.\nIf the enrollment start date is after the accrual period start date, it calculates the number of days between the enrollment start date and the accrual period end date. It then prorates the accrual amount by multiplying the provided accrual amount by the number of days and the working day hours, divided by 365.\nECD Employees Check:\n\nThe formula checks if the employee belongs to specific employment categories (AKF_PT_ECD or AKF_PT_ECD_CIOS). If so, it sets a flag indicating the employee is in these categories.\nIt then calculates the total duration of absences (excluding certain types like maternity leave, paternity leave, strikes, school support, legal commitment, and work accidents) in the previous year.\nBased on the total duration of absences, it adjusts the accrual amount by adding additional working days: 3 days if there were no absences, 2 days if the absences were up to 1 day, and 1 day if the absences were between 1 and 2 days.\nSick Leave Check:\n\nThe formula checks for sick leave absences in the previous two years. If any sick leave absence lasted 30 days or more and falls within the check period, it sets the accrual amount to 0.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: \n  - `HR_ASSIGNMENT_ID`\n  - `PERSON_ID`\n  - `PER_ASG_NORMAL_HOURS`\n  - `PER_ASG_EMPLOYMENT_CATEGORY`\n  - `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n  - `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n  - `ANC_ABS_TYP_NAME`\n  - `ANC_ABS_ENTRS_DURATION`\n  - `ANC_ABS_ENTRS_START_DATE`\n  - `ANC_ABS_ENTRS_END_DATE`\n\n* **Input Values**: \n  - `IV_ACCRUAL`\n  - `IV_ACCRUALPERIODSTARTDATE`\n  - `IV_ACCRUALPERIODENDDATE`\n  - `IV_PLANENROLLMENTSTARTDATE`\n  - `IV_PLANENROLLMENTENDDATE`\n\n* **Return Type**: \n  The formula returns a numeric value representing the calculated accrual amount.\n\n* **Logic Summary**: \n  The formula calculates an accrual amount based on input values and certain conditions. Here's a step-by-step breakdown:\n  1. It retrieves the assignment ID, person ID, and other relevant information from the database.\n  2. It calculates the working days per week based on the normal hours worked.\n  3. If the hire date is before the accrual period start date, it calculates the accrual amount based on the accrual value and working days.\n  4. If the hire date is after the accrual period start date, it calculates the accrual amount based on the accrual value, days between the accrual period end date and the plan enrollment start date, and working days.\n  5. For certain employment categories, it checks for absences in the previous year and adjusts the accrual amount accordingly.\n  6. It also checks for specific types of absences (like sick leave) in the current and next year, and adjusts the accrual amount if certain conditions are met.\n  7. Finally, it returns the calculated accrual amount.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write a formula for :\nAccrual Based on Service Length:\n\nIf the employee has more than 10 years of service, the accrual amount is set to 240.\nIf the employee has between 2 and 10 years of service, the accrual amount is set to 168.\nProrated Accrual:\n\nIf the enrollment start date is before or on the accrual period start date, the formula uses the calculated accrual amount.\nIf the enrollment start date is after the accrual period start date, it calculates the number of days between the enrollment start date and the accrual period end date. It then prorates the accrual amount based on these days relative to the total number of days in the accrual period.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: \n  - `HR_ASSIGNMENT_ID`\n  - `PERSON_ID`\n  - `PER_REL_LENGTH_OF_SERVICE_BY_HIRE`\n\n* **Input Values**:\n  - `IV_ACCRUAL`\n  - `IV_ACCRUALPERIODSTARTDATE`\n  - `IV_ACCRUALPERIODENDDATE`\n  - `IV_PLANENROLLMENTSTARTDATE`\n  - `IV_PLANENROLLMENTENDDATE`\n\n* **Return Type**: The formula returns a numeric value representing the calculated accrual.\n\n* **Logic Summary**: \n  The formula calculates an accrual value based on the length of service of an employee. \n  1. It first determines the hire date and the length of service period. \n  2. If the length of service is more than 10 units, it sets the accrual to a fixed high value (e.g., 240). \n  3. If the length of service is between 2 and 10 units (inclusive), it sets the accrual to a medium value (e.g., 168). \n  4. If the hire date is before the accrual period start date, it assigns the calculated accrual value directly. \n  5. If the hire date is after the accrual period start date, it calculates the accrual proportionally based on the portion of the accrual period the employee was employed. \n  6. Finally, it returns the calculated accrual value.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the accrual amount for a leave plan based on the length of service. Here's a simple explanation of what it does:\n\nIf the employee has less than 2 years of service, the accrual amount is set to 10.\nIf the employee has between 2 and 3 years of service, the accrual amount is set to 10.64.\nIf the employee has between 3 and 4 years of service, the accrual amount is set to 11.36.\nIf the employee has between 4 and 5 years of service, the accrual amount is set to 12.\nIf the employee has 5 or more years of service, the accrual amount is set to 13.36.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: hr_assign_id, hr_person_id, PER_REL_LENGTH_OF_SERVICE_BY_HIRE, HR_ASSIGNMENT_ID, PERSON_ID\n* **Input Values**: IV_ACCRUAL, IV_ACCRUALPERIODSTARTDATE, IV_ACCRUALPERIODENDDATE, IV_PLANENROLLMENTSTARTDATE, IV_PLANENROLLMENTENDDATE\n* **Return Type**: The formula returns a numeric value representing the accrual amount.\n* **Logic Summary**: \n    1. The formula starts by retrieving the assignment ID and person ID from the context.\n    2. It then sets the hire date to the plan enrollment start date and initializes the accrual amount.\n    3. The length of service is calculated based on the hire date, and then a series of conditional checks are performed based on this length of service.\n    4. Depending on the length of service, the accrual amount is updated to a specific value (e.g., 10, 10.64, 11.36, 12, or 13.36).\n    5. The final accrual amount is then returned as the result of the formula.\n    6. The formula essentially calculates the accrual amount based on the length of service, with different accrual rates applying to different service periods.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the accrual amount for a leave plan based on the length of service. Here's a simple explanation of what it does:\n\nIf the employee has 4 years of service or less, the accrual amount is set to 1.25 times the standard hours per day (7 hours).\nIf the employee has more than 4 years but 10 years or less of service, the accrual amount is set to 1.67 times the standard hours per day.\nIf the employee has more than 10 years of service, the accrual amount is set to 2.083 times the standard hours per day.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: \n  - PER_REL_LENGTH_OF_SERVICE_BY_HIRE\n  - HR_ASSIGNMENT_ID\n  - PERSON_ID\n\n* **Input Values**: \n  - IV_ACCRUAL\n  - IV_ACCRUALPERIODSTARTDATE\n  - IV_ACCRUALPERIODENDDATE\n  - IV_PLANENROLLMENTSTARTDATE\n  - IV_PLANENROLLMENTENDDATE\n\n* **Return Type**: \n  The formula returns a numeric value representing the calculated accrual.\n\n* **Logic Summary**: \n  This formula calculates an employee's accrual based on their length of service. \n  1. It first retrieves the employee's assignment and person IDs from the context.\n  2. It then determines the length of service (L_PERIOD) by using the plan enrollment start date.\n  3. It sets a standard number of hours (L_HRS) to 7.\n  4. Based on the length of service, it applies different accrual rates:\n    - For 0-4 years of service, the accrual rate is 1.25 times the standard hours.\n    - For 5-10 years of service, the accrual rate is 1.67 times the standard hours.\n    - For more than 10 years of service, the accrual rate is 2.083 times the standard hours.\n  5. Finally, it returns the calculated accrual value.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the total duration of an absence based on the type of leave and the start and end dates. Here's a simple explanation of what it does:\n\nGeneral Calculation:\n\nIt calculates the total number of days between the start and end dates.\nChild Care Leave:\n\nIf the leave type is \"Child Care Leave,\" it multiplies the total number of days by 8 to convert it to hours.\nAdditional Paid Leave for High Altitude Regions:\n\nIf the leave type is \"Additional paid leave for high altitude regions,\" it calculates the total duration in hours for each day within the date range. It adjusts the duration based on the availability of hours (8 hours for a full day, 4 hours for a half day). If the day is a weekend (Saturday or Sunday), it counts as a full day.\nAnnual Leave:\n\nIf the leave type is \"Annual Leave,\" it calculates the total duration by distinguishing between working days, weekends, and holidays. It sums up the working days and, if the employee category is \"AKF_LOCAL,\" it also includes weekends in the total duration.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: \n  - `ABSENCE_TYPE_ID`\n  - `PER_WORKER_ASSIGNMENT_EMPLOYEE_CATEGORY`\n  - `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n  - `ANC_ABS_TYP_NAME`\n* **Input Values**: \n  - `IV_START_DATE`\n  - `IV_END_DATE`\n* **Return Type**: \n  The formula returns a numeric value representing the duration.\n* **Logic Summary**: \n  - The formula calculates the duration based on the provided start and end dates.\n  - It first determines the total number of days between the start and end dates.\n  - Then, it checks the absence type to apply specific rules for different types of leaves, such as 'Child Care Leave', 'Additional paid leave for high altitude regions', and 'Annual Leave'.\n  - For 'Child Care Leave', it calculates the total duration in days and multiplies it by 8.\n  - For 'Additional paid leave for high altitude regions', it iterates through each day in the date range, checks the pay availability, and increments the total duration accordingly.\n  - For 'Annual Leave', it calculates the total duration by iterating through each day, checking the pay availability, and counting working days, weekends, and holidays separately. The total duration is then determined based on the employee category.\n  - Finally, the formula returns the calculated duration.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the total duration of an absence in hours based on the start and end dates. Here's a simple explanation:\n\nIt sets the standard working day hours to 7.5. If the normal working hours are 35, it sets the working day to 7 hours.\nIt loops through each day from the start date to the end date.\nFor each day, it checks the availability of hours. If no hours are available, it uses the standard working day hours.\nIt adds the hours for each day to get the total duration.\nIt returns the total duration in hours.\n\n***Instruction for the fastformula***: Here is a structured summary of the FastFormula:\n\n**DBI Values Used:** \n- `PER_ASG_NORMAL_HOURS` with a default value of 0\n- Defaults for `IV_START_DATE` and `IV_END_DATE` set to '4712/12/31 00:00:00'\n\n**Input Values:** \n- `IV_START_DATE` (date)\n- `IV_END_DATE` (date)\n\n**Return Type:** \nThe formula returns a numeric value representing the total duration.\n\n**Logic Summary:** \n1. The formula initializes by standardizing the input start and end dates to a specific format.\n2. It sets a working day (WD) duration based on the value of `PER_ASG_NORMAL_HOURS`, adjusting it if the normal hours are 35.\n3. The formula then enters a loop that iterates through each day from the start date to the end date.\n4. For each day, it calculates the pay availability using the `GET_PAY_AVAILABILITY` function. If no availability is found (result is 0), it defaults to the working day duration.\n5. It accumulates the duration for each day in a running total.\n6. The loop continues until it has processed all days up to the end date.\n7. Finally, the formula returns the total duration calculated.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the minimum, maximum, and increment values for the 'Annual Leave' balance. It checks the balance of the 'Annual Leave' plan and sets the minimum value to 0, the maximum value to the rounded balance, and the increment value to 1. It then returns these values.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: Defaults for PER_ASG_DATE_PROBATION_END, EFFECTIVE_DATE, HR_ASSIGNMENT_ID, PERSON_ID, LEGISLATIVE_DATA_GROUP_ID\n* **Input Values**: None (all values are derived from context or database)\n* **Return Type**: The formula returns three values: MIN, MAX, and INCREMENT, which are used to control the range of values for a date field, specifically the probation end date.\n* **Logic Summary**: \n  1. The formula starts by setting default values for certain database items if they are not already set.\n  2. It retrieves the current effective date, HR assignment ID, person ID, and legislative data group ID from the context.\n  3. It sets the plan name to 'Annual Leave' and changes the context to use the retrieved HR assignment ID, person ID, effective date, and legislative data group ID.\n  4. Within this new context, it retrieves the balance of the 'Annual Leave' plan.\n  5. The formula then calculates the minimum, maximum, and increment values based on the retrieved balance, with the minimum set to 0, the maximum set to the rounded balance, and the increment set to 1.\n  6. Finally, the formula returns these minimum, maximum, and increment values to control the input range for the probation end date.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates various types of absence requests, each with specific rules for approval:\n\nStatutory Leave (Paid/Unpaid): Employees are prompted to contact HR to apply for these leaves.\nPersonal Leave: Restricted to 70 hours. Employees are instructed to contact HR if they exceed write a  limit.\nPregnancy Leave: Limited to 15 weeks in a rolling year. It includes checking if the employee has completed the required service period.\nTime Off for Study: Limited to 3 days per year. It applies a cap of 21 days.\nParental Leave: Limited to 63 weeks in a rolling year. It ensures eligibility based on the employee's prior absence.\nVacation Leave: The employee's eligibility is determined by their service length and current leave balance. If the requested duration exceeds eligibility, the request is rejected.\nFor all cases, the validation checks the requested leave duration against the respective caps and balances. If any condition is violated, an error message is returned.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used**: \n- ANC_ABS_TYP_NAME \n- PER_ASG_DATE_PROBATION_END \n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE \n- ANC_PER_ABS_AGRMNT_ENT_AGREEMENT_ALLOC_UNITS \n- PER_REL_LENGTH_OF_SERVICE_BY_HIRE \n- ABSENCE_TYPE_ID \n- PERSON_ID \n- HR_ASSIGNMENT_ID \n- LEGISLATIVE_DATA_GROUP_ID \n- EFFECTIVE_DATE\n\n**Input Values**: \n- iv_start_date \n- iv_end_date \n- IV_ABSENCE_REASON \n- IV_TOTALDURATION\n\n**Return Type**: \nThe formula returns a validation result, which includes an error message, error code, and a token when validation fails. The primary return variable is of type string or text, indicating whether the validation is successful ('Y' for valid, 'N' for not valid).\n\n**Logic Summary**: \nThis FastFormula is designed to validate absence requests based on various conditions, including the type of leave, the duration of the leave, and the employee's eligibility. Here's a step-by-step breakdown:\n1. **Initialize Variables**: The formula starts by setting default values for certain DBIs (Database Items) and defining input parameters such as start date, end date, absence reason, and total duration.\n2. **Determine Absence Type**: It retrieves the absence type based on the context and then applies different validation rules depending on the type of leave (e.g., Statutory Leave, Personal Leave, Pregnancy Leave, Time Off for Study, Parental Leave, Vacation Leave).\n3. **Check Eligibility**: For each leave type, it calculates the total absence taken and checks against specific eligibility criteria. For instance, it checks the total duration of leave taken in a year for certain types of leave or verifies if the employee has sufficient leave balance for Vacation Leave.\n4. **Validation Logic**: If any of the eligibility criteria are not met, the formula sets a validation flag to 'N' (not valid), generates an appropriate error message or token, and returns this information. If all criteria are met, the validation flag remains 'Y' (valid).\n5. **Return Validation Result**: The final step is to return the validation result, which includes the validation flag, error code, error message, and token (if any), indicating whether the absence request is valid or not.\n\nThis formula is essentially a rules engine that automates the validation of employee absence requests based on predefined policies and eligibility criteria, ensuring compliance with organizational and possibly legal requirements regarding leaves and absences.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the leave accrual based on the hire date and accrual period:\n\nInputs: The inputs are the accrual value, the accrual period's start and end dates, and the enrollment period's start and end dates.\nLogic:\nIf the hire date is on or before the accrual period's start date, the accrual value remains unchanged.\nIf the hire date is later, the formula calculates the accrual based on the number of months from the hire date to the end of the year (i.e., 12 - month of hire + 1).\nThe accrual is then adjusted proportionally by dividing by 12 (to reflect the monthly accrual).\nReturn: The resulting accrual is returned.\n\n***Instruction for the fastformula***: Here is a structured summary of the FastFormula:\n\n* **DBI Values Used**: \n  - HR_ASSIGNMENT_ID\n  - PERSON_ID\n  - PER_ASG_REL_ORIGINAL_DATE_OF_HIRE is not used in the formula provided.\n\n* **Input Values**: \n  - IV_ACCRUAL\n  - IV_ACCRUALPERIODSTARTDATE\n  - IV_ACCRUALPERIODENDDATE\n  - IV_PLANENROLLMENTSTARTDATE\n  - IV_PLANENROLLMENTENDDATE\n\n* **Return Type**: \n  The formula returns a numeric value representing the calculated accrual.\n\n* **Logic Summary**: \n  The formula calculates an employee's accrual based on their hire date and accrual period. \n  1. It first checks if the hire date is before or on the accrual period start date. \n  2. If true, it sets the accrual to the input accrual value. \n  3. If the hire date is after the accrual period start date, it calculates the accrual based on the number of months left in the year from the hire date. \n  4. It then returns this calculated accrual value. The formula uses the employee's assignment and person IDs from the context, but these are not directly used in the calculation. The initial hire date for the calculation is taken from the plan enrollment start date.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula ensures employees cannot apply for Annual Leave, Maternity Leave, Paternity Leave, or Study Leave before completing their probation period. Requests before write a  period are rejected.\nSick Leave is limited to 126 days in a year. If the total leave duration exceeds write a  limit, the request is rejected.\nBereavement Leave and Compassionate Leave are limited to 5 days per year. If the total duration exceeds 5 days, the request is rejected.\nParental Leave is capped at 63 weeks in a rolling year. If the leave exceeds write a  limit, the request is rejected.\nEmployees must meet the required service period to apply for Maternity Leave. If they haven\u2019t, the request is rejected.\nVacation Leave eligibility is based on the employee\u2019s service length and their current leave balance. If the requested leave exceeds the available balance, the request is rejected.\nThe formula ensures that the requested leave duration does not exceed the allowed limits for each leave type.\n\n***Instruction for the fastformula***: ### Summary of the FastFormula\n\n#### DBI Values Used:\n- `ANC_ABS_TYP_NAME`\n- `PER_ASG_DATE_PROBATION_END`\n- `PER_ASG_REL_ORIGINAL_DATE_OF_HIRE`\n- `PERSON_ID`\n- `ABSENCE_TYPE_ID`\n\n#### Input Values:\n- `iv_start_date`\n- `iv_end_date`\n- `IV_ABSENCE_REASON`\n- `IV_TOTALDURATION`\n\n#### Return Type:\nThe formula returns a validation result, including a validity flag, an error code, an error message, and potentially a unique token with a message, indicating whether the absence request is valid or not, along with reasons for invalid requests.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by setting default values for certain database items (DBIs) such as absence type name, probation end date, and original date of hire. It also accepts several input values including start and end dates of the absence, absence reason, and total duration of the absence.\n\n2. **Context Setting**: It retrieves the person ID and absence type ID from the context and sets the current date as the effective date. The absence type ID is then used to change the context, enabling type-specific validations.\n\n3. **Probation Period Validation**: For absences of type 'Annual Leave', 'Maternity', 'Paternity', and 'Study Leave', it checks if the start date of the absence is before the completion of the probation period. If so, it marks the request as invalid and generates an appropriate error message.\n\n4. **Leave Limit Validation**: For 'Study Leave', 'Compassionate Leave', 'Sick Leave', and 'Bereavement Leave', it performs a more detailed validation:\n   - Calculates the anniversary date of the hire (original date of hire in the same month and day but in the current or previous year depending on the start date of the absence).\n   - Calculates the total absence days of the specific type from the anniversary date to the start date of the current absence request, including the duration of the current request.\n   - Checks if the total absence exceeds the allowed limits for the specific leave type (e.g., 126 days for 'Sick Leave', 5 days for 'Bereavement Leave' or 'Compassionate Leave', and 10 days for 'Study Leave'). If exceeded, it marks the request as invalid and generates an error message.\n\n5. **Validation Result**: If any validation fails, the formula returns an invalid status along with an error code, message, and a token with a specific error message. If all validations pass, it returns a valid status.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the accrual amount based on the hire date and the accrual period. If the hire date is on or before the start of the accrual period, the full accrual amount is used. If the hire date is after the start of the accrual period, the accrual amount is prorated based on the number of days from the hire date to the end of the accrual period. The formula returns the calculated accrual amount.\n\n***Instruction for the fastformula***: Here is a structured summary of the FastFormula:\n\n**DBI Values Used:** \nHR_ASSIGNMENT_ID, PERSON_ID\n\n**Input Values:** \nIV_ACCRUAL, IV_ACCRUALPERIODENDDATE, IV_ACCRUALPERIODSTARTDATE, IV_PLANENROLLMENTSTARTDATE, IV_PLANENROLLMENTENDDATE\n\n**Return Type:** \nThe formula returns a numeric value representing the calculated accrual.\n\n**Logic Summary:** \nThe formula calculates the accrual based on the hire date and accrual period. Here's a step-by-step explanation:\n1. It first checks if the hire date is before or on the accrual period start date. If true, it assigns the input accrual value to the calculated accrual.\n2. If the hire date is after the accrual period start date, it calculates the prorated accrual based on the number of days in the accrual period that the employee is eligible for.\n3. To do this, it extracts the day of the hire date and the accrual period end date, calculates the proration factor, and then multiplies the input accrual by this factor to get the prorated accrual.\n4. The calculated accrual is then rounded to one decimal place and returned as the result.\n5. The formula uses context values for HR assignment ID and person ID, but they are not directly used in the accrual calculation. \n6. Default values are provided for the input parameters in case they are not supplied.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the total duration of an annual leave period. It considers the start and end dates of the leave and checks each day within write a  period. If a day is a working day, it adds to the working day count. If a day is a weekend, it adds to the weekend count. If a day is a holiday, it adds to the holiday count. The total duration is then determined based on the employee's category. For local employees, it includes working days, weekends, and holidays. For non-local employees, it only includes working days. The formula returns the total duration of the leave period.\n\n***Instruction for the fastformula***: **DBI Values Used**: \n- `ABSENCE_TYPE_ID`\n- `ANC_ABS_TYP_NAME`\n- `PER_WORKER_ASSIGNMENT_EMPLOYEE_CATEGORY`\n- `ASSIGN` \n- Functions: `GET_CONTEXT`, `CHANGE_CONTEXTS`, `GET_PAY_AVAILABILITY`, `GET_DATE_DAY_OF_WEEK`, `add_days`, `To_date`, `to_char`\n\n**Input Values**: \n- `IV_START_DATE`\n- `IV_END_DATE`\n\n**Return Type**: \nThe formula returns a numeric value representing the total duration in days (`DURATION`).\n\n**Logic Summary**: \n1. The formula starts by converting the input start and end dates to a specific format to ensure consistency.\n2. It retrieves the absence type ID from the context and sets it for the current session.\n3. If the absence type is 'Annual Leave', it calculates the total duration by looping through each day from the start date to the end date.\n4. For each day, it checks the pay availability to determine if it's a working day, half day, or non-working day, and increments counters accordingly.\n5. It handles weekends and public holidays differently based on the employee category ('AKF_LOCAL' or not).\n6. Finally, it calculates the total duration in days (`l_total_duration_d`) based on working days, weekends, and holidays, depending on the employee category, and returns this value as `DURATION`.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula simply converts the string '31-12-2024' into a date format and returns it as the enrollment end date. The returned value is the date December 31, 2024.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: None\n* **Input Values**: None\n* **Return Type**: Date\n* **Logic Summary**: This formula sets a specific end date for enrollment. It first defines this date as December 31, 2024, and then returns this date as the result. The process involves converting a text representation of the date into a date format that the system can understand, using a specific format of day-month-year. The final result is a fixed date value that represents the end of the enrollment period.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the accrual amount based on the hire date and the accrual period. If the hire date is on or before the start of the accrual period, the full accrual amount is used, with an additional 8 units added if the month is January. If the hire date is after the start of the accrual period, the accrual amount is prorated based on the number of days from the hire date to the end of the accrual period, with an additional 8 units added if the month is January. The formula returns the calculated accrual amount.\n\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: \n  - HR_ASSIGNMENT_ID\n  - PERSON_ID\n\n* **Input Values**: \n  - IV_ACCRUAL\n  - IV_ACCRUALPERIODSTARTDATE\n  - IV_ACCRUALPERIODENDDATE\n  - IV_PLANENROLLMENTSTARTDATE\n  - IV_PLANENROLLMENTENDDATE\n\n* **Return Type**: \n  The formula returns a numeric value representing the calculated accrual amount.\n\n* **Logic Summary**: \n  The formula calculates an accrual amount based on the provided input values. It first determines the hire date of an employee and the start and end dates of an accrual period. If the hire date is before the accrual period starts, it calculates the accrual amount directly. If the hire date is within the accrual period, it calculates the accrual amount proportionally based on the number of days the employee has been enrolled in the plan during the accrual period. Additionally, if the accrual period ends in January, it adds a fixed amount to the accrual. The formula then returns the calculated accrual amount. The logic involves conditional statements and date-based calculations to determine the correct accrual amount for different enrollment scenarios.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates the total annual leave hours taken by an employee. It calculates the total approved absence hours for the year, including any carryover hours. If the total approved absence hours exceed the calculated valid absence hours (which is based on the employee's full-time equivalent value and carryover), it returns an error message indicating that the leave cannot be applied for more than the valid hours in a year. If the total approved absence hours are within the valid limit, it returns a validation success message.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n- ANC_ABS_TYP_NAME\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_ASG_FTE_VALUE\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_ATTRIBUTE_NUMBER1\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n- PERSON_ID\n- HR_ASSIGNMENT_ID\n- LEGISLATIVE_DATA_GROUP_ID\n- ABSENCE_TYPE_ID\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_ABSENCE_REASON\n- IV_TOTALDURATION\n- IV_ATTRIBUTE_NUMBER1\n- IV_START_TIME\n- IV_END_TIME\n\n**Return Type:**\nThe formula returns a validation result, including a validity flag (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), and potentially a token with a detailed message (TOKEN_NAME and TOKEN_VALUE). The primary return value is the validity flag, indicating whether the input absence request is valid based on the calculated total absence hours against the available leave hours.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by setting default values for various database items (DBIs) and input values.\n2. **Context Setting**: It sets up contexts for absence type, person, assignment, and legislative data group to access relevant data.\n3. **Date Calculations**: Calculates effective dates and period start and end dates based on the input start and end dates.\n4. **Carryover Calculation**: Retrieves the annual leave carryover for the person from a value set.\n5. **Absence Hours Approval Check**: Loops through absence entries to calculate the total approved absence hours for 'Annual Leave' with a 'SUBMITTED' status and 'APPROVED' approval status.\n6. **Total Absence Validation**: Checks if the total absence hours (approved + requested) exceed the valid absence hours (calculated based on FTE and carryover). If exceeded, sets the validity flag to 'N' and constructs an error message.\n7. **Return Validation Result**: Returns the validity flag along with an error code, error message, and potentially a detailed token message if the validity flag is 'N'. If valid, returns a positive validation result.\n\nThis summary captures the essence of the FastFormula's logic, from initialization and context setting to the core validation logic and the return of the validation result.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the total duration of an absence period in days. It considers the start and end dates of the absence and iterates through each day within write a  period. For each day, it checks the availability and assigns a duration based on the number of hours available. If the available hours are between 0 and 4, it assigns 4 hours; if more than 4, it assigns 8 hours. The total duration is then accumulated by adding the assigned hours for each day. The formula returns the total duration in days.\n\n***Instruction for the fastformula***: Here is the summary of the provided FastFormula:\n\n* **DBI Values Used**: \n  - HR_ASSIGNMENT_ID \n  - AKF_ABSENCE_WORK_SCHEDULE_NAME\n\n* **Input Values**: \n  - IV_START_DATE (date)\n  - IV_END_DATE (date)\n\n* **Return Type**: The formula returns a numeric value representing the total duration.\n\n* **Logic Summary**: \n  This FastFormula calculates the total duration between a given start and end date. It first standardizes the input dates. Then, it iterates through each day in the specified range, checking the work schedule and pay availability for each day. Based on the pay availability, it assigns a specific duration value to each day (either 4 or 8). It accumulates these duration values for all days within the range and returns the total duration at the end. The formula utilizes various functions to handle date operations and logging for debugging purposes. It also retrieves specific values from the database using the GET_CONTEXT and GET_VALUE_SET functions to determine the assignment ID and work schedule. The result is a calculation of the total duration based on the pay availability and work schedule for the specified assignment over the given date range.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the total duration of specific types of leave (Hajj Leave and Maternity Leave) in hours. It considers the start and end dates of the leave and iterates through each day within write a  period. For each day, it checks the availability and assigns a duration based on whether the day is a weekend or not. If the day is a weekend (Saturday or Sunday), it assigns 8 hours; otherwise, it assigns 0 hours. The total duration is then accumulated by adding the assigned hours for each day. The formula returns the total duration in hours.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used**: \n- `ABSENCE_TYPE_ID`\n- `ANC_ABS_TYP_NAME`\n- `PER_WORKER_ASSIGNMENT_EMPLOYEE_CATEGORY`\n\n**Input Values**: \n- `IV_START_DATE` (date)\n- `IV_END_DATE` (date)\n\n**Return Type**: \nThe formula returns a numeric value representing the total duration in hours.\n\n**Logic Summary**: \nThis formula calculates the total duration in hours for a specific absence type between a given start and end date. Here's a step-by-step breakdown:\n1. It first validates and standardizes the input start and end dates.\n2. It retrieves the absence type ID and sets it as a context.\n3. For specific absence types ('Hajj Leave - AKF Pakistan V1' and 'Maternity Leave - AKF Pakistan V1'), it iterates through each day between the start and end dates.\n4. For each day, it checks the pay availability and determines if the day is a weekend (Saturday or Sunday). If it's a weekend, it assigns a specific value (8); otherwise, it assigns 0 if pay availability is not 'Y'.\n5. It accumulates the total duration in days based on the calculated day values.\n6. Finally, it converts the total duration in days to hours (by multiplying by 8) and returns this value.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates various types of leave for employees in AKF Pakistan. Here's the business logic:\n\nAnnual, Casual, and Compensatory Leave: The formula checks if the leave start date is before the end of the probation period. If it is, the leave application is invalid.\n\nMaternity and Paternity Leave: The formula checks if the employee has completed one year of service. If not, the leave application is invalid. Additionally, for paternity leave, it ensures that the total leave taken in a rolling year does not exceed 80 hours. For maternity leave, it ensures that the total leave taken in a rolling year does not exceed 600 hours.\n\nHajj Leave: The formula checks if the employee has completed one year of service. If not, the leave application is invalid. It also ensures that the total duration for Hajj leave does not exceed 240 hours and for Umrah leave does not exceed 120 hours.\n\nIf any of these conditions are not met, the formula returns an error message indicating the specific reason for the invalid leave application\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used**: \n- ANC_ABS_TYP_NAME \n- PER_ASG_DATE_PROBATION_END \n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE \n- PER_REL_LENGTH_OF_SERVICE_BY_HIRE \n\n**Input Values**: \n- iv_start_date \n- iv_end_date \n- IV_ABSENCE_REASON \n- IV_TOTALDURATION \n\n**Return Type**: \nThe formula returns a validation result, which includes a validity flag (VALID), an error code (ERROR_CODE), an error message (ERROR_MESSAGE), and tokens (TOKEN_NAME and TOKEN_VALUE) when the validation fails.\n\n**Logic Summary**: \n1. The formula first checks the type of absence being applied for.\n2. For certain absence types like 'Annual Leave', 'Casual Leave', and 'Compensatory Leave', it verifies if the employee has completed their probation period.\n3. For 'Maternity Leave' and 'Paternity Leave', it checks if the employee has completed one year of service.\n4. Specifically for 'Paternity Leave' and 'Maternity Leave', it calculates the total absence in the last rolling year and checks against a maximum allowed limit (80 hours for 'Paternity Leave' and 600 hours for 'Maternity Leave').\n5. For 'Hajj Leave', it checks the service length and the duration of the leave application against specific limits based on whether the leave is for 'Hajj' or 'Umrah'.\n6. If any of these conditions are not met, the formula sets the validation flag to 'N', indicating failure, and provides an appropriate error message and token.\n7. If all checks pass, the formula returns a validation success without any error messages or tokens.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the total duration of nursing leave in hours. It considers the start and end dates of the leave and iterates through each day within write a  period. For each day, it checks the availability and assigns a duration based on the number of hours available. If the available hours are 2 or more, it assigns 2 hours. If the start time is 14:00 and the end time is 17:30, it assigns 0 hours. The total duration is then accumulated by adding the assigned hours for each day. The formula returns the total duration in hours.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: None explicitly referenced as DBI items, but several default values are defined within the formula for input parameters such as `IV_START_DATE`, `IV_END_DATE`, `IV_ABS_START_DATE`, `IV_ABS_END_DATE`, `IV_START_DURATION`, and `IV_END_DURATION`.\n* **Input Values**: \n  - `IV_START_DATE` (date)\n  - `IV_END_DATE` (date)\n  - `IV_START_DURATION`\n  - `IV_END_DURATION`\n  - `IV_ABS_START_DATE` (date)\n  - `IV_ABS_END_DATE` (date)\n  - `IV_START_TIME` (Text)\n  - `IV_END_TIME` (Text)\n* **Return Type**: The formula returns a numeric value representing the total duration.\n* **Logic Summary**: \n  1. The formula initializes by setting default values for input parameters if they are not provided.\n  2. It then checks if the start date is less than or equal to the end date. If true, it proceeds with calculations.\n  3. For each day within the date range, it calculates the payability for that day by calling the `GET_PAY_AVAILABILITY` function.\n  4. It adjusts the duration for the day based on certain conditions (e.g., if the duration is greater than or equal to 2, it sets the duration to 2, and if the start and end times match specific values, it sets the duration to 0).\n  5. The adjusted durations for each day are summed up to get the total duration.\n  6. If the start date is not less than or equal to the end date, it handles this case by directly assigning a value to the duration, though the specifics of this case are less detailed in the formula provided.\n  7. Logging is performed at various steps to track the calculation process and outcomes.\n  8. Finally, the formula returns the calculated total duration.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates a sickness absence entry. Here's a simple explanation of what it does:\n\nIt checks if the employee has multiple assignments on the given date.\nIf the employee has only one assignment, it sets the validation to \"N\" (not valid) and returns an error message indicating that the unpaid leave is invalid for a single assignment.\nIf the employee has multiple assignments, it sets the validation to \"Y\" (valid).\n\n***Instruction for the fastformula***: **Summary**\n\n* **DBI Values Used**: \n  + IV_START_DATE\n  + IV_END_DATE\n  + ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  + ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  + ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  + ANC_ABS_TYP_NAME\n  + ANC_ABS_ENTRS_END_DATE\n  + PER_ASG_ORG_LEGAL_EMPLOYER_NAME\n  + ANC_ABS_ENTRS_DURATION\n  + IV_TITLE_ARR\n  + PER_ASG_ASSIGNMENT_NUMBER\n  + PER_ASG_PRIMARY_FLAG\n  + l_asg_primary\n  + l_asg_primary_non_primary\n  + PER_SYS_DATE_TIME\n  + PERSON_ID\n  + Effective_Date\n\n* **Input Values**: \n  + IV_END_DATE\n  + IV_START_DATE\n  + IV_TITLE_ARR\n  + PER_ASG_ASSIGNMENT_NUMBER\n  + PER_ASG_PRIMARY_FLAG\n  + PER_SYS_DATE_TIME\n\n* **Return Type**: The formula returns a validation result, which includes a VALID flag (either 'Y' or 'N') and an optional ERROR_MESSAGE.\n\n* **Logic Summary**: \n  1. The formula starts by initializing various default values and logging debug messages.\n  2. It then retrieves the input date and converts it into separate year, month, and day components.\n  3. Using these date components and the person ID, it checks the number of assignments for the employee on the given date by calling the 'BC_PAY_GET_ASSIGNMENT_COUNT' value set.\n  4. If the assignment count is not null, it further checks for the existence of a specific assignment type on that date using the 'BC_PAY_GET_ASSIGNMENT_EXIST' value set.\n  5. Based on the results of these checks, the formula determines whether the chosen unpaid leave is valid for the given date.\n  6. If the leave is invalid (typically due to the employee having a single assignment on that date), it sets the VALID flag to 'N' and returns an error message.\n  7. If the leave is valid, the formula sets the VALID flag to 'Y' and returns without an error message.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write an absence plan entitlement formua for:\nService Calculation:\n\nIt calculates the employee's length of service in years based on the seniority date and the matching date.\nPrimary Assignment Check:\n\nIf the employee has at least one year of service and the primary assignment flag is 'Y', it checks an additional attribute (ANC_ABS_ENTRS_ATTRIBUTE3).\nIf write a  attribute contains 'Y', it sets the pay factors and entitlements for four bands as follows:\nBand 1: 100% pay, 0 days entitlement\nBand 2: 90% pay, 42 days entitlement\nBand 3: 50% pay, 84 days entitlement\nBand 4: 0% pay, 147 days entitlement\nIf the attribute does not contain 'Y', it sets the pay factors and entitlements for four bands as follows:\nBand 1: 100% pay, 0 days entitlement\nBand 2: 90% pay, 42 days entitlement\nBand 3: 50% pay, 0 days entitlement\nBand 4: 0% pay, 147 days entitlement\nDefault Values:\n\nIf the employee does not meet the primary assignment check, it sets the pay factors and entitlements for four bands as follows:\nBand 1: 100% pay, 0 days entitlement\nBand 2: 90% pay, 0 days entitlement\nBand 3: 50% pay, 0 days entitlement\nBand 4: 0% pay, 0 days entitlement\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: \n  - ACP_HIRE_DATE\n  - IV_START_DATE\n  - IV_MATCHING_DATE\n  - IV_INFORMATION_DATE1\n  - IV_ATTRIBUTE_1\n  - PER_ASG_CONTRACT_ATTRIBUTE1\n  - PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE\n  - PER_ASG_REL_DATE_START\n  - IV_PLANNEDSTARTDATE\n  - IV_PLANNEDENDDATE\n  - ANC_ABS_ENTRS_ATTRIBUTE3\n  - PER_ASG_PRIMARY_ASSIGNMENT_FLAG\n\n* **Input Values**: \n  - IV_START_DATE\n  - IV_MATCHING_DATE\n  - IV_ATTRIBUTE_1\n  - IV_INFORMATION_DATE1\n  - IV_PLANNEDSTARTDATE\n  - IV_PLANNEDENDDATE\n\n* **Return Type**: The formula returns multiple values related to pay factors and entitlements, specifically eight return variables: BAND1PAYFACTOR, BAND1ENTITLEMENT, BAND2PAYFACTOR, BAND2ENTITLEMENT, BAND3PAYFACTOR, BAND3ENTITLEMENT, BAND4ENTITLEMENT, and BAND4PAYFACTOR, which are numeric.\n\n* **Logic Summary**: \n  1. The formula starts by determining the seniority date based on whether PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE has been defaulted or not. If defaulted, it uses PER_ASG_REL_DATE_START; otherwise, it uses PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE.\n  2. It calculates the service days by finding the difference between a date 77 days before the matching date (adjusted to the nearest Monday) and the seniority date.\n  3. The formula then calculates the year of service by dividing the service days by 365.\n  4. Based on the year of service and the value of PER_ASG_PRIMARY_ASSIGNMENT_FLAG, it adjusts the pay factors and entitlements for different bands (BAND1 to BAND4).\n  5. If the year of service is greater than or equal to 1 and PER_ASG_PRIMARY_ASSIGNMENT_FLAG is 'Y', it further checks the value of ANC_ABS_ENTRS_ATTRIBUTE3 to determine the specific entitlements for each band.\n  6. Finally, the formula returns the calculated pay factors and entitlements for the four bands.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the total duration of an absence in days, excluding weekends. Here's a simple explanation of what it does:\n\nIt calculates the total number of days between the start and end dates.\nIt loops through each day from the start date to the end date.\nFor each day, it checks if the day is a Saturday or Sunday.\nIf the day is a weekend, it increments the count of leave days.\nIt subtracts the count of leave days from the total number of days to get the total duration of the absence, excluding weekends.\nIt rounds the total duration to the nearest whole number and returns it.\n\n***Instruction for the fastformula***: **Summary of FastFormula**\n\n* **DBI Values Used**: \n  - IV_START_DATE \n  - IV_END_DATE \n  - IV_START_TIME \n  - IV_END_TIME \n  - PER_ASG_LOC_REGION2 \n  - ASG_HR_ASG_ID \n\n* **Input Values**: \n  - IV_START_DATE (date) \n  - IV_END_DATE (date) \n  - IV_START_TIME (text) \n  - IV_END_TIME (text) \n\n* **Return Type**: The formula returns a numeric value representing the total duration.\n\n* **Logic Summary**: \n  1. The formula starts by initializing variables with default and input values for start and end dates and times.\n  2. It then calculates the total number of days between the start and end dates.\n  3. The formula iterates through each day in the date range to determine if it is a Saturday or Sunday.\n  4. For each Saturday or Sunday found, it increments a counter for leave days.\n  5. After checking all days, it calculates the total duration by subtracting the count of leave days from the total number of days.\n  6. Finally, the formula returns the total duration, rounded to the nearest whole number.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates a sickness absence entry. Here's a simple explanation of what it does:\n\nIt checks if the employee has multiple assignments on the given date.\nIf the employee has multiple assignments, it sets the validation to \"N\" (not valid) and returns an error message indicating that the unpaid leave is invalid for multiple assignments.\nIf the employee has only one assignment, it sets the validation to \"Y\" (valid).\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used:** \n- PER_ASG_ASSIGNMENT_NUMBER\n- PER_ASG_PRIMARY_FLAG\n- PER_SYS_DATE_TIME\n- PERSON_ID\n- Effective_Date\n- BC_PAY_GET_ASSIGNMENT_COUNT\n- BC_PAY_GET_ASSIGNMENT_EXIST\n\n**Input Values:** \n- IV_START_DATE\n- IV_END_DATE\n- IV_TITLE_ARR\n- PER_ASG_ASSIGNMENT_NUMBER\n- PER_ASG_PRIMARY_FLAG\n- PER_SYS_DATE_TIME\n\n**Return Type:** \nThe formula returns a validation result, which is a combination of a valid flag (VALID) and an error message. The valid flag is of type character ('Y' or 'N') indicating whether the input is valid or not. The error message is a string that provides details when the input is invalid.\n\n**Logic Summary:** \n1. The formula starts by initializing various default values for input parameters and logging the current assignment number, primary flag, and system date/time for debugging purposes.\n2. It retrieves the effective date from the context and converts it to a string for easier manipulation.\n3. The formula then extracts the year, month, and day from the start date to be used in subsequent steps.\n4. It queries the assignment count for the person on the specific date using a value set (BC_PAY_GET_ASSIGNMENT_COUNT) and determines if there's an existing assignment (BC_PAY_GET_ASSIGNMENT_EXIST).\n5. If the assignment count is null, the formula returns 'N' for valid along with an error message indicating that the chosen date might be invalid due to multiple assignments.\n6. If the assignment count is not null, it sets the valid flag to 'Y' and returns it, indicating a successful validation.\n7. Throughout the process, the formula logs various values for debugging purposes to track the execution flow and values being processed.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the number of service days for an employee and determines their pay factors and entitlements based on their length of service and whether they have a primary assignment flag set to 'Y'. It also checks if an attribute contains 'Y' to adjust the entitlements. Specifically, it sets the pay factors and entitlements for three bands as follows:\n\nBand 1: Pay factor is 90, entitlement is 42 days.\nBand 2: Pay factor is 50, entitlement is 84 days.\nBand 3: Pay factor is 0, entitlement is 147 days.\nIf the attribute does not contain 'Y', the entitlements for Band 2 are set to 0 days. If the employee has less than one year of service or the primary assignment flag is not 'Y', the entitlements for all bands are set to 0 days.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: PER_ASG_CONTRACT_ATTRIBUTE_DATE1, PER_ASG_CONTRACT_ATTRIBUTE1, PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE, PER_ASG_REL_DATE_START, PER_ASG_PRIMARY_FLAG, ANC_ABS_ENTRS_ATTRIBUTE2, ACP_HIRE_DATE\n* **Input Values**: IV_START_DATE, IV_EXPECTEDCHILDBIRTHDATE, IV_PLANNEDSTARTDATE, IV_PLANNEDENDDATE\n* **Return Type**: The formula returns multiple values: BAND1PAYFACTOR, BAND1ENTITLEMENT, BAND2PAYFACTOR, BAND2ENTITLEMENT, BAND3ENTITLEMENT, BAND3PAYFACTOR, which are numerical values representing pay factors and entitlements.\n* **Logic Summary**: \n    1. The formula first checks if a specific date (PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE) has been defaulted. If it has, it sets a seniority date to another date (PER_ASG_REL_DATE_START); otherwise, it sets the seniority date to the PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE.\n    2. It calculates a specific date (l_Date) by subtracting 77 days from the expected child birth date (IV_EXPECTEDCHILDBIRTHDATE) and then adjusts this date to the previous Monday if it's not already a Monday.\n    3. It calculates the number of service days between the adjusted date (l_Date) and the seniority date.\n    4. The formula then calculates the year of service by dividing the service days by 365.\n    5. If the year of service is 1 or more and the primary flag (PER_ASG_PRIMARY_FLAG) is 'Y', it checks another attribute (ANC_ABS_ENTRS_ATTRIBUTE2) and sets pay factors and entitlements (BAND1PAYFACTOR, BAND1ENTITLEMENT, BAND2PAYFACTOR, BAND2ENTITLEMENT, BAND3PAYFACTOR, BAND3ENTITLEMENT) based on whether this attribute contains 'Y' or not.\n    6. If the year of service is less than 1 or the primary flag is not 'Y', it sets the pay factors and entitlements to default values.\n    7. Finally, the formula returns the calculated pay factors and entitlements.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the number of service days for an employee and determines their pay factors and entitlements based on their length of service. It adjusts the expected childbirth date to the nearest Monday and calculates the total service days. If the employee has more than 26 weeks of service, they receive a pay factor of 100 and an entitlement of 7 days for Band 1, while Bands 2 and 3 have no entitlements.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: \n  - ACP_HIRE_DATE\n  - PER_ASG_CONTRACT_ATTRIBUTE_DATE1\n  - PER_ASG_CONTRACT_ATTRIBUTE1\n  - PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE\n  - PER_ASG_REL_DATE_START\n\n* **Input Values**: \n  - IV_START_DATE\n  - IV_EXPECTEDCHILDBIRTHDATE\n  - IV_PLANNEDSTARTDATE\n  - IV_PLANNEDENDDATE\n\n* **Return Type**: The formula returns multiple values including pay factors and entitlements for different bands, specifically BAND1PAYFACTOR, BAND1ENTITLEMENT, BAND2PAYFACTOR, and BAND2ENTITLEMENT, which are numeric values.\n\n* **Logic Summary**: \n  1. The formula starts by checking if a specific statutory absence service start date has been defaulted. If it has, it uses an assignment relationship start date; otherwise, it uses the provided statutory absence service start date.\n  2. It then adjusts an input start date to find the first Monday before an expected childbirth date by subtracting 105 days and then backtracking to the nearest Monday.\n  3. The formula calculates the number of service days between this adjusted date and the determined seniority date.\n  4. It converts these service days into years and weeks of service.\n  5. Based on the weeks of service, it determines the pay factor and entitlement for two different bands. If the weeks of service exceed 26, it sets specific values for the pay factors and entitlements of these bands.\n  6. Finally, it returns the calculated pay factors and entitlements for the two bands.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula evaluates the duration of an absence plan based on the worker's type and status. It calculates the duration of the absence by considering the start and end dates, start and end times, and specific conditions such as whether the worker's assignment status is active and if the primary flag is set. The formula adjusts the duration based on whether the absence starts on a weekday and logs relevant information for debugging purposes. Ultimately, it returns the calculated duration of the absence.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used:** \n- IV_START_DATE \n- IV_END_DATE \n- IV_START_TIME \n- IV_END_TIME \n- IV_ABS_START_DURATION \n- IV_ABS_END_DURATION \n- IV_ABS_START_DATE \n- IV_ABS_END_DATE \n- PER_ASG_LOC_REGION2 \n- ASG_HR_ASG_ID \n- PER_ASG_ASSIGNMENT_STATUS_TYPE_MEANING \n- PER_ASG_ASSIGNMENT_STATUS_TYPE\n\n**Input Values:** \n- IV_START_DATE \n- IV_END_DATE \n- IV_START_TIME \n- IV_END_TIME \n- IV_ABS_START_DURATION \n- IV_ABS_END_DURATION \n- IV_ABS_START_DATE \n- IV_ABS_END_DATE \n\n**Return Type:** \nThe formula returns a numeric value representing the duration, rounded to two decimal places.\n\n**Logic Summary:** \n1. The formula starts by initializing various default values for dates, times, and other parameters. \n2. It checks the assignment status type and if it's 'ACTIVE', it proceeds to execute a series of steps to determine the primary flag of an assignment.\n3. It calculates the start and end dates of a period based on the provided start and end dates and times.\n4. The formula then checks the day of the week for the start date and calculates the entry duration based on whether it's a weekday or not. If it's the same as the absence start date, it uses the absence start duration; otherwise, it sets the entry duration to 1 for weekdays.\n5. If the primary flag is 'N', it resets the entry duration to 0.\n6. Finally, it calculates the total duration by rounding the entry duration to two decimal places and returns this value. If the assignment status type is not 'ACTIVE', the formula returns 0.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the pay factors and entitlements for maternity leave based on the employee's length of service and a specific attribute. Here's the business logic:\n\nSeniority Date Calculation: The formula determines the seniority date based on either the statutory absence service start date or the assignment start date.\n\nService Days Calculation: It calculates the number of service days from the seniority date to 77 days before the expected childbirth date. It then converts the service days into years of service.\n\nEntitlement and Pay Factor Determination:\n\nIf the employee has more than one year of service, the formula checks a specific attribute (ANC_ABS_ENTRS_ATTRIBUTE2).\nIf the attribute contains 'Y', the entitlements are set to 56 days at 100% pay, 126 days at 50% pay, and 182 days at 0% pay.\nIf the attribute does not contain 'Y', the entitlements are set to 56 days at 100% pay, 0 days at 50% pay, and 182 days at 0% pay.\nIf the employee has less than one year of service, the entitlements are set to 0 days at 100% pay, 0 days at 50% pay, and 0 days at 0% pay.\nThe formula returns the pay factors and entitlements for the three bands based on these calculations\n\n***Instruction for the fastformula***: ### Summary of the FastFormula\n\n#### DBI Values Used:\n- ACP_HIRE_DATE\n- PER_ASG_CONTRACT_ATTRIBUTE_DATE1\n- PER_ASG_CONTRACT_ATTRIBUTE1\n- PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE\n- PER_ASG_REL_DATE_START\n- ANC_ABS_ENTRS_ATTRIBUTE2\n\n#### Input Values:\n- IV_START_DATE\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_PLANNEDSTARTDATE\n- IV_PLANNEDENDDATE\n\n#### Return Type:\nThe formula returns multiple values including pay factors and entitlements for three bands, which are numerical values indicating the pay and entitlement details based on the input parameters.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by setting default values for various database items (DBIs) and input values. It also initializes variables like `BAND1PAYFACTOR`, `BAND1ENTITLEMENT`, `BAND2PAYFACTOR`, `BAND2ENTITLEMENT`, `BAND3PAYFACTOR`, and `BAND3ENTITLEMENT` to specific values.\n\n2. **Date Calculations**: It calculates the seniority date based on whether `PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE` was defaulted or not. If defaulted, it uses `PER_ASG_REL_DATE_START`; otherwise, it uses `PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE`.\n\n3. **Date Adjustment**: It adjusts the `IV_EXPECTEDCHILDBIRTHDATE` by subtracting 77 days and then finds the nearest Monday by iterating backwards. This date is used to calculate the service days by comparing it with the seniority date.\n\n4. **Service Years Calculation**: The formula calculates the years of service by dividing the service days by 365.\n\n5. **Pay Factor and Entitlement Determination**: Based on the years of service and the value of `ANC_ABS_ENTRS_ATTRIBUTE2`, it determines the pay factors and entitlements for three bands. If the years of service are greater than or equal to 1 and `ANC_ABS_ENTRS_ATTRIBUTE2` contains 'Y', it sets specific values for pay factors and entitlements. Otherwise, it adjusts these values accordingly.\n\n6. **Return Statements**: Finally, the formula returns the calculated pay factors and entitlements for the three bands.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the pro-rated duration for absence entries based on the full-time equivalent (FTE) value. It considers the start and end dates and times of the absence period and calculates the total duration in days. The duration is then rounded to two decimal places and returned. The formula also logs relevant information during the calculation process.\n\n***Instruction for the fastformula***: Here is a structured summary of the given Oracle FastFormula:\n\n* **DBI Values Used**: GET_PAY_AVAILABILITY, GET_CONTEXT, ess_log_write\n* **Input Values**: IV_START_DATE, IV_END_DATE, IV_START_TIME, IV_END_TIME\n* **Return Type**: The formula returns a numeric value representing the duration, rounded to two decimal places.\n* **Logic Summary**: \n  1. The formula starts by setting default values for various input parameters such as start date, end date, start time, end time, and total duration.\n  2. It then initializes several variables to store duration and assignment details.\n  3. The start and end dates are combined with the start and end times to create a date range.\n  4. The formula uses the GET_PAY_AVAILABILITY function to calculate the availability for a given date range.\n  5. It retrieves the person ID using the GET_CONTEXT function and logs some values for debugging purposes.\n  6. The formula then calculates the duration and rounds it to two decimal places.\n  7. Finally, the formula returns the calculated duration. \n\nNote: This summary describes the overall logic and steps involved in the formula, avoiding specific code details.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the pay factors and entitlements for employees based on their length of service. Here's the business logic:\n\nSeniority Date Calculation: The formula determines the seniority date based on either the statutory absence service start date or the assignment start date.\n\nService Days Calculation: It calculates the number of service days from the seniority date to the start date of the absence. It then converts the service days into years and months of service.\n\nEntitlement and Pay Factor Determination:\n\nFor employees with less than 1 year of service, the entitlements are set to 22 days at 100% pay and 43 days at 50% pay.\nFor employees with 1 to 2 years of service, the entitlements are set to 43 days at 100% pay and 43 days at 50% pay.\nFor employees with 2 to 3 years of service, the entitlements are set to 87 days at 100% pay and 87 days at 50% pay.\nFor employees with 3 to 5 years of service, the entitlements are set to 108 days at 100% pay and 108 days at 50% pay.\nFor employees with more than 5 years of service, the entitlements are set to 130 days at 100% pay and 130 days at 50% pay.\nThe formula returns the pay factors and entitlements for the two bands based on these calculations.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: \n  - ACP_HIRE_DATE\n  - PER_PER_BASIC_ATTRIBUTE_DATE1\n  - PER_ASG_CONTRACT_TYPE\n  - PAYROLL_NAME\n  - PER_ASG_CONTRACT_ATTRIBUTE1\n  - PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE\n  - PER_ASG_REL_DATE_START\n  - PAY_EARN_PERIOD_END\n  - PAY_EARN_PERIOD_START\n\n* **Input Values**: \n  - IV_START_DATE\n  - Service_days\n  - l_start_dt\n\n* **Return Type**: The formula returns multiple values: BAND1PAYFACTOR, BAND1ENTITLEMENT, BAND2PAYFACTOR, and BAND2ENTITLEMENT, which are all numeric.\n\n* **Logic Summary**: \n  1. The formula starts by checking if the PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE has been defaulted. If it has, then it sets the seniority date to PER_ASG_REL_DATE_START; otherwise, it sets the seniority date to PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE.\n  2. It then calculates the number of service days between the seniority date and the input start date (IV_START_DATE), adding 1 to the result.\n  3. Next, it calculates the year of service by dividing the service days by 365 and the months of service by finding the difference in months between the input start date and the seniority date.\n  4. The formula then uses the year of service to determine the pay factor and entitlement for two bands (BAND1 and BAND2) based on a set of if-else conditions that check the year of service against various thresholds (less than 1 year, 1-2 years, 2-3 years, 3-5 years, and 5 or more years).\n  5. Finally, the formula returns the pay factors and entitlements for both bands based on the conditions met.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the pay factors and entitlements for employees based on their length of service. Here's the business logic:\n\nSeniority Date Calculation: The formula determines the seniority date based on either the statutory absence service start date or the assignment start date.\n\nService Days Calculation: It calculates the number of service days from the seniority date to the start date of the absence. It then converts the service days into years and months of service.\n\nEntitlement and Pay Factor Determination:\n\nFor employees with less than 1 year of service, the entitlements are set to 22 days at 100% pay and 43 days at 50% pay.\nFor employees with 1 to 2 years of service, the entitlements are set to 43 days at 100% pay and 43 days at 50% pay.\nFor employees with 2 to 3 years of service, the entitlements are set to 87 days at 100% pay and 87 days at 50% pay.\nFor employees with 3 to 5 years of service, the entitlements are set to 108 days at 100% pay and 108 days at 50% pay.\nFor employees with more than 5 years of service, the entitlements are set to 130 days at 100% pay and 130 days at 50% pay.\nThe formula returns the pay factors and entitlements for the two bands based on these calculations.\n\n***Instruction for the fastformula***: **Summary of FastFormula**\n\n* **DBI Values Used**: \n  - ACP_HIRE_DATE\n  - PER_PER_BASIC_ATTRIBUTE_DATE1\n  - IV_START_DATE\n  - PER_ASG_CONTRACT_TYPE\n  - PAYROLL_NAME\n  - PER_ASG_CONTRACT_ATTRIBUTE1\n  - PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE\n  - PER_ASG_REL_DATE_START\n  - PAY_EARN_PERIOD_END\n  - PAY_EARN_PERIOD_START\n\n* **Input Values**: \n  - IV_START_DATE\n  - Service_days\n  - l_start_dt\n\n* **Return Type**: The formula returns multiple values including BAND1PAYFACTOR, BAND1ENTITLEMENT, BAND2PAYFACTOR, and BAND2ENTITLEMENT, which are numerical values representing pay factors and entitlements based on the calculated year of service.\n\n* **Logic Summary**: \n  1. The formula first checks if the `PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE` was defaulted. If so, it sets the `l_seniority_date` to `PER_ASG_REL_DATE_START`; otherwise, it sets `l_seniority_date` to `PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE`.\n  2. It calculates the `Service_days` by finding the difference in days between the `IV_START_DATE` and the determined `l_seniority_date` and adds 1.\n  3. The `Year_of_service` is calculated by dividing `Service_days` by 365, and `Months_of_service` is found by calculating the months between `IV_START_DATE` and `l_seniority_date`.\n  4. Based on the `Year_of_service`, the formula then applies a series of conditional rules to determine the values of `BAND1PAYFACTOR`, `BAND1ENTITLEMENT`, `BAND2PAYFACTOR`, and `BAND2ENTITLEMENT`. These rules are tiered, with different values assigned based on the length of service, ranging from less than 1 year up to 5 years or more.\n  5. Finally, the formula returns the calculated pay factors and entitlements for the two bands based on the employee's year of service.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the pay factors and entitlements for employees based on their length of service and primary assignment status. Here's the business logic:\n\nSeniority Date Calculation: The formula determines the seniority date based on either the statutory absence service start date or the assignment start date.\n\nService Days Calculation: It calculates the number of service days from the seniority date to the start date of the absence. It then converts the service days into years and weeks of service.\n\nEntitlement and Pay Factor Determination:\n\nIf the employee has at least one year of service and the primary assignment flag is 'Y', the entitlements are set to 14 days at 100% pay.\nIf the employee has less than one year of service or the primary assignment flag is not 'Y', the entitlements are set to 0 days at 100% pay.\nThe formula returns the pay factors and entitlements for the two bands based on these calculations.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used:** \n- ACP_HIRE_DATE \n- IV_START_DATE \n- IV_MATCHING_DATE \n- IV_INFORMATION_DATE1 \n- IV_ATTRIBUTE_1 \n- PER_ASG_CONTRACT_ATTRIBUTE1 \n- PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE \n- PER_ASG_REL_DATE_START \n- IV_PLANNEDSTARTDATE \n- IV_PLANNEDENDDATE \n- PER_ASG_PRIMARY_ASSIGNMENT_FLAG\n\n**Input Values:** \n- IV_START_DATE \n- IV_MATCHING_DATE \n- IV_ATTRIBUTE_1 \n- IV_INFORMATION_DATE1 \n- IV_PLANNEDSTARTDATE \n- IV_PLANNEDENDDATE\n\n**Return Type:** \nThe formula returns four values: BAND1PAYFACTOR, BAND1ENTITLEMENT, BAND2PAYFACTOR, and BAND2ENTITLEMENT, which seem to represent pay factors and entitlements for two bands.\n\n**Logic Summary:** \nThe formula calculates employee entitlements based on their years of service. Here's a step-by-step breakdown:\n1. It initializes various variables, including those for debug logging, pay factors, and entitlements.\n2. It determines the seniority date based on whether PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE has been defaulted or not. If defaulted, it uses PER_ASG_REL_DATE_START; otherwise, it uses PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE.\n3. It calculates the number of service days by finding the difference between the start date (IV_START_DATE) and the seniority date.\n4. The service days are then converted into years of service and weeks of service.\n5. If the employee has at least one year of service and is on their primary assignment (as indicated by PER_ASG_PRIMARY_ASSIGNMENT_FLAG = 'Y'), the formula sets the pay factor and entitlement for the first band to specific values (100 and 14, respectively) and resets the values for the second band to zero.\n6. If the conditions for primary assignment and one year of service are not met, it sets the pay factor to 100 but the entitlement to 0 for the first band, with both factors set to 0 for the second band.\n7. Finally, the formula returns the pay factors and entitlements for both bands.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write a fast formula for calculating UK Statutory Sick Pay (SSP) entitlement:\n\nPartial Days and Shift Type: The formula first determines if the absence includes partial days and identifies the type of shift (regular or alternate). write a  helps in accurately calculating the duration of the absence.\n\nShort Sickness Check: If the absence is shorter than 4 calendar days, it does not qualify for SSP. write a  is because SSP is only payable for absences that are at least 4 days long.\n\nLinked Absences Evaluation: The formula evaluates previous linked absences to count the total qualified days (waiting days) and SSP weeks. It checks if there are any disqualifying certificates in the history that would affect the current absence.\n\nSickness During Maternity Check: If the current sickness is linked to a preceding sickness during maternity within 56 days, the current sickness is considered linked and unpaid.\n\nEarnings Check: For the first absence in a chain, the formula checks if the person had earnings above the Lower Earnings Limit (LEL). If the earnings are below the LEL, the absence does not qualify for SSP.\n\nEntitlement Calculation:\n\nWaiting Days: The formula calculates the number of waiting days to serve based on the accumulated qualified days from previous absences. The statutory waiting days are 3. If the employee has already served some waiting days in previous absences, the remaining waiting days are calculated.\nPaid Days: The formula calculates the number of paid days until the limit of 28 weeks or 3 years is reached. The SSP weeks to go are determined by subtracting the total SSP weeks from the statutory week limit.\nReturn Values: The formula returns the pay factors and entitlements for the waiting days and paid days based on these calculations. If the absence is not eligible for SSP, it returns 0 for the entitlement.\n\nIn summary, the formula ensures that the SSP entitlement is calculated accurately based on the employee's absence history, earnings, and other relevant factors. If any conditions are not met, such as the absence being too short or earnings being below the LEL, the absence does not qualify for SSP\n\n***Instruction for the fastformula***: Here is a summary of the provided Oracle FastFormula:\n\n**DBI Values Used:** \n- `IV_START_TIME`\n- `IV_END_TIME`\n- `IV_START_DATE`\n- `IV_END_DATE`\n- `IV_LNKG_LNKD_ABS_ID`\n- `IV_LNKG_ABS_ID`\n- `PER_ASG_REL_DATE_START`\n- `ANC_AVAILABILITY_OBJ_CATEGORY_ARR`\n- `ANC_ABS_ENTR_CERTS_STATUS_ARR`\n- `ANC_ABS_ENTR_CERTS_REV_PAY_START_DT_ARR`\n- `ANC_ABS_ENTR_CERTS_REV_PAY_END_DT_ARR`\n- `ANC_ABS_CERTS_ANC_ABS_CERTIFICATION_F_ALTCD_ARR`\n- `ANC_ABS_ENTR_CERTS_LAST_UPDATE_TYPE_ARR`\n- `ANC_ABS_ENTR_CERTS_ABSENCE_CERTIFICATION_ID_ARR`\n- `ANC_ABS_CERTS_CLASS_CD_ARR`\n- `ANC_ABS_ENTR_CERTS_PER_CERT_ID_ARR`\n- `IV_INFORMATION_3`\n- `IV_INFORMATION_4`\n- `IV_INFORMATION_NUMBER2`\n- `IV_INFORMATION_NUMBER4`\n- `IV_INFORMATION_DATE1`\n- `IV_INFORMATION_ARR`\n- `IV_ADV_ENTRY_ABS_START_DATE_ARR`\n- `IV_ADV_ENTRY_ASSIGNMENT_ID_ARR`\n- `IV_ADV_ENTRY_DURATION_ARR`\n- `LOC_NUMBER_ARRAY`\n- `LOC_STRING_ARRAY`\n- `LOC_DATE_ARRAY`\n- `OR\u0391_HRX_GB_PAY_PERIOD_START`\n- `GET_PLSD_FSED`\n- `PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE`\n- `PER_REL_DATE_START`\n- `ORA_HRX_GB_ABS_ASG_LIST_COUNT`\n- `IV_UI_CERT_REVPAYSTART_DATE`\n- `IV_UI_CERT_REVPAYEND_DATE`\n- `IV_UI_CERT_REVPAY_FACTOR`\n- `IV_UI_PER_CERT_ID`\n- `IV_UI_CERT_TYPE`\n- `IV_UI_CERT_STATUS`\n- `IV_UI_ABS_CERT_ID`\n- `PAYROLL_LICENSE`\n\n**Input Values:**\n- `IV_START_TIME`\n- `IV_END_TIME`\n- `IV_START_DATE`\n- `IV_END_DATE`\n- `IV_START_DURATION`\n- `IV_END_DURATION`\n- `IV_LNKG_ABS_ID`\n- `IV_LNKG_LNKD_ABS_ID`\n- `IV_LNKG_LNKD_ABS_START`\n- `IV_LNKG_LNKD_ABS_END`\n- `IV_LNKG_CHAIN_ID`\n- `IV_INFORMATION_NUMBER2`\n- `IV_INFORMATION_NUMBER4`\n- `IV_INFORMATION_3`\n- `IV_INFORMATION_4`\n- `IV_INFORMATION_DATE1`\n- `IV_UI_PER_CERT_ID`\n- `IV_UI_CERT_TYPE`\n- `IV_UI_CERT_REVPAYSTART_DATE`\n- `IV_UI_CERT_REVPAYEND_DATE`\n- `IV_UI_CERT_REVPAY_FACTOR`\n- `IV_UI_CERT_CREATION_TYPE`\n- `IV_UI_CERT_STATUS`\n- `IV_UI_ABS_CERT_ID`\n- `IV_INFORMATION_ARR`\n- `IV_ADV_ENTRY_ABS_START_DATE_ARR`\n- `IV_ADV_ENTRY_ASSIGNMENT_ID_ARR`\n- `IV_ADV_ENTRY_DURATION_ARR`\n\n**Return Type:** \nThe formula returns values for `band1payfactor`, `band1entitlement`, `band2payfactor`, and `band2entitlement`, which appear to be related to pay and entitlement calculations.\n\n**Logic Summary:**\n1. The formula begins by setting default values for various input variables and initializing DBI values.\n2. It then checks if the start and end dates are at the end of time, and if so, sets specific values for `band1payfactor`, `band1entitlement`, `band2payfactor`, and `band2entitlement` before returning these values.\n3. If the start and end dates are not at the end of time, the formula proceeds with further calculations, including checks on the effective date and absence type ID.\n4. It retrieves various context values such as assignment ID, person ID, and absence entry ID.\n5. The formula then performs calculations related to absence periods, including partial days and waiting days, using various sub-formulas.\n6. It also checks for disqualification reasons, multiple assignments, and payroll changes, updating certification flags accordingly.\n7. The formula proceeds to calculate earnings, including average weekly earnings (AWE) and linked absences, using additional sub-formulas.\n8. Based on the calculations and checks performed, the formula updates various flags and variables, including `continue_to_count`, `lel_cert_flag`, `paychg_cert_flag`, and `l_awe`.\n9. Finally, the formula calculates the entitled days and pay factors based on the absence type, waiting days, and other factors, returning the calculated values for `band1payfactor`, `band1entitlement`, `band2payfactor`, and `band2entitlement`.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the entitlement for UK Statutory Sick Pay (SSP) based on several factors. Here's the detailed calculation logic:\n\nPartial Days and Shift Type: The formula first determines if the absence includes partial days and identifies the type of shift (regular or alternate). write a  helps in accurately calculating the duration of the absence.\n\nShort Sickness Check: If the absence is shorter than 4 calendar days, it does not qualify for SSP. write a  is because SSP is only payable for absences that are at least 4 days long.\n\nLinked Absences Evaluation: The formula evaluates previous linked absences to count the total qualified days (waiting days) and SSP weeks. It checks if there are any disqualifying certificates in the history that would affect the current absence.\n\nSickness During Maternity Check: If the current sickness is linked to a preceding sickness during maternity within 56 days, the current sickness is considered linked and unpaid.\n\nEarnings Check: For the first absence in a chain, the formula checks if the person had earnings above the Lower Earnings Limit (LEL). If the earnings are below the LEL, the absence does not qualify for SSP.\n\nEntitlement Calculation:\n\nWaiting Days: The formula calculates the number of waiting days to serve based on the accumulated qualified days from previous absences. The statutory waiting days are 3. If the employee has already served some waiting days in previous absences, the remaining waiting days are calculated.\nPaid Days: The formula calculates the number of paid days until the limit of 28 weeks or 3 years is reached. The SSP weeks to go are determined by subtracting the total SSP weeks from the statutory week limit.\nReturn Values: The formula returns the pay factors and entitlements for the waiting days and paid days based on these calculations. If the absence is not eligible for SSP, it returns 0 for the entitlement.\n\nIn summary, the formula ensures that the SSP entitlement is calculated accurately based on the employee's absence history, earnings, and other relevant factors. If any conditions are not met, such as the absence being too short or earnings being below the LEL, the absence does not qualify for SSP.\n\n***Instruction for the fastformula***: Here is a summary of the provided FastFormula:\n\n**DBI Values Used:** \n- IV_START_TIME\n- IV_END_TIME\n- IV_START_DATE\n- IV_END_DATE\n- IV_LNKG_LNKD_ABS_ID\n- IV_LNKG_ABS_ID\n- PER_ASG_REL_DATE_START\n- ANC_AVAILABILITY_OBJ_CATEGORY_ARR\n- ANC_ABS_ENTR_CERTS_STATUS_ARR\n- ANC_ABS_ENTR_CERTS_REV_PAY_START_DT_ARR\n- ANC_ABS_ENTR_CERTS_REV_PAY_END_DT_ARR\n- ANC_ABS_CERTS_ANC_ABS_CERTIFICATION_F_ALTCD_ARR\n- ANC_ABS_ENTR_CERTS_LAST_UPDATE_TYPE_ARR\n- ANC_ABS_ENTR_CERTS_ABSENCE_CERTIFICATION_ID_ARR\n- ANC_ABS_CERTS_CLASS_CD_ARR\n- ANC_ABS_ENTR_CERTS_PER_CERT_ID_ARR\n- IV_START_DURATION\n- IV_END_DURATION\n- IV_INFORMATION_3\n- IV_INFORMATION_4\n- IV_INFORMATION_NUMBER2\n- IV_INFORMATION_NUMBER4\n- IV_INFORMATION_DATE1\n- IV_INFORMATION_ARR\n- IV_ADV_ENTRY_ABS_START_DATE_ARR\n- IV_ADV_ENTRY_ASSIGNMENT_ID_ARR\n- IV_ADV_ENTRY_DURATION_ARR\n- IV_UI_CERT_REVPAYSTART_DATE\n- IV_UI_CERT_REVPAYEND_DATE\n- IV_UI_CERT_REVPAY_FACTOR\n- IV_UI_PER_CERT_ID\n- IV_UI_CERT_STATUS\n- IV_UI_CERT_TYPE\n- IV_UI_CERT_CREATION_TYPE\n- IV_UI_ABS_CERT_ID\n- PAYROLL_LICENSE\n- ORA_HRX_GB_PAY_PERIOD_START\n- GET_PLSD_FSED\n- PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE\n- PER_REL_DATE_START\n- ORA_HRX_GB_ABS_ASG_LIST_COUNT\n\n**Input Values:** \n- IV_START_TIME\n- IV_END_TIME\n- IV_START_DATE\n- IV_END_DATE\n- IV_START_DURATION\n- IV_END_DURATION\n- IV_LNKG_ABS_ID\n- IV_LNKG_LNKD_ABS_ID\n- IV_LNKG_LNKD_ABS_START\n- IV_LNKG_LNKD_ABS_END\n- IV_LNKG_CHAIN_ID\n- IV_INFORMATION_NUMBER2\n- IV_INFORMATION_NUMBER4\n- IV_INFORMATION_3\n- IV_INFORMATION_4\n- IV_INFORMATION_DATE1\n- IV_UI_PER_CERT_ID\n- IV_UI_CERT_TYPE\n- IV_UI_CERT_REVPAYSTART_DATE\n- IV_UI_CERT_REVPAYEND_DATE\n- IV_UI_CERT_REVPAY_FACTOR\n- IV_UI_CERT_CREATION_TYPE\n- IV_UI_CERT_STATUS\n- IV_UI_ABS_CERT_ID\n- IV_INFORMATION_ARR\n- IV_ADV_ENTRY_ABS_START_DATE_ARR\n- IV_ADV_ENTRY_ASSIGNMENT_ID_ARR\n- IV_ADV_ENTRY_DURATION_ARR\n\n**Return Type:** \nThe formula returns four values: band1payfactor, band1entitlement, band2payfactor, and band2entitlement.\n\n**Logic Summary:** \nThis FastFormula appears to calculate entitlements for Statutory Sick Pay (SSP) based on various input parameters. Here's a step-by-step breakdown of the logic:\n1. **Initialization**: The formula starts by initializing various variables with default values, including start and end dates, durations, and flags for different conditions.\n2. **Context Setting**: It then sets the context for the calculation using the provided input values, such as assignment ID, person ID, and effective date.\n3. **Checking for Disqualification**: The formula checks if the employee is disqualified from receiving SSP due to various reasons, such as insufficient information or multiple assignments.\n4. **Calculating Qualified Days**: It calculates the total number of qualified days for SSP, taking into account waiting days, migration waiting days, and limited days.\n5. **Checking for Linking Letter**: The formula checks if a linking letter is required and if the employee is linked to sickness during maternity.\n6. **Earnings Check**: It performs an earnings check to determine if the employee meets the Lower Earnings Limit (LEL) and if there are any pay changes.\n7. **Calculating Entitlement**: The formula calculates the entitlement days based on the qualified days, statutory week limit, and waiting days to serve.\n8. **Returning Results**: Finally, the formula returns the calculated band1payfactor, band1entitlement, band2payfactor, and band2entitlement values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the name of the absence plan entitlement formula for the UK statutory sick pay?\n\n***Instruction for the fastformula***: ### Summary of the Oracle FastFormula\n\n#### DBI Values Used:\nThe following database items (DBIs) are referenced in the formula:\n- ORA_HRX_GB_ABS_ASG_LIST_COUNT\n- GET_CONTEXT (for various context values such as ABSENCE_ENTRY_ID, PERSON_ID, HR_ASSIGNMENT_ID, ACCRUAL_PLAN_ID, ABSENCE_TYPE_ID)\n- Various other default values and constants defined at the beginning of the formula.\n\n#### Input Values:\nThe formula takes the following input values:\n- IV_START_TIME\n- IV_END_TIME\n- IV_START_DATE (date)\n- IV_END_DATE (date)\n- IV_START_DURATION\n- IV_END_DURATION\n- IV_LNKG_ABS_ID (NUMBER_NUMBER)\n- IV_LNKG_LNKD_ABS_ID (NUMBER_NUMBER)\n- IV_LNKG_LNKD_ABS_START (date_number)\n- IV_LNKG_LNKD_ABS_END (date_number)\n- IV_LNKG_CHAIN_ID (NUMBER_NUMBER)\n- IV_INFORMATION_NUMBER2\n- IV_INFORMATION_NUMBER4\n- IV_INFORMATION_3 (TEXT)\n- IV_INFORMATION_4 (TEXT)\n- IV_INFORMATION_DATE1 (DATE)\n- IV_UI_PER_CERT_ID\n- IV_UI_CERT_TYPE\n- IV_UI_CERT_REVPAYSTART_DATE (date)\n- IV_UI_CERT_REVPAYEND_DATE (date)\n- IV_UI_CERT_REVPAY_FACTOR\n- IV_UI_CERT_CREATION_TYPE\n- IV_UI_CERT_STATUS\n- IV_UI_ABS_CERT_ID\n- IV_INFORMATION_ARR\n- IV_ADV_ENTRY_ABS_START_DATE_ARR\n- IV_ADV_ENTRY_ASSIGNMENT_ID_ARR\n- IV_ADV_ENTRY_DURATION_ARR\n\n#### Return Type:\nThe formula returns a set of values, including band1payfactor, band1entitlement, band2payfactor, and band2entitlement, which are related to the calculation of statutory sick pay (SSP) entitlement.\n\n#### Logic Summary:\nThe logic of this formula can be summarized as follows:\n1. **Initialization**: The formula starts by initializing various constants, default values, and input parameters.\n2. **Disqualification Check**: It checks for disqualification reasons and updates flags accordingly.\n3. **Multi-Assignment Check**: If configured, it checks for multiple assignments within the specified date range and updates flags.\n4. **SDM (Sickness During Maternity) Check**: If configured and not disqualified, it performs an SDM check using a sub-formula.\n5. **Linking Letter Check**: If no linked absences exist and not disqualified, it checks for linking letters using a sub-formula.\n6. **LEL (Lower Earnings Limit) Check**: If configured and conditions are met, it performs an LEL check using a sub-formula to calculate Average Weekly Earnings (AWE).\n7. **Entitlement Calculation**: It calculates the SSP entitlement based on the waiting days, qualified days, and weeks.\n8. **Blocked Periods**: It identifies blocked periods based on certain certification statuses and update types.\n9. **Final Entitlement Calculation**: Finally, it calculates the final SSP entitlement, taking into account the waiting days, qualified days, and blocked periods.\n\nThis summary provides an overview of the logic flow and key components of the Oracle FastFormula, focusing on the main steps involved in calculating statutory sick pay entitlement.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the pay factors and entitlements for employees based on their length of service. Here's the detailed business logic:\n\nThe formula first determines the seniority date based on either the statutory absence service start date or the assignment start date.\nIt calculates the number of service days from the seniority date to the start date of the absence. write a  is then converted into years and months of service.\nBased on the years of service, the formula assigns pay factors and entitlements:\nFor employees with up to 0.33 years of service, the entitlements are set to 22 days at 100% pay and 0 days at 50% pay.\nFor employees with more than 0.33 years and up to 1 year of service, the entitlements are set to 22 days at 100% pay and 43 days at 50% pay.\nFor employees with more than 1 year and up to 2 years of service, the entitlements are set to 43 days at 100% pay and 43 days at 50% pay.\nFor employees with more than 2 years and up to 3 years of service, the entitlements are set to 87 days at 100% pay and 87 days at 50% pay.\nFor employees with more than 3 years and up to 5 years of service, the entitlements are set to 108 days at 100% pay and 108 days at 50% pay.\nFor employees with more than 5 years of service, the entitlements are set to 130 days at 100% pay and 130 days at 50% pay.\nIf the employee has less than 1 year of service, the entitlements are set to 0 days at 100% pay and 0 days at 50% pay.\nThe formula returns the pay factors and entitlements for the two bands based on these calculations.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: \n  + PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE\n  + PER_ASG_REL_DATE_START\n  + PAY_EARN_PERIOD_END\n  + PAY_EARN_PERIOD_START\n  + PER_ASG_CONTRACT_TYPE\n  + PAYROLL_NAME\n  + PER_ASG_CONTRACT_ATTRIBUTE1\n  + ACP_HIRE_DATE\n  + PER_PER_BASIC_ATTRIBUTE_DATE1\n\n* **Input Values**: \n  + IV_START_DATE\n  + BAND1PAYFACTOR\n  + BAND1ENTITLEMENT\n  + BAND2PAYFACTOR\n  + BAND2ENTITLEMENT\n  + Service_days\n  + l_start_dt\n\n* **Return Type**: The formula returns multiple values, specifically four variables: BAND1PAYFACTOR, BAND1ENTITLEMENT, BAND2PAYFACTOR, and BAND2ENTITLEMENT, all of which are numeric.\n\n* **Logic Summary**: \n  1. The formula starts by checking if the PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE has been defaulted. If it has, the seniority date is set to PER_ASG_REL_DATE_START; otherwise, it is set to PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE.\n  2. It then calculates the number of service days by finding the difference between the IV_START_DATE and the seniority date, adding one day.\n  3. The formula calculates the year of service and months of service based on the service days and the difference between the IV_START_DATE and the seniority date.\n  4. Logging statements are used to record the seniority date, year of service, and service days for debugging purposes.\n  5. Based on the year of service, the formula applies different pay factors and entitlements to BAND1 and BAND2. The pay factors and entitlements are adjusted according to predefined service year ranges (e.g., 0-0.33 years, 0.33-1 year, 1-2 years, etc.).\n  6. Finally, the formula returns the calculated BAND1PAYFACTOR, BAND1ENTITLEMENT, BAND2PAYFACTOR, and BAND2ENTITLEMENT values based on the year of service.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the pay factors and entitlements for maternity leave based on the employee's length of service and primary assignment status. Here's the detailed business logic:\n\nThe formula first determines the seniority date based on either the statutory absence service start date or the assignment start date.\nIt calculates the number of service days from the seniority date to the start date of the absence. write a  is then converted into years and weeks of service.\nThe formula adjusts the date to the nearest Monday before 105 days prior to the expected childbirth date.\nBased on the weeks of service, if the employee has more than 26 weeks of service and the primary assignment flag is 'Y', the entitlements are set to 7 days at 100% pay.\nIf the conditions are not met, the entitlements are set to 0 days at 100% pay and 0 days at 50% pay.\nThe formula returns the pay factors and entitlements for the two bands based on these calculations.\n\n***Instruction for the fastformula***: Here is a structured summary of the FastFormula:\n\n**DBI Values Used**: \n- ACP_HIRE_DATE\n- PER_ASG_CONTRACT_ATTRIBUTE_DATE1\n- PER_ASG_CONTRACT_ATTRIBUTE1\n- PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE\n- PER_ASG_REL_DATE_START\n- PER_ASG_PRIMARY_ASSIGNMENT_FLAG\n\n**Input Values**: \n- IV_START_DATE\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_PLANNEDSTARTDATE\n- IV_PLANNEDENDDATE\n\n**Return Type**: The formula returns multiple values including BAND1PAYFACTOR, BAND1ENTITLEMENT, BAND2PAYFACTOR, and BAND2ENTITLEMENT, which are of numeric type.\n\n**Logic Summary**: \nThe formula calculates employee entitlements based on their service period. Here's a step-by-step breakdown:\n1. It first checks if a specific legal attribute start date has been defaulted; if so, it uses an alternative date (PER_ASG_REL_DATE_START) for seniority calculations.\n2. It calculates the date 105 days before the expected child birth date.\n3. It then adjusts this date to be the first Monday (by moving backwards if necessary), which acts as a reference point for service calculations.\n4. The formula calculates the total service days between this adjusted date and the seniority date.\n5. It converts these service days into years and then weeks of service.\n6. If the weeks of service exceed 26 and the assignment is primary, it sets specific pay factors and entitlements for two bands (BAND1 and BAND2).\n7. Finally, it returns the pay factors and entitlements for these bands.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the pay factors and entitlements for adoption leave based on the employee's length of service, primary assignment status, and a specific attribute. Here's the detailed business logic:\n\nThe formula first determines the seniority date based on either the statutory absence service start date or the assignment start date.\nIt calculates the number of service days from the seniority date to the start date of the absence. write a  is then converted into years of service.\nThe formula adjusts the date to the nearest Monday before the matching date.\nBased on the years of service, if the employee has at least one year of service and the primary assignment flag is 'Y', the entitlements are determined by checking a specific attribute:\nIf the attribute contains 'Y', the entitlements are set to 56 days at 100% pay, 0 days at 90% pay, 126 days at 50% pay, and 182 days at 0% pay.\nIf the attribute does not contain 'Y', the entitlements are set to 56 days at 100% pay, 0 days at 90% pay, 0 days at 50% pay, and 182 days at 0% pay.\nIf the conditions are not met, the entitlements are set to 0 days at 100% pay, 0 days at 90% pay, 0 days at 50% pay, and 0 days at 0% pay.\nThe formula returns the pay factors and entitlements for the four bands based on these calculations.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE, PER_ASG_REL_DATE_START, PER_ASG_PRIMARY_ASSIGNMENT_FLAG, ANC_ABS_ENTRS_ATTRIBUTE3\n* **Input Values**: IV_START_DATE, IV_MATCHING_DATE, IV_ATTRIBUTE_1, IV_INFORMATION_DATE1, IV_PLANNEDSTARTDATE, IV_PLANNEDENDDATE\n* **Return Type**: The formula returns multiple values, including pay factors and entitlements for four different bands, all of type number.\n* **Logic Summary**: \n    1. The formula first checks if a specific database item (PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE) has been defaulted. If so, it uses an alternative date (PER_ASG_REL_DATE_START) for seniority calculations.\n    2. It then determines the day of the week for a given matching date and adjusts the date until it finds a Monday.\n    3. The formula calculates the number of service days between the adjusted date and the seniority date, and then determines the year of service.\n    4. Based on the year of service and a primary assignment flag, it applies different pay factors and entitlements for four bands.\n    5. The entitlements are further adjusted based on an attribute (ANC_ABS_ENTRS_ATTRIBUTE3) that determines whether an additional entitlement is applicable.\n    6. Finally, the formula returns the pay factors and entitlements for all four bands.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the pay factors and entitlements for employees based on their length of service. Here's the detailed business logic:\n\nThe formula first determines the seniority date based on either the statutory absence service start date or the assignment start date.\nIt calculates the number of service days from the seniority date to the start date of the absence. write a  is then converted into years and months of service.\nBased on the years of service, the formula assigns pay factors and entitlements:\nFor employees with up to 0.33 years of service, the entitlements are set to 25 days at 100% pay and 0 days at 50% pay.\nFor employees with more than 0.33 years and up to 1 year of service, the entitlements are set to 25 days at 100% pay and 50 days at 50% pay.\nFor employees with more than 1 year and up to 2 years of service, the entitlements are set to 50 days at 100% pay and 50 days at 50% pay.\nFor employees with more than 2 years and up to 3 years of service, the entitlements are set to 75 days at 100% pay and 75 days at 50% pay.\nFor employees with more than 3 years and up to 15 years of service, the entitlements are set to 100 days at 100% pay and 100 days at 50% pay.\nFor employees with more than 15 years and up to 20 years of service, the entitlements are set to 115 days at 100% pay and 115 days at 50% pay.\nFor employees with more than 20 years of service, the entitlements are set to 138 days at 100% pay and 138 days at 50% pay.\nThe formula returns the pay factors and entitlements for the two bands based on these calculations.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: \n  - ACP_HIRE_DATE\n  - PER_PER_BASIC_ATTRIBUTE_DATE1\n  - PER_ASG_CONTRACT_TYPE\n  - PAYROLL_NAME\n  - PER_ASG_CONTRACT_ATTRIBUTE1\n  - PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE\n  - PER_ASG_REL_DATE_START\n  - PAY_EARN_PERIOD_END\n  - PAY_EARN_PERIOD_START\n\n* **Input Values**: \n  - IV_START_DATE\n  - Service_days\n  - l_start_dt\n\n* **Return Type**: The formula returns multiple values, specifically four pay-related factors and entitlements: BAND1PAYFACTOR, BAND1ENTITLEMENT, BAND2PAYFACTOR, and BAND2ENTITLEMENT, which are numerical values indicating pay factors and entitlement percentages.\n\n* **Logic Summary**: \n  - The formula starts by checking if a specific date (PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE) has been defaulted. If it has, the formula uses a different date (PER_ASG_REL_DATE_START) to determine seniority; otherwise, it uses the PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE.\n  - It then calculates the number of service days and years of service based on the provided start date (IV_START_DATE) and the determined seniority date.\n  - The formula uses these years of service to determine pay factors and entitlements (BAND1PAYFACTOR, BAND1ENTITLEMENT, BAND2PAYFACTOR, BAND2ENTITLEMENT) based on a series of if-else conditions that categorize the years of service into different bands (e.g., 0-0.33 years, 0.33-1 year, 1-2 years, etc.).\n  - For each band, specific pay factors and entitlement percentages are assigned.\n  - Finally, the formula returns the calculated pay factors and entitlements.\n  - Throughout the calculation, various debug logs are written to track key values, but these do not affect the core logic of determining pay factors and entitlements.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the reference date for a rolling forward term based on the start date of an absence. Here's the detailed business logic:\n\nThe formula first determines the month of the absence start date.\nIf the month is between April and December (inclusive), the reference date is set to April 1st of the same year as the absence start date.\nIf the month is between January and March (inclusive), the reference date is set to April 1st of the previous year.\nThe formula returns the calculated reference date.\nIn summary, the formula ensures that the reference date for the rolling forward term is always April 1st, either of the same year or the previous year, depending on the month of the absence start date.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: None\n* **Input Values**: \n  - IV_START_DATE (date)\n  - IV_END_DATE (date)\n* **Return Type**: Date\n* **Logic Summary**: \n  The formula determines a reference date based on the month of the absence start date. It first checks the month of the absence start date. If the month falls between April and December, it sets the reference date to April 1st of the same year. If the month falls between January and March, it subtracts one year from the absence start date and sets the reference date to April 1st of the previous year. The reference date is then returned as the result. The end date input is not used in the formula's logic.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the pay factors and entitlements for maternity leave based on the employee's length of service and primary assignment status. Here's the detailed business logic:\n\nThe formula first determines the seniority date based on either the statutory absence service start date or the assignment start date.\nIt calculates the number of service days from the seniority date to the start date of the absence. write a  is then converted into years and weeks of service.\nBased on the years of service, if the employee has at least one year of service and the primary assignment flag is 'Y', the entitlements are set to 14 days at 100% pay.\nIf the conditions are not met, the entitlements are set to 0 days at 100% pay and 0 days at 50% pay.\nThe formula returns the pay factors and entitlements for the two bands based on these calculations.\n\n***Instruction for the fastformula***: Here is a structured summary of the FastFormula:\n\n* **DBI Values Used**: ACP_HIRE_DATE, PER_ASG_CONTRACT_ATTRIBUTE_DATE1, PER_ASG_CONTRACT_ATTRIBUTE1, PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE, PER_ASG_REL_DATE_START, PER_ASG_PRIMARY_ASSIGNMENT_FLAG\n* **Input Values**: IV_START_DATE, IV_EXPECTEDCHILDBIRTHDATE, IV_PLANNEDSTARTDATE, IV_PLANNEDENDDATE\n* **Return Type**: The formula returns multiple values: BAND1PAYFACTOR, BAND1ENTITLEMENT, BAND2PAYFACTOR, BAND2ENTITLEMENT, all of which are numeric.\n* **Logic Summary**: \n  1. The formula starts by checking if a specific database item (PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE) has been defaulted. If it has, it sets a seniority date to another database item (PER_ASG_REL_DATE_START); otherwise, it uses the PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE as the seniority date.\n  2. It calculates the number of service days between a given start date (IV_START_DATE) and the determined seniority date.\n  3. The formula then calculates the year and week of service based on the service days.\n  4. Depending on whether the year of service is greater than or equal to 1 and a primary assignment flag (PER_ASG_PRIMARY_ASSIGNMENT_FLAG) is set to 'Y', the formula assigns different values to pay factors and entitlements for two bands (BAND1 and BAND2).\n  5. Finally, the formula returns the calculated pay factors and entitlements for both bands.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the duration of an absence for teachers based on various factors. Here's the detailed business logic:\n\nThe formula first determines the start and end dates and times of the absence period.\nIt checks if the employee has a primary assignment. If not, the duration is set to 0.\nIt calculates the availability of the employee during the absence period.\nIt checks if the absence falls on a term-off day. If it does, the duration is set to 0.\nIf the absence starts on the same date as the absence start date, the duration is set to the absence start duration. Otherwise, it is set to 1 day.\nIf the absence falls on a weekend, the duration is set to 0.\nThe formula rounds the calculated duration to two decimal places and returns it.\nIn summary, the formula ensures that the duration of the absence is accurately calculated based on the employee's availability, term-off days, and primary assignment status.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: \n  - ASG_HR_ASG_ID\n  - XX_GET_HR_DATA\n  - BC_PAY_TEACHERS_TERM_OFF_DAYS\n  - GET_PAY_AVAILABILITY\n  - GET_VALUE_SET\n  - GET_DATE_DAY_OF_WEEK\n  - ess_log_write\n\n* **Input Values**: \n  - IV_START_DATE (date)\n  - IV_END_DATE (date)\n  - IV_START_TIME (text)\n  - IV_END_TIME (text)\n  - IV_ABS_START_DURATION\n  - IV_ABS_END_DURATION\n  - IV_ABS_START_DATE (date)\n  - IV_ABS_END_DATE (date)\n\n* **Return Type**: \n  The formula returns a numeric value representing the duration, rounded to two decimal places.\n\n* **Logic Summary**: \n  This FastFormula calculates the duration for a teacher's availability. Here's a step-by-step breakdown:\n  1. The formula starts by setting default values for input parameters if they are not provided.\n  2. It then constructs the start and end dates for the period by combining the date and time inputs.\n  3. The formula retrieves the HR assignment ID and sets it, along with the effective date and mode, to get the primary flag from a database procedure.\n  4. It calculates the entry duration using the `GET_PAY_AVAILABILITY` function for the specified period.\n  5. Depending on the day of the week and whether it's a term off day, the formula adjusts the entry duration. If it's a weekday and not a term off day, it checks if the start date matches the absence start date. If they match, it uses the absence start duration; otherwise, it sets the duration to 1.\n  6. If the primary flag is 'N', the formula sets the entry duration to 0.\n  7. Finally, the formula rounds the calculated entry duration to two decimal places and returns it as the result.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the pay factors and entitlements for adoption leave based on the employee's length of service, primary assignment status, and a specific attribute. Here's the detailed business logic:\n\nThe formula first determines the seniority date based on either the statutory absence service start date or the assignment start date.\nIt calculates the number of service days from the seniority date to the start date of the absence. write a  is then converted into years of service.\nThe formula adjusts the date to the nearest Monday before 77 days prior to the matching date.\nBased on the years of service, if the employee has at least one year of service and the primary assignment flag is 'Y', the entitlements are determined by checking a specific attribute:\nIf the attribute contains 'Y', the entitlements are set to 28 days at 100% pay, 14 days at 90% pay, 84 days at 50% pay, and 147 days at 0% pay.\nIf the attribute does not contain 'Y', the entitlements are set to 28 days at 100% pay, 14 days at 90% pay, 0 days at 50% pay, and 147 days at 0% pay.\nIf the conditions are not met, the entitlements are set to 0 days at 100% pay, 0 days at 90% pay, 0 days at 50% pay, and 0 days at 0% pay.\nThe formula returns the pay factors and entitlements for the four bands based on these calculations.\n\n***Instruction for the fastformula***: **Summary of the FastFormula**\n\n* **DBI Values Used**: \n  + ACP_HIRE_DATE \n  + IV_START_DATE \n  + IV_MATCHING_DATE \n  + IV_INFORMATION_DATE1 \n  + IV_ATTRIBUTE_1 \n  + PER_ASG_CONTRACT_ATTRIBUTE1 \n  + PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE \n  + PER_ASG_REL_DATE_START \n  + IV_PLANNEDSTARTDATE \n  + IV_PLANNEDENDDATE \n  + ANC_ABS_ENTRS_ATTRIBUTE3 \n  + PER_ASG_PRIMARY_ASSIGNMENT_FLAG\n\n* **Input Values**: \n  + IV_START_DATE (date) \n  + IV_MATCHING_DATE (date) \n  + IV_ATTRIBUTE_1 (text) \n  + IV_INFORMATION_DATE1 (date) \n  + IV_PLANNEDSTARTDATE (date) \n  + IV_PLANNEDENDDATE (date)\n\n* **Return Type**: The formula returns multiple values including pay factors and entitlements for different bands, all of type number.\n\n* **Logic Summary**: \n  1. The formula starts by checking if a specific database item (PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE) has been defaulted. If so, it sets a seniority date based on an assignment start date; otherwise, it uses the PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE as the seniority date.\n  2. It calculates a date 77 days before a matching date and then finds the first Monday before this date.\n  3. The formula calculates the number of service days between the seniority date and the calculated Monday date, and then determines the year of service.\n  4. Based on the year of service and a primary assignment flag, it sets pay factors and entitlements for four different bands. The entitlements are set differently depending on whether a specific attribute contains 'Y'.\n  5. Finally, it returns the pay factors and entitlements for the four bands. Throughout the process, it logs certain values for debugging purposes.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the pay factors and entitlements for maternity leave based on the employee's length of service and a specific attribute. Here's the detailed business logic:\n\nThe formula first determines the seniority date based on either the statutory absence service start date or the assignment start date.\nIt calculates the number of service days from the seniority date to the start date of the absence. write a  is then converted into years of service.\nThe formula adjusts the date to the nearest Monday before 77 days prior to the expected childbirth date.\nBased on the years of service, if the employee has at least one year of service, the entitlements are determined by checking a specific attribute:\nIf the attribute contains 'Y', the entitlements are set to 28 days at 100% pay, 14 days at 90% pay, 84 days at 50% pay, and 147 days at 0% pay.\nIf the attribute does not contain 'Y', the entitlements are set to 28 days at 100% pay, 14 days at 90% pay, 0 days at 50% pay, and 147 days at 0% pay.\nIf the conditions are not met, the entitlements are set to 0 days at 100% pay, 0 days at 90% pay, 0 days at 50% pay, and 0 days at 0% pay.\nThe formula returns the pay factors and entitlements for the four bands based on these calculations.\n\n***Instruction for the fastformula***: ### Summary of the Provided FastFormula\n\n#### DBI Values Used:\n- ACP_HIRE_DATE\n- PER_ASG_CONTRACT_ATTRIBUTE_DATE1\n- PER_ASG_CONTRACT_ATTRIBUTE1\n- PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE\n- PER_ASG_REL_DATE_START\n- ANC_ABS_ENTRS_ATTRIBUTE2\n\n#### Input Values:\n- IV_START_DATE\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_PLANNEDSTARTDATE\n- IV_PLANNEDENDDATE\n\n#### Return Type:\nThe formula returns multiple values related to pay factors and entitlements for different bands (BAND1 to BAND4), including pay factors and entitlement days.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by setting default values for various database items (DBIs) and input variables, mainly dates, to specific values if they are not provided.\n2. **Date Calculation**: It calculates a specific date (l_Date) by subtracting 77 days from the expected child birth date (IV_EXPECTEDCHILDBIRTHDATE) and then adjusts this date to the last Monday before it.\n3. **Seniority Date Determination**: The seniority date (l_seniority_date) is determined based on whether a specific DBI (PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE) has a default value. If default, it uses PER_ASG_REL_DATE_START; otherwise, it uses the PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE.\n4. **Service Days Calculation**: It calculates the number of service days by finding the difference between the adjusted date (l_Date) and the seniority date (l_seniority_date).\n5. **Year of Service Calculation**: The service days are then converted into years of service.\n6. **Conditional Logic for Entitlements**: Based on the year of service and a value from ANC_ABS_ENTRS_ATTRIBUTE2, the formula sets the pay factors and entitlement days for four bands (BAND1 to BAND4). The year of service and the presence of 'Y' in ANC_ABS_ENTRS_ATTRIBUTE2 determine which set of pay factors and entitlements are applied.\n7. **Return Values**: Finally, the formula returns the pay factors and entitlement days for each of the four bands.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the pay factors and entitlements for paternity leave based on the employee's length of service and primary assignment status. Here's the detailed business logic:\n\nThe formula first determines the seniority date based on either the statutory absence service start date or the assignment start date.\nIt calculates the number of service days from the seniority date to the start date of the absence. write a  is then converted into years of service.\nBased on the years of service, if the employee has at least one year of service and the primary assignment flag is 'Y', the entitlements are set to 14 days at 100% pay.\nIf the conditions are not met, the entitlements are set to 0 days at 100% pay and 0 days at 50% pay.\nThe formula returns the pay factors and entitlements for the two bands based on these calculations.\n\n***Instruction for the fastformula***: ### Summary of the Provided FastFormula\n\n#### DBI Values Used:\n- PER_ASG_REL_DATE_START\n- PER_ASG_REL_ACTUAL_TERMINATION_DATE\n- PER_ASG_PAYROLL_INFO_PAYROLL_ASSIGNMENT_ID\n- PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE\n- PER_PERSON_LEGISLATIVE_DATA_LEG_DDF_GB_ORA_HRX_GB_OFF_PAY_WKR\n- PAYROLL_LICENSE\n- PAY_PRIMARY_PAYROLL_NAME_NF\n- ORA_HRX_GB_ABS_COUNT_PAYROLL_RUNS\n- ORA_HRX_GB_PAY_PERIOD_DEFAULT_PAYDATE\n\n#### Input Values:\n- IV_START_TIME\n- IV_END_TIME\n- IV_START_DATE\n- IV_END_DATE\n- IV_TOTALDURATION\n- IV_START_DURATION\n- IV_END_DURATION\n- IV_ACTUALCHILDBIRTHDATE\n- IV_ACTUALSTARTDATE\n- IV_ACTUALENDDATE\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_PLANNEDSTARTDATE\n- IV_PLANNEDENDDATE\n- IV_INFORMATION_DATE1\n- IV_INFORMATION_DATE2\n- IV_INFORMATION_DATE3\n- IV_UI_PER_CERT_ID\n- IV_UI_ABS_CERT_ID\n- IV_UI_CERT_TYPE\n- IV_UI_CERT_REVPAYSTART_DATE\n- IV_UI_CERT_REVPAYEND_DATE\n- IV_UI_CERT_REVPAY_FACTOR\n- IV_UI_CERT_CREATION_TYPE\n- IV_UI_CERT_STATUS\n- IV_INFORMATION_NUMBER1\n\n#### Return Type:\nThe formula returns a set of values including:\n- Band names and their pay factors\n- Entitlement amounts\n- Certificate names\n- Certificate start and end dates\n- Certificate comments\n- Arrays for numbers, strings, and dates\n- A flag for API skip\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by setting default values for various variables and initializing logs.\n2. **Date Calculations**: It calculates the expected week of childbirth (EWC) and adjusts it based on the day of the week, ensuring it falls on a specific day.\n3. **Early Birth Indicator**: Checks if the actual birth date is earlier than the expected birth date, adjusting the EWC if necessary.\n4. **Seniority Date**: Determines the seniority date based on either the assignment start date or a legislative data element, if available.\n5. **Average Weekly Earnings (AWE) Calculation**: Calculates the AWE based on the payroll runs and pay periods, considering factors like payroll period type and whether the employee is on or off-payroll.\n6. **LEL (Lower Earnings Limit) Check**: Verifies if the AWE is greater than or equal to the LEL, creating certificates as necessary for insufficient information or if the LEL is not reached.\n7. **Service Length Check**: Ensures the employee has been employed for more than 26 weeks, creating a certificate if not.\n8. **Absence Duration Check**: Checks if the absence duration exceeds the maximum payable weeks, creating a certificate if so.\n9. **Employment in Qualifying Week Check**: Verifies if the employee was employed in the qualifying week, creating a certificate if not.\n10. **Final Adjustments and Certificates**: Makes final adjustments to certificates and returns the calculated values and certificates.\n\nThis formula is designed to calculate statutory absence payments, particularly for maternity leave, considering various rules and conditions such as employment duration, earnings, and absence periods. It generates certificates based on the conditions met or not met by the employee, which are crucial for payroll processing and compliance with labor laws.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Bereavement Leave\n\nMax 3 days allowed.\nPaternity Leave\n\nMax 10 days in the past one year.\nMaternity Leave\n\nAllowed only after probation and 80 days of service.\nDuration:\n182 days if the employee has less than 2 children.\n84 days if the employee has 2 or more children.\nMarriage Leave\n\nRequires marriage date input.\nCan only be taken within 5 days before or after the marriage date.\nUnpaid Leave\n\nAllowed only if Annual Leave balance is zero.\nMax 15 days.\n\n***Instruction for the fastformula***: Here is a structured summary of the FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_REL_DATE_START\n- PER_ASG_REL_ACTUAL_TERMINATION_DATE\n- PER_PPS_LEG_DDF_GB_STAT_ABS_SER_START_DATE\n- PER_ASG_PAYROLL_INFO_PAYROLL_ASSIGNMENT_ID\n- PER_PERSON_LEGISLATIVE_DATA_LEG_DDF_GB_ORA_HRX_GB_OFF_PAY_WKR\n- PAYROLL_LICENSE\n- PAY_PRIMARY_PAYROLL_NAME_NF\n- ORA_HRX_GB_ABS_COUNT_PAYROLL_RUNS\n- ORA_HRX_GB_PAY_PERIOD_DEFAULT_PAYDATE\n- ORA_HRX_GB_PAY_PERIOD_REG_PROC_DATE\n- ORA_HRX_GB_ABS_PAY_PERIOD_REG_PROC_DATE\n\n**Input Values:**\n- IV_START_TIME\n- IV_END_TIME\n- IV_START_DATE\n- IV_END_DATE\n- IV_TOTALDURATION\n- IV_START_DURATION\n- IV_END_DURATION\n- IV_ACTUALCHILDBIRTHDATE\n- IV_ACTUALSTARTDATE\n- IV_ACTUALENDDATE\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_PLANNEDSTARTDATE\n- IV_PLANNEDENDDATE\n- IV_INFORMATION_DATE1\n- IV_INFORMATION_DATE2\n- IV_INFORMATION_DATE3\n- IV_UI_PER_CERT_ID\n- IV_UI_ABS_CERT_ID\n- IV_UI_CERT_TYPE\n- IV_UI_CERT_REVPAYSTART_DATE\n- IV_UI_CERT_REVPAYEND_DATE\n- IV_UI_CERT_REVPAY_FACTOR\n- IV_UI_CERT_CREATION_TYPE\n- IV_UI_CERT_STATUS\n- IV_INFORMATION_NUMBER1\n\n**Return Type:**\nThe formula returns multiple values including:\n- band1name\n- band1payfactor\n- band1entitlement\n- band2name\n- band2payfactor\n- band2entitlement\n- CERT_NAMES\n- CERT_START_DATES\n- CERT_END_DATES\n- CERT_COMMENTS\n- LOC_NUMBER_ARRAY\n- LOC_STRING_ARRAY\n- LOC_DATE_ARRAY\n- LOC_API_SKIP\n\n**Logic Summary:**\nThis FastFormula is used to calculate the entitlement for maternity absence. It takes various input values such as start and end dates, expected and actual child birth dates, and other related information. The formula first determines the effective date and then checks if the expected or actual child birth date was provided. Based on this, it calculates the start and end dates for the absence period. It then checks if the employee is deemed a worker and if they meet the eligibility criteria for statutory absence payment. The formula also checks for various conditions such as early birth, change in payroll, and insufficient information to perform the LEL (Lower Earnings Limit) check. It calculates the average weekly earnings (AWE) and checks if it meets the LEL. If not, it creates certificates for insufficient information or LEL not reached. The formula also checks for other conditions such as employed less than 26 weeks and maximum weeks paid. Finally, it returns the calculated values and created certificates. The logic is complex and involves multiple conditions and calculations to determine the entitlement for maternity absence. \n\nNote: The logic summary is a high-level description of the formula's logic and is intended to provide a general understanding of the formula's purpose and calculations. It is not a step-by-step guide to writing the formula.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: What is the formula for CIMB_ANNUAL_LEAVE_ACCRUAL?\n\n***Instruction for the fastformula***: ### Summary of the FastFormula\n\n#### DBI Values Used:\n- PER_ASG_PERSON_NUMBER\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- PER_ASG_REL_DATE_START\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- PER_ASG_REL_ACTUAL_TERMINATION_DATE\n- PER_PERSON_ENTERPRISE_HIRE_DATE\n- PER_ASG_GRADE_NAME\n- PER_ASG>Action_CODE\n- PER_ASG_JOB_NAME\n- PER_HIST_ASG_EFFECTIVE_START_DATE\n- PER_ASG_FTE_VALUE\n\n#### Input Values:\n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n- IV_EVENT_DATES\n- IV_BAND_CHG_DT1\n- IV_BAND_CHG_BEFVAL1\n- IV_BAND_CHG_AFTVAL1\n- IV_BAND_CHG_DT2\n- IV_BAND_CHG_BEFVAL2\n- IV_BAND_CHG_AFTVAL2\n- IV_BAND_CHG_DT3\n- IV_BAND_CHG_BEFVAL3\n- IV_BAND_CHG_AFTVAL3\n- IV_BAND_CHG_DT4\n- IV_BAND_CHG_BEFVAL4\n- IV_BAND_CHG_AFTVAL4\n\n#### Return Type:\nThe formula returns a numeric value representing the accrued leave or absence balance, along with arrays for adjustment values, adjustment dates, and adjustment types.\n\n#### Logic Summary:\n1. **Initialize Variables**: The formula starts by initializing various variables with default values, including dates, absence types, and employee details. It sets up arrays for tracking FTE (Full-Time Equivalent) changes and absence entries.\n   \n2. **Check Enrollment Date**: It checks if the plan enrollment start date matches a specific date ('2019/09/23') and if the accrual period start date is before the plan enrollment start date. If true, it sets the accrual to 0 and returns.\n\n3. **Determine Accrual Periods**: The formula then determines the number of band changes (changes in accrual rate) within the accrual period and identifies the dates and rates of these changes.\n\n4. **Calculate Accruals**: Based on the band changes, it calculates the accrued leave for each period between band changes, considering the absence entries that affect the accrual.\n\n5. **Adjust for Absences**: It adjusts the accrual for each period by considering absences that occurred during those periods, ensuring that leave is not accrued during periods of absence.\n\n6. **Final Accrual Calculation**: The formula calculates the final accrual by summing the accruals for each period, adjusting for FTE changes and ensuring the result is not negative.\n\n7. **Logging**: Throughout the process, it logs various values and calculations for auditing and debugging purposes.\n\n8. **Return Accrual**: Finally, the formula returns the calculated accrual value along with any necessary adjustments.\n\nThis summary provides a high-level overview of the FastFormula's logic, focusing on key steps and calculations involved in determining the accrued leave balance for an employee, taking into account their FTE, absences, and changes in accrual rates over time.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula is designed to determine the enrollment end date for an absence plan. The logic checks if the effective date plus one day is before the actual termination date. If it is, the enrollment end date is set to the effective date. Otherwise, it is set to one day before the effective date. write a  formula is used to ensure that the enrollment end date is correctly calculated based on the effective date and the termination date.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: PER_ASG_USER_PERSON_TYPE, PER_ASG_REL_ACTUAL_TERMINATION_DATE\n* **Input Values**: EFFECTIVE_DATE\n* **Return Type**: Date\n* **Logic Summary**: The formula determines an enrollment end date based on the effective date and actual termination date of an assignment. It starts by setting the effective date to either the provided date or a default value if not specified. Then, it checks if the day after the effective date is before the actual termination date. If true, it sets the enrollment end date to the effective date. Otherwise, it sets the enrollment end date to the day before the effective date. The formula returns this calculated enrollment end date.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the monthly accrual for an absence plan by considering band changes and excluding Unpaid, Maternity, Emergency, and Hajj Leave days. It first determines the balance of the annual leave plan at the end of the previous year. The accrual for the current period is then calculated, ensuring that it does not exceed 6 days. The formula returns the calculated accrual and any necessary adjustments. write a  ensures that the monthly accrual is accurately prorated based on band changes and restricted for the specified leave types.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used:** \n- per_asg_person_number\n- anc_abs_typ_name\n- anc_abs_pln_name\n- per_asg_rel_date_start\n- per_asg_grade_name\n- legislative_data_group_id\n- person_id\n- hr_assignment_id\n\n**Input Values:** \n- iv_accrual\n- iv_accrualperiodenddate\n- iv_accrualperiodstartdate\n- iv_planenrollmentstartdate\n- iv_planenrollmentenddate\n- iv_caledarenddate\n- iv_caledarstartdate\n\n**Return Type:** \nThe formula returns multiple values including an accrual amount, and potentially empty collections for adjustment values, dates, and types.\n\n**Logic Summary:** \n1. The formula starts by setting default values for several database items (DBIs) and input values, which will be used if actual values are not provided.\n2. It retrieves the legislative data group ID, a person's ID, and their hire date from the context or DBIs.\n3. The formula calculates the length of service in months from the hire date to the start of the accrual period.\n4. It then determines the previous year's end date based on the accrual period start date and fetches the annual leave plan balance for that date.\n5. The formula logs certain information including the person ID, previous year-end date, and the annual leave balance for that year.\n6. It calculates an accrual amount, which is the lesser of 6 or the annual leave balance for the previous year.\n7. Additional logging is performed to track the accrual amount.\n8. Finally, the formula returns the calculated accrual amount along with empty collections for adjustment values, dates, and types.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula is designed to validate annual leave requests for CIMB NIAGA employees. Here's the detailed calculation logic:\n\nProbation End Date Check: If the system date is after the probation end date, the leave request is valid. Otherwise, it is invalid, and an error message is returned.\n\nDecimal Duration Check: If the total duration of the leave request has a decimal part, the leave request is invalid, and an error message is returned.\n\nBlock Leave Validation: The formula checks for overlapping block leave entries and ensures that there are no subsequent block leave entries within one day of the current leave request. If there are, the leave request is invalid, and an error message is returned.\n\nNew Joiner Check: If the employee joined in April or later of the current year and the leave reason is \"Block Leave,\" the leave request is invalid, and an error message is returned.\n\nAge Check: If the employee is 54 years or older, the leave request is valid.\n\nTermination Date Check: If the employee has an actual termination date, the leave request is valid.\n\nGrade and Year Band Calculation: The formula calculates the grade band and year band based on the employee's grade and hire year.\n\nBlock Leave Accrual Calculation: The formula retrieves the block leave accrual value from a table based on the grade band and year band.\n\nCurrent and Previous Duration Calculation: The formula calculates the total duration of block leave taken so far and adds the current leave request duration to it.\n\nBlock Leave Accrual Check: If the total block leave duration exceeds the block leave accrual value, the leave request is valid. Otherwise, the formula checks the annual leave balance and ensures that the remaining balance is sufficient for the leave request. If not, the leave request is invalid, and an error message is returned.\n\nwrite a  ensures that the annual leave requests are validated based on probation end date, decimal duration, block leave rules, new joiner status, age, termination date, grade, and leave balance.\n\n***Instruction for the fastformula***: ### Summary of the FastFormula\n\n**DBI Values Used:**\n- `HR_ASSIGNMENT_ID`\n- `LEGISLATIVE_DATA_GROUP_ID`\n- `PERSON_ID`\n- `ABSENCE_ENTRY_ID`\n- `PER_ASG_DATE_PROBATION_END`\n- `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n- `PER_ASG_REL_DATE_START`\n- `PER_ASG_JOB_NAME`\n- `PER_ASG_GRADE_NAME`\n- `PER_ASG_PERSON_AGE`\n- `PER_ASG_EMPLOYMENT_CATEGORY`\n- `PER_ASG_PROJECTED_ASSIGNMENT_END_DATE`\n- `PER_REL_ACTUAL_TERMINATION_DATE`\n- `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n- `ANC_ABS_ENTRS_ABSENCE_REASON_ID`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n- `ANC_ABS_ENTRS_ATTRIBUTE1`\n- `ANC_ABS_ENTRS_END_DATE`\n- `ANC_ABS_ENTRS_START_DATE`\n- `ANC_ABS_ENTRS_DURATION`\n- `ANC_ABS_TYP_NAME`\n- `ANC_ABS_PLN_NAME`\n\n**Input Values:**\n- `IV_END_DATE` (date)\n- `IV_START_DATE` (date)\n- `IV_ATTRIBUTE_1` (text)\n- `IV_TOTALDURATION`\n- `IV_ABSENCE_REASON` (text)\n\n**Return Type:**\nThe formula returns a validation result (`VALID`) which is a character indicating whether the validation was successful or not, along with an error message if the validation fails.\n\n**Logic Summary:**\n\n1. **Initialization**: The formula starts by setting default values for various database items and input parameters. It then extracts specific context values such as `HR_ASSIGNMENT_ID`, `LEGISLATIVE_DATA_GROUP_ID`, and `PERSON_ID`.\n\n2. **Probation End Date Validation**: If the probation end date is provided and has not been defaulted, it checks if the system date is greater than the probation end date. If the system date is greater, it sets `VALID` to 'Y'; otherwise, it sets `VALID` to 'N' and returns an error message.\n\n3. **Absence Duration Validation**: It calculates the total duration of absence and checks if there's any decimal value in the duration. If there is, it sets `VALID` to 'N' and returns an error message due to a decimal error.\n\n4. **Absence Entry Validation**: The formula iterates through an array of absence entries, checking each entry's status and approval status. For each valid entry, it calculates the absence duration and checks for specific conditions related to the absence reason and dates.\n\n5. **Block Leave Validation**: It performs specific validations for 'Block Leave', checking if the leave is subsequent to another leave or if it's within a certain period after joining. If any of these conditions are not met, it sets `VALID` to 'N' and returns an appropriate error message.\n\n6. **Grade and Hire Year Validation**: The formula extracts the grade name and hire date from the context and performs validations based on the grade band and the year of hiring. It sets specific bands based on the grade name and hire year.\n\n7. **Annual Leave Accrual Validation**: It calculates the annual leave accrual based on the grade and year bands and checks if the current balance plus the duration of the leave does not exceed the accrued leave. If it does, or if other specific conditions are not met, it sets `VALID` to 'N' and returns an error message.\n\n8. **Final Validation and Return**: After all validations, the formula returns the `VALID` status along with an error message if `VALID` is 'N'. If all conditions are met, it returns `VALID` as 'Y'.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula is designed to validate annual leave requests for Cambodia employees. Here's the detailed calculation logic:\n\nProbation End Date Check: If the leave start date is before the probation end date, the formula calculates the earned leave days based on the initial balance and the number of completed months. If the requested leave duration exceeds the earned days, the leave request is invalid, and an error message is returned.\n\nOverlap Check: The formula checks if the leave request overlaps between two calendar years. If it does and the employee is not on a contract, the leave request is invalid, and an error message is returned.\n\nBalance Check: If the leave end date is within the current year and the remaining balance after the leave request is less than zero, the leave request is invalid, and an error message is returned.\n\nFuture Absence Check: If the leave reason is not \"Emergency Leave\" and the leave start date is more than two days in advance, the formula checks the next working day. If the next working day is after the leave start date, the leave request is invalid, and an error message is returned.\n\nHalf-Day Check: If the leave duration is not a multiple of 0.5, the leave request is invalid, and an error message is returned.\n\nCompulsory Leave Check: The formula checks if the leave reason is \"Compulsory Leave\" and the total duration is less than 5 days. If so, the leave request is invalid, and an error message is returned. If the leave end date is in the next year and the remaining balance for the next year is less than zero, the leave request is invalid, and an error message is returned. If the total duration is 5 days or more and the leave reason is not \"Compulsory Leave,\" the leave request is invalid, and a warning message is returned.\n\nwrite a  ensures that the annual leave requests are validated based on probation end date, overlap between calendar years, leave balance, future absence rules, half-day increments, and compulsory leave requirements.\n\n***Instruction for the fastformula***: Here is a summary of the FastFormula:\n\n**DBI Values Used:** \n- PER_ASG_DATE_PROBATION_END \n- PER_ASG_REL_DATE_START \n- PER_ASG_GRADE_NAME \n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE \n- IV_ATTRIBUTE_1 \n- PER_ASG_ACTION_CODE \n- PER_ASG_JOB_NAME \n- PER_ASG_USER_PERSON_TYPE \n- PER_ASG_EMPLOYMENT_CATEGORY \n- ANC_ABS_ENTRS_USER_MODE \n\n**Input Values:** \n- iv_start_date \n- iv_end_date \n- IV_CALEDARSTARTDATE \n- IV_CALEDARENDDATE \n- IV_TOTALDURATION \n- IV_ABSENCE_REASON \n- IV_ATTRIBUTE_1 \n\n**Return Type:** \nThe formula returns a boolean value (VALID) along with error messages and codes when the validation fails.\n\n**Logic Summary:** \nThis FastFormula is designed to validate and process absence requests. Here's a step-by-step breakdown of its logic:\n1. It starts by initializing various variables with default values from database items (DBIs) and input values.\n2. It checks if the user mode is 'ADMIN' or not. If not 'ADMIN', it retrieves the annual leave balance for the employee.\n3. It calculates the earned days based on the service months and the total duration of the absence.\n4. It checks if the absence start date is within the probation period and validates the earned days against the absence duration.\n5. It checks for overlap of absence dates with the current year's leave period and ensures the employee has sufficient leave balance.\n6. For non-'Emergency Leave' reasons, it checks the next working day's availability.\n7. It validates the absence duration to be in half-day increments and checks the compulsory leave rules.\n8. It checks if the absence extends into the next year and if there is sufficient leave balance for the next year.\n9. Based on these checks, it returns a boolean value (VALID) indicating whether the absence request is valid or not, along with error messages and codes if the request is invalid.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula is designed to validate annual leave requests for Cambodia employees. Here's the detailed calculation logic:\n\nProbation End Date Check: If the leave start date is before the probation end date, the formula calculates the earned leave days based on the initial balance and the number of completed months. If the requested leave duration exceeds the earned days, the leave request is invalid, and an error message is returned.\n\nOverlap Check: The formula checks if the leave request overlaps between two calendar years. If it does and the employee is not on a contract, the leave request is invalid, and an error message is returned.\n\nBalance Check: If the leave end date is within the current year and the remaining balance after the leave request is less than zero, the leave request is invalid, and an error message is returned.\n\nFuture Absence Check: If the leave reason is not \"Emergency Leave\" and the leave start date is more than two days in advance, the formula checks the next working day. If the next working day is after the leave start date, the leave request is invalid, and an error message is returned.\n\nHalf-Day Check: If the leave duration is not a multiple of 0.5, the leave request is invalid, and an error message is returned.\n\nCompulsory Leave Check: The formula checks if the leave reason is \"Compulsory Leave\" and the total duration is less than 5 days. If so, the leave request is invalid, and an error message is returned. If the leave end date is in the next year and the remaining balance for the next year is less than zero, the leave request is invalid, and an error message is returned. If the total duration is 5 days or more and the leave reason is not \"Compulsory Leave,\" the leave request is invalid, and a warning message is returned.\n\nwrite a  ensures that the annual leave requests are validated based on probation end date, overlap between calendar years, leave balance, future absence rules, half-day increments, and compulsory leave requirements.\n\n***Instruction for the fastformula***: **Summary**\n================\n\n### DBI Values Used\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_USER_PERSON_TYPE\n- PER_PER_PERSON_NUMBER\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n\n### Input Values\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n### Return Type\nThe formula returns a set of values including a validity flag (VALID), an error message, and in some cases, additional tokens or error codes, all of which are used to indicate the success or failure of the absence request based on various rules and conditions.\n\n### Logic Summary\nThe logic of this FastFormula can be broken down into several key steps:\n1. **Initialization**: It starts by setting default values for various database items (DBIs) and input parameters if they are not provided.\n2. **Context Setup**: The formula then sets up the necessary contexts for the HR assignment, person, and legislative data group to ensure that the correct data is being referenced.\n3. **Data Retrieval**: It retrieves various pieces of information such as the employee's grade name, employment category, and manager details.\n4. **Validation Checks**: The formula performs several validation checks:\n   - It checks for overlap of absence periods and ensures that the employee has sufficient annual leave balance for the requested absence period.\n   - It verifies if the absence request crosses the year boundary and if the employee has enough balance for the next year.\n   - For certain types of leaves (like compulsory leave), it checks the minimum duration requirement.\n5. **Calculations**: It performs calculations to determine the next working day, checks for pay availability, and validates the duration of the absence request to ensure it is in half-day increments.\n6. **Error Handling**: Based on the validation checks and calculations, the formula sets an error message and returns a validity flag indicating whether the absence request is valid or not. Specific error messages are generated for different failure scenarios, such as insufficient balance, overlap with existing absences, or failure to meet the minimum duration requirement for certain leave types.\n7. **Return**: Finally, the formula returns the validity flag, an error message if any, and in some cases, additional error codes or tokens with specific details about the error.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula is designed to validate sick leave requests for Cambodia employees. Here's the detailed calculation logic:\n\nDate Check: If the leave start date is before September 23, 2019, the leave request is invalid, and an error message is returned.\n\nManager Status Check: If the manager's assignment status is not active or the manager ID is zero, the leave request is invalid, and an error message is returned.\n\nSick Leave Limit: The formula sets a sick leave limit of 14 days for employees with grades starting with 'C' and 180 days for others. If the requested leave duration exceeds write a  limit, the leave request is invalid, and an error message is returned.\n\nFuture Absence Check: If the leave start date is after the effective date plus one day, the leave request is invalid, and an error message is returned.\n\nShift Check: If the employee is on a 2-shift, 3-shift, or 7-days banking schedule and the leave duration is not a whole number, the leave request is invalid, and an error message is returned.\n\nHalf-Day Check: If the leave duration is not a multiple of 0.5, the leave request is invalid, and an error message is returned.\n\nMedical Leave Without Certificate: If the leave reason is \"Medical Leave Without Certificate\" and the duration is more than one day, the leave request is invalid, and an error message is returned.\n\nSick Leave Utilization Check: The formula checks the total sick leave days taken so far in the current year. If the total sick leave days plus the requested duration exceed the sick leave limit, the leave request is invalid, and an error message is returned.\n\nConsecutive Sick Leave Check: If the leave reason is \"Medical Leave Without Certificate\" and the total duration of consecutive sick leave days exceeds three days, the leave request is invalid, and an error message is returned.\n\nOverlap Check: The formula checks if the leave request overlaps between two calendar years. If it does and the employee is not on a contract, the leave request is invalid, and an error message is returned.\n\nMedical Certificate Attachment: If the leave reason is not \"Medical Leave Without Certificate\" and the duration is one day or less, the formula checks if a medical certificate is attached. If not, the leave request is invalid, and an error message is returned.\n\n***Instruction for the fastformula***: **DBI Values Used:**\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_REASON_ID\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_GRADE_NAME\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_ASG_BARGAINING_UNIT_CODE_NAME\n- PER_PER_PERSON_NUMBER\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n- IV_ATTRIBUTE_2\n\n**Return Type:**\nThe formula returns a validation result (VALID) which is a string indicating whether the input is valid or not, along with an error message if the input is invalid.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by initializing various default values for database items (DBIs) and input values. It sets up dates, absence types, and employee details.\n2. **Date and Absence Type Validation**: It checks if the start date is before a specific cut-off date (September 23, 2019) and validates the manager's assignment status and the user's mode.\n3. **Absence Limit Check**: It calculates the total duration of the absence and checks if it exceeds the allowed limit based on the employee's grade and employment category.\n4. **Half-Day Absence Validation**: For certain shifts, it validates if the absence duration is a whole number or a multiple of half days.\n5. **Medical Certificate Requirement**: It checks if a medical certificate is required for the absence and if the absence reason is 'Medical Leave Without Certificate', ensuring it does not exceed a certain duration.\n6. **Overlap Check**: It verifies if the absence period overlaps with existing absences within the same year and ensures that for contract categories, there are no overlaps.\n7. **Medical Certificate Attachment Check**: For absences not exceeding one day and not due to 'Medical Leave Without Certificate', it checks if a medical certificate is attached.\n8. **Return Validation Result**: Finally, it returns a validation result indicating whether the absence request is valid or not, along with an error message if the request is invalid.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula is designed to validate Brought Forward Leave (BFL) requests for Cambodia employees. Here's the detailed calculation logic:\n\nBalance Check: The formula checks if the employee has a balance in either the \"Brought Forward Leave Plan No Expiry\" or the \"Brought Forward Leave Plan 3 Years Expiry\" (including Year 1, Year 2, and Year 3). If the balance is zero in both plans, the leave request is invalid, and an error message is returned.\n\nOverlap Check: The formula checks if the leave request overlaps between two calendar years. If it does, the leave request is invalid, and an error message is returned.\n\nFuture Absence Check: If the leave reason is not \"Emergency Leave\" and the leave start date is more than two days in advance, the formula checks the next working day. If the next working day is after the leave start date, the leave request is invalid, and an error message is returned.\n\nShift and Grade Check: If the employee is on a 2-shift, 3-shift, or 7-days banking schedule and the grade does not end with 'C', or if the grade starts with '32' or '33' and the union is \"National Union of Bank Employees (NUBE)\", and the leave duration is not a whole number, the leave request is invalid, and an error message is returned.\n\n***Instruction for the fastformula***: **DBI Values Used:** \n- per_asg_date_probation_end\n- per_asg_grade_name\n- global_pay_interface_extraction_date\n- iv_attribute_1\n- iv_absence_reason\n- anc_abs_entrs_user_mode\n- per_asg_manager_user_person_id\n- per_per_person_number\n- per_asg_attribute7\n- per_asg_bargaining_unit_code_name\n\n**Input Values:** \n- iv_start_date\n- iv_end_date\n- iv_caledarstartdate\n- iv_caledarenddate\n- iv_totalduration\n- iv_absence_reason\n- iv_attribute_1\n\n**Return Type:** \nThe formula returns a validation result, which is a string indicating whether the absence request is valid ('Y') or not ('N'), along with an error message if the request is invalid.\n\n**Logic Summary:** \n1. The formula starts by setting default values for various database items (DBIs) and input values.\n2. It then initializes several local variables, including validation flags, balance values, and dates, based on the input values and DBIs.\n3. The formula checks if the user has sufficient leave balance by comparing the leave balances (`l_bfl_noexp_acrl_balance` and `l_bfl_3y_acrl_balance`) to zero.\n4. If the balances are sufficient, it proceeds to check for overlapping absence periods by comparing the absence start and end dates with the year's begin and end dates.\n5. If there's no overlap, it checks if the absence reason is 'Emergency Leave'. If not, it calculates the next working day and checks for pay availability on that day.\n6. If pay availability is less than 1, it increments the next working day until it finds a day with pay availability.\n7. The formula then checks if the calculated next working day falls on or after the absence start date. If so, it returns an error.\n8. Finally, it checks for specific conditions related to shift and union rules and returns an error if the absence duration is not a whole number under certain conditions.\n9. If all checks pass, the formula returns a validation result indicating that the absence request is valid. Otherwise, it returns an error message.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula is designed to validate leave requests for CIMB NIAGA employees based on specific conditions. Here's the detailed calculation logic:\n\nDuration Check: If the leave is categorized as \"Outside Town/Country,\" the maximum allowed duration is 5 days. If it is categorized as \"Within Town/Country,\" the maximum allowed duration is 2 days. If the requested duration exceeds these limits, the leave request is invalid, and an error message is returned.\n\nBlock Leave Validation: The formula checks for overlapping block leave entries and ensures that there are no subsequent block leave entries within one day of the current leave request. If there are, the leave request is invalid, and an error message is returned.\n\nNew Joiner Check: If the employee joined in April or later of the current year and the leave reason is \"Block Leave,\" the leave request is invalid, and an error message is returned.\n\nAge Check: If the employee is 54 years or older and the leave reason is \"Block Leave,\" the leave request is invalid, and an error message is returned.\n\n***Instruction for the fastformula***: ### Summary of Provided FastFormula\n\n#### DBI Values Used:\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- PER_ASG_DATE_PROBATION_END\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_START_DATE\n- IV_END_DATE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_ABSENCE_REASON_ID\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ATTRIBUTE1\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_DURATION\n- IV_TOTALDURATION\n- PER_ASG_JOB_NAME\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- ANC_ABS_ENTRS_PER_ABSENCE_ENTRY_ID\n- PER_ASG_PERSON_AGE\n- IV_ATTRIBUTE_1\n- IV_ATTRIBUTE_2\n- IV_ABSENCE_REASON\n\n#### Input Values:\n- IV_END_DATE\n- IV_START_DATE\n- IV_ATTRIBUTE_1\n- IV_ATTRIBUTE_2\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n#### Return Type:\nThe formula returns two values: `VALID` and `ERROR_MESSAGE`, where `VALID` is a character indicating whether the validation is successful or not, and `ERROR_MESSAGE` is a text that contains the specific error message if the validation fails.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by setting default values for various database items (DBIs) and input parameters. It also initializes several local variables that will be used throughout the formula.\n2. **Validation Based on Location and Duration**: It checks the value of `IV_ATTRIBUTE_1` (which seems to represent the location of absence) and `IV_TOTALDURATION`. Depending on whether the absence is within or outside the town/country, it validates if the total duration exceeds certain limits (5 days for outside, 2 days for within). If the duration exceeds these limits, it sets `VALID` to 'N' and returns an appropriate error message.\n3. **Absence Entry Processing**: It iterates over an array of absence entries (`ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`). For each entry, if the absence status is not withdrawn and the approval status is not denied, and if the absence reason matches a specific ID, it accumulates the absence duration and updates previous and next dates based on the start and end dates of the absence entries.\n4. **Block Leave Validation**: If the absence reason is 'Block Leave', it checks for subsequent block leaves by comparing dates. If there are any gaps between the end of one block leave and the start of another, it validates the pay availability for those days. If the pay availability exceeds 1 day, it sets `VALID` to 'N' and returns an error message.\n5. **New Join and Age Validation for Block Leave**: For 'Block Leave', it also checks if the hire date is within the same year as the block leave and if the employee's age is 54 or above. If either condition is true, it sets `VALID` to 'N' and returns an appropriate error message.\n6. **Final Return**: The formula returns `VALID` and `ERROR_MESSAGE`, indicating whether the validation was successful and providing an error message if it was not.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula is designed to handle the accrual of annual leave for partial periods. The logic is straightforward: it takes the input value for accrual and returns it as the output. write a  formula is used to ensure that the correct amount of leave is accrued based on the provided input value\n\n***Instruction for the fastformula***: Based on the provided FastFormula, here is a structured summary:\n\n* **DBI Values Used**: None\n* **Input Values**: IV_ACCRUAL (accrual)\n* **Return Type**: The formula returns an accrual value\n* **Logic Summary**: The formula takes an input value for accrual and directly returns the same accrual value without any modifications or calculations. It is essentially a pass-through function where the input accrual value is returned as the output.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula is designed to validate voluntary leave requests for CIMB MY employees. Here's the detailed calculation logic:\n\nDate Check: If the leave start date is before September 23, 2019, the leave request is invalid, and an error message is returned.\n\nUser Mode and Manager Check: The formula checks if the user mode is not 'ADMIN' and if the person number matches the found person number or if the manager ID matches the person ID. If these conditions are met, the formula proceeds with the validation.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: GLOBAL_PAY_INTERFACE_EXTRACTION_DATE, ANC_ABS_ENTRS_USER_MODE, PER_ASG_MANAGER_USER_PERSON_ID, PER_PER_PERSON_NUMBER\n* **Input Values**: iv_start_date, iv_end_date, IV_CALEDARSTARTDATE, IV_CALEDARENDDATE, IV_TOTALDURATION, IV_ABSENCE_REASON\n* **Return Type**: The formula returns a validation status (VALID) along with an error message, indicating whether the input data is valid or not.\n* **Logic Summary**: \n    1. The formula initializes variables with default values and input parameters.\n    2. It retrieves various context values, such as effective date, HR assignment ID, person ID, and absence entry ID.\n    3. If the person number is not null, it sets a flag to 'N'.\n    4. The formula then changes contexts based on HR assignment ID and effective date to retrieve the manager ID.\n    5. It changes contexts again to retrieve the user mode based on the effective date and absence entry ID.\n    6. The formula checks if the user mode is not 'ADMIN' and if the person number matches the input person number or if the manager ID matches the person ID.\n    7. If the start date is prior to a specific date ('2019/09/23'), it sets the validation status to 'N', sets an error message, and returns the validation status along with the error message.\n    8. If none of the above conditions are met, the formula returns the validation status. \n\nThis summary provides a concise overview of the formula's logic, DBI values used, input values, and return type, without including the actual code.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the duration of an absence type by looping through each day from the start date to the end date. For each day, it checks if it is the last day of the absence period. If it is, the formula calculates the duration based on the start and end times, ensuring that the end time is greater than the start time. It then calculates the duration in hours.\n\nNext, the formula checks for published shift details for the current day. If there are any, it calculates the total assigned hours for the day and adds it to the total duration. If there are no published shift details, the formula checks for assigned shift details and calculates the total assigned hours for the day, adding it to the total duration.\n\nThe formula then checks if the total assigned hours for the day are less than 4 hours. If so, it adds 0 to the total duration. If the total assigned hours are greater than or equal to 4 hours, it adds 1 to the total duration.\n\nFinally, the formula sums up the durations for each day in the absence period to calculate the final duration. write a  ensures that the duration of the absence type is accurately calculated based on the work schedule, roster, and half-day increments.\n\n\n***Instruction for the fastformula***: ### Summary of the Oracle FastFormula\n\n#### DBI Values Used:\n- `PERSON_ID`\n- `HR_ASSIGNMENT_ID`\n- `ABSENCE_TYPE_ID`\n- Various default values for accrual periods, published and assigned shifts, workweek shifts, availability, and other relevant variables.\n\n#### Input Values:\n- `IV_ACCRUALPERIODENDDATE`\n- `IV_ACCRUALPERIODSTARTDATE`\n- `IV_TERM_ID`\n- `IV_START_DATE`\n- `IV_END_DATE`\n- `IV_START_TIME`\n- `IV_TOTALDURATION`\n- `IV_START_DURATION`\n- `IV_END_DURATION`\n- `IV_ABS_START_DURATION`\n- `IV_ABS_END_DURATION`\n- `IV_END_TIME`\n\n#### Return Type:\nThe formula returns a duration value, calculated based on various inputs and database items, representing the total duration of a certain period.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by initializing various variables with default or input values. This includes dates, times, durations, and flags.\n2. **Date Loop**: It then enters a loop that iterates over each day from the start date to the end date.\n3. **Shift Details Processing**: For each day, it checks if there are published or assigned shift details. If so, it calculates the total assigned hours for that day based on the shift details.\n4. **Duration Calculation**: It then calculates an entry duration based on the start and end times provided as inputs. If the total assigned hours for the day are less than 4, it may add 0 to the total duration; otherwise, it adds a fraction or whole number of hours based on the ratio of entry duration to total assigned hours.\n5. **Context Switching**: The formula switches contexts (assignment, dates) as necessary to retrieve and process the shift details accurately.\n6. **Iteration and Accumulation**: This process is repeated for each day in the specified range, accumulating the total duration.\n7. **Return**: Finally, the formula returns the calculated total duration.\n\nThe logic is designed to accurately calculate durations based on complex rules involving shifts, assignments, and time, making it useful for applications requiring detailed time and attendance tracking.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula is designed to validate leave requests for CIMB NIAGA employees based on specific conditions. Here's the business logic it addresses:\n\nBlock Leave Validation: The formula checks for overlapping block leave entries and ensures that there are no subsequent block leave entries within one day of the current leave request. If there are, the leave request is invalid, and an error message is returned.\n\nNew Joiner Check: If the employee joined in April or later of the current year and the leave reason is \"Block Leave,\" the leave request is invalid, and an error message is returned.\n\nAge Check: If the employee is 54 years or older and the leave reason is \"Block Leave,\" the leave request is invalid, and an error message is returned.\n\nLeave Balance Check: The formula calculates the total duration of block leave taken so far and adds the current leave request duration to it. If the total block leave duration exceeds the block leave accrual value, the leave request is invalid, and an error message is returned.\n\n***Instruction for the fastformula***: **Summary of FastFormula**\n\n* **DBI Values Used**: \n  - `PER_ASG_DATE_PROBATION_END`\n  - `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n  - `IV_START_DATE`\n  - `IV_END_DATE`\n  - `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n  - `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n  - `ANC_ABS_ENTRS_ABSENCE_REASON_ID`\n  - `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n  - `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n  - `ANC_ABS_TYP_NAME`\n  - `ANC_ABS_EntRS_ATTRIBUTE1`\n  - `ANC_ABS_ENTRS_END_DATE`\n  - `ANC_ABS_ENTRS_START_DATE`\n  - `ANC_ABS_ENTRS_DURATION`\n  - `IV_TOTALDURATION`\n  - `PER_ASG_JOB_NAME`\n  - `PER_ASG_REL_DATE_START`\n  - `PER_ASG_GRADE_NAME`\n  - `ANC_ABS_ENTRS_PER_ABSENCE_ENTRY_ID`\n  - `PER_ASG_PERSON_AGE`\n\n* **Input Values**: \n  - `IV_END_DATE`\n  - `IV_START_DATE`\n  - `IV_ATTRIBUTE_1`\n  - `IV_TOTALDURATION`\n  - `IV_ABSENCE_REASON`\n\n* **Return Type**: The formula returns a validation result indicated by the variable `VALID`, which is of type text, along with an `ERROR_MESSAGE` when validation fails.\n\n* **Logic Summary**: \n  1. **Initialization**: The formula starts by initializing various default values for dates, IDs, and flags. It sets the context for legislative data group, person ID, and HR assignment ID.\n  2. **Date Calculations**: It calculates specific start and end dates based on the input `IV_START_DATE` to determine the year for processing.\n  3. **Loop Through Absence Entries**: The formula loops through an array of absence entry IDs (`ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`) and for each entry, it checks the absence status, approval status, and reason.\n  4. **Absence Reason Checks**: If the absence reason matches a specific ID (300000582652531), it calculates the absence duration within the specified date range and updates previous and next dates based on the absence start and end dates.\n  5. **Validation for Block Leave**: For absence reasons related to 'Block Leave', it performs validations such as checking if the leave spans across more than one day before or after the specified dates and returns an error if the conditions are not met.\n  6. **Hire Date and Age Checks**: It retrieves the hire date and age of the person and checks if the hire date is within the same year as the end date for 'Block Leave' reasons, returning an error if the person is new.\n  7. **Age Limit Check**: For 'Block Leave', it also checks if the person's age is 54 or above and returns an error if true.\n  8. **Final Validation Return**: Finally, the formula returns `VALID` as 'Y' if all checks pass; otherwise, it returns 'N' along with an appropriate error message.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula is designed to validate compassionate leave requests for CIMB NIAGA employees based on specific conditions. Here's the business logic it addresses:\n\nCompassionate Leave Duration: The formula sets maximum allowable durations for compassionate leave based on the relationship to the deceased and whether the leave is taken within or outside the town/country. For example, for the death of a spouse, parent, spouse's parent, or child, the maximum duration is 8 days if outside town/country and 5 days if within town/country. Similar rules apply for other relationships with varying durations.\n\nBlock Leave Validation: The formula checks for overlapping block leave entries and ensures that there are no subsequent block leave entries within one day of the current leave request. If there are, the leave request is invalid, and an error message is returned.\n\nNew Joiner Check: If the employee joined in April or later of the current year and the leave reason is \"Block Leave,\" the leave request is invalid, and an error message is returned.\n\nAge Check: If the employee is 54 years or older and the leave reason is \"Block Leave,\" the leave request is invalid, and an error message is returned.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: \n  - ANC_ABS_TYP_NAME\n  - ANC_ABS_PLN_NAME\n  - PER_ASG_DATE_PROBATION_END\n  - GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n  - IV_START_DATE\n  - IV_END_DATE\n  - ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - ANC_ABS_ENTRS_ABSENCE_REASON_ID\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  - ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  - ANC_ABS_ENTRS_ATTRIBUTE1\n  - ANC_ABS_ENTRS_END_DATE\n  - ANC_ABS_ENTRS_START_DATE\n  - ANC_ABS_ENTRS_DURATION\n  - IV_TOTALDURATION\n  - PER_ASG_JOB_NAME\n  - PER_ASG_REL_DATE_START\n  - PER_ASG_GRADE_NAME\n  - ANC_ABS_ENTRS_PER_ABSENCE_ENTRY_ID\n  - PER_ASG_PERSON_AGE\n  - IV_ATTRIBUTE_1\n  - IV_ATTRIBUTE_2\n  - IV_ABSENCE_REASON\n\n* **Input Values**: \n  - IV_END_DATE\n  - IV_START_DATE\n  - IV_ATTRIBUTE_1\n  - IV_ATTRIBUTE_2\n  - IV_TOTALDURATION\n  - IV_ABSENCE_REASON\n\n* **Return Type**: The formula returns a validation result, which is a string indicating whether the input values are valid or not, along with an error message if the validation fails.\n\n* **Logic Summary**: \n  1. The formula starts by setting default values for various database items (DBIs) and input values.\n  2. It then checks the input values against specific conditions based on the absence reason, attribute values, and duration.\n  3. For each condition, it checks if the total duration exceeds a certain limit and sets the validation result accordingly.\n  4. If the validation result is 'N', it sets an error message and returns the result.\n  5. The formula also checks for block leave scenarios, including subsequent block leaves, and validates the input values accordingly.\n  6. Additionally, it checks the hire date and age of the employee and validates the block leave request based on these values.\n  7. Finally, the formula returns the validation result, which indicates whether the input values are valid or not, along with an error message if the validation fails.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula is designed to determine the enrollment start date for an absence plan based on the employee's hire date. The business logic it addresses includes:\n\nHire Date-Based Enrollment: The formula sets the enrollment start date to the employee's hire date by default.\n\nSpecific Start Date Check: If a specific start date (in write a  case, January 1, 2020) is later than the hire date, the formula updates the enrollment start date to write a  specific date.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: PER_ASG_REL_DATE_START\n* **Input Values**: None (uses a default date value)\n* **Return Type**: Date\n* **Logic Summary**: The formula determines an enrollment start date based on the comparison of a default hire date and a specific start date (January 1, 2020). It first checks if the specific start date is later than or equal to the hire date. If this condition is met, it uses the specific start date as the enrollment start date. Otherwise, it defaults to the hire date as the enrollment start date. The formula returns this determined enrollment start date.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula is designed to calculate the annual leave accrual for CIMB ID employees based on various factors. Here's the business logic it addresses:\n\nAccrual Calculation: The formula calculates the annual leave accrual based on the employee's hire date, grade, and employment category. It determines the accrual start and end dates, and calculates the monthly accrual rate.\n\nProbation Period: The formula considers a probation period of three months from the hire date. If the employee is still within the probation period, the accrual is adjusted accordingly.\n\nEmployment Category: The formula differentiates between permanent, contract, and other employment categories. It adjusts the accrual calculation based on the specific rules for each category.\n\nLeave Balance Carryover: The formula checks for any carryover leave balance from the previous year. It calculates the carryover amount and adjusts the current year's accrual accordingly.\n\nLeave Adjustments: The formula accounts for various adjustments such as approved absences, collective leave, and special adjustments. It calculates the impact of these adjustments on the total accrual.\n\nGrade and Year Band: The formula determines the employee's grade and year band based on their hire date and current year. It uses write a  information to look up the appropriate accrual rate from a predefined table.\n\nContract End Date: For contract employees, the formula considers the projected assignment end date and adjusts the accrual calculation if the contract ends within the accrual period.\n\nSpecial Adjustments: The formula includes logic to handle special adjustments such as collective leave and other specific conditions that may affect the accrual.\n\n***Instruction for the fastformula***: ### Summary of the FastFormula\n\n#### DBI Values Used:\n- PER_REL_ACTUAL_TERMINATION_DATE\n- PER_ASG_PROJECTED_ASSIGNMENT_END_DATE\n- PER_ASG_REL_ADJUSTED_SVC_DATE\n- BASE_SENIORITY_DATE\n- PER_SENDT_F_V3_SENIORITY_DATE\n- PER_SENDT_F_V3_SENIORITY_DATE_CODE\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_ACCRUALPERIODENDDATE\n- IV_EVENT_DATES\n- IV_ACCRUAL_VALUES\n- PER_ASG_PERSON_NUMBER\n- PER_ASG_JOB_NAME\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- IV_ACCRUAL\n- ABS_EXT_ACR_ENT_PER_ACCRUAL_ENTRY_ID\n- ABS_EXT_ACR_ENT_PER_ABSENCE_ENTRY_ID\n- ABS_EXT_ACR_ENT_TYPE\n- ABS_EXT_ACR_ENT_PROCD_DATE\n- ABS_EXT_ACR_ENT_VALUE\n- ABS_EXT_ACR_ENT_PL_ID\n- PER_ASG_EMPLOYMENT_CATEGORY\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n\n#### Input Values:\n- IV_ACCRUAL\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_ACCRUALPERIODENDDATE\n\n#### Return Type:\nThe formula returns multiple values including `accrual`, `adjustmentvalues`, `adjustmentdates`, and `adjustmenttypes`, which are related to the calculation of leave accrual and adjustments for employees.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by setting default values for various database items (DBIs) such as dates and fiscal year. It also defines input values that will be used in the calculation.\n2. **Context Setting**: It sets the context for the HR assignment, person, and legislative data group to get relevant information.\n3. **Date Calculations**: It calculates key dates such as the actual accrual start and end dates, probation start date, and checks for conditions like hire year and contract end dates.\n4. **Grade and Year Band Determination**: Based on the employment category, it determines the grade name, year band, and annual leave accrual.\n5. **Accrual Calculation**: It calculates the accrual amount based on the service months, annual leave entitlement, and adjusts for fractions of a month.\n6. **Carryover and Expiry Logic**: For certain conditions, it applies carryover and expiry rules to the accrual, considering previous years' data and specific event dates.\n7. **Adjustment Calculations**: The formula computes adjustments for various scenarios, including half-year and full-year expiries, and collective leave adjustments based on table values.\n8. **Return Accrual and Adjustments**: Finally, it returns the calculated accrual and adjustments along with their respective dates and types.\n\nThis summary captures the core logic and components of the FastFormula, detailing how it calculates leave accrual and adjustments for employees based on their employment category, service period, and other factors.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula is designed to validate annual leave requests for CIMB UK employees based on specific conditions. Here's the business logic it addresses:\n\n1. **Probation Period Check**: If the leave start date is within the probation period, the formula calculates the earned leave days based on the initial balance and the number of completed months. If the requested leave duration exceeds the earned days, the leave request is invalid, and an error message is returned.\n\n2. **Overlap Check**: The formula checks if the leave request overlaps between two calendar years. If it does and the employee is not on a contract, the leave request is invalid, and an error message is returned.\n\n3. **Balance Check**: If the leave end date is within the current year and the remaining balance after the leave request is less than zero, the leave request is invalid, and an error message is returned.\n\n4. **Future Absence Check**: If the leave reason is not \"Emergency Leave\" and the leave start date is less than one day from the current date, the leave request is invalid, and an error message is returned.\n\n5. **Emergency Leave Remark**: If the leave reason is \"Emergency Leave\" and no remark is provided, the leave request is invalid, and an error message is returned.\n\n6. **Half-Day Check**: If the leave duration is not a multiple of 0.5, the leave request is invalid, and an error message is returned.\n\n7. **Compulsory Leave Check**: The formula sets minimum duration requirements for compulsory leave based on the employee's grade. If the leave reason is \"Compulsory Leave\" and the total duration is less than the minimum requirement, the leave request is invalid, and an error message is returned. If the leave end date is in the next year and the remaining balance for the next year is less than zero, the leave request is invalid, and an error message is returned. If the total duration is equal to or more than the compulsory leave requirement and the leave reason is not \"Compulsory Leave,\" the leave request is invalid, and a warning message is returned.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: \n  - PER_ASG_DATE_PROBATION_END\n  - PER_ASG_REL_DATE_START\n  - PER_ASG_GRADE_NAME\n  - GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n  - IV_ATTRIBUTE_1\n  - PER_ASG_ACTION_CODE\n  - PER_ASG_JOB_NAME\n  - PER_ASG_USER_PERSON_TYPE\n  - PER_ASG_EMPLOYMENT_CATEGORY\n  - ANC_ABS_ENTRS_USER_MODE\n  - PER_ASG_MANAGER_USER_PERSON_ID\n  - PER_PER_PERSON_NUMBER\n  - PER_ASG_ATTRIBUTE7\n  - PER_ASG_BARGAINING_UNIT_CODE_NAME\n\n* **Input Values**:\n  - iv_start_date\n  - iv_end_date\n  - IV_CALEDARSTARTDATE\n  - IV_CALEDARENDDATE\n  - IV_TOTALDURATION\n  - IV_ABSENCE_REASON\n  - IV_ATTRIBUTE_1\n\n* **Return Type**: The formula returns a validation result, which includes a boolean value (VALID) indicating whether the input data is valid, an error message (ERROR_MESSAGE), an error code (ERROR_CODE), and potentially token names and values. The return type is primarily focused on validation feedback.\n\n* **Logic Summary**: \n  1. The formula initializes various variables based on provided defaults and input values, setting up the context for validation.\n  2. It checks the user's eligibility to take a specific type of leave, considering factors such as their employment category, job name, and grade.\n  3. The formula calculates the earned leave days based on the employee's service months and compares it with the requested leave duration.\n  4. It validates the leave request against several rules, including:\n     - Sufficient leave balance.\n     - Minimum duration requirements based on the employee's grade and leave type.\n     - Overlap with other leave periods.\n     - Adherence to company policies on compulsory leave and emergency leave.\n     - Proper entry of absence reasons and remarks.\n  5. Based on these validations, the formula returns a validation result, which may include error messages or warnings, guiding the user to correct their leave request if necessary.\n  6. The formula also handles specific scenarios such as probationary periods, different types of leave (e.g., compulsory, emergency), and ensures that leave durations and dates align with company policies and legal requirements.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula is designed to validate leave requests for CIMB NIAGA employees based on specific conditions. Here's the business logic it addresses:\n\nDuration Check: The formula sets maximum allowable durations for leave based on whether the leave is taken within or outside the town/country. For example, if the leave is categorized as \"Outside Town/Country,\" the maximum allowed duration is 9 days. If it is categorized as \"Within Town/Country,\" the maximum allowed duration is 6 days. If the requested duration exceeds these limits, the leave request is invalid, and an error message is returned.\n\nBlock Leave Validation: The formula checks for overlapping block leave entries and ensures that there are no subsequent block leave entries within one day of the current leave request. If there are, the leave request is invalid, and an error message is returned.\n\nNew Joiner Check: If the employee joined in April or later of the current year and the leave reason is \"Block Leave,\" the leave request is invalid, and an error message is returned.\n\nAge Check: If the employee is 54 years or older and the leave reason is \"Block Leave,\" the leave request is invalid, and an error message is returned.\n\nwrite a  ensures that the leave requests are validated based on duration, block leave rules, new joiner status, and age.\n\n***Instruction for the fastformula***: Here is a summary of the provided Oracle FastFormula:\n\n**DBI Values Used:** \n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_ABSENCE_REASON_ID\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ATTRIBUTE1\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_DURATION\n- PER_ASG_DATE_PROBATION_END\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_START_DATE\n- IV_END_DATE\n- PER_ASG_JOB_NAME\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- ANC_ABS_ENTRS_PER_ABSENCE_ENTRY_ID\n- PER_ASG_PERSON_AGE\n- HR_ASSIGNMENT_ID\n- LEGISLATIVE_DATA_GROUP_ID\n- PERSON_ID\n- ABSENCE_ENTRY_ID\n\n**Input Values:**\n- IV_END_DATE\n- IV_START_DATE\n- IV_ATTRIBUTE_1\n- IV_ATTRIBUTE_2\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type:** \nThe formula returns a character value indicating validation status ('Y' or 'N') along with an error message if validation fails.\n\n**Logic Summary:** \nThis FastFormula validates absence entries based on various conditions. It starts by setting default values for several database items and input parameters. It then checks the type of absence ( Outside Town/Country or Within Town/Country) and validates the total duration of absence against predefined limits. If the absence reason is 'Block Leave', it checks for subsequent block leave entries and ensures that there are no gaps or overlaps. The formula also verifies the age of the person and the hire date to enforce specific rules for new joiners and individuals above a certain age. If any validation fails, it returns an error message along with a failure status ('N'). If all checks pass, it returns a success status ('Y'). The formula uses various functions like GET_CONTEXT, CHANGE_CONTEXTS, TO_DATE, and ADD_DAYS to manipulate dates and retrieve relevant data from the database. It iterates through absence entries, accumulates absence durations, and applies rules based on the absence reason, start and end dates, and personnel details.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula is designed to validate unpaid leave requests for CIMB NIAGA employees based on specific conditions. Here's the business logic it addresses:\n\nDuration Check: The formula sets maximum allowable durations for unpaid leave based on the reason for the leave. For example, if the leave reason is \"UP_ON DUTY,\" \"UP_PREGNANCY MEDICATION,\" \"UP_PROLONGED ILLNESS FAMILY,\" \"PILGRIMAGE,\" \"UP_PROLONGED_ILLNESS,\" or \"UP_FURTHER EDUCATION,\" the maximum allowed duration is 180 days. If the leave reason is \"UP_OTHER,\" the maximum allowed duration is 365 days. If the leave reason is \"JEDA KONTRAK,\" the maximum allowed duration is 31 days. If the requested duration exceeds these limits, the leave request is invalid, and an error message is returned.\n\nBlock Leave Validation: The formula checks for overlapping block leave entries and ensures that there are no subsequent block leave entries within one day of the current leave request. If there are, the leave request is invalid, and an error message is returned.\n\nNew Joiner Check: If the employee joined in April or later of the current year and the leave reason is \"Block Leave,\" the leave request is invalid, and an error message is returned.\n\nAge Check: If the employee is 54 years or older and the leave reason is \"Block Leave,\" the leave request is invalid, and an error message is returned.\n\n***Instruction for the fastformula***: Here is the summary of the provided FastFormula:\n\n**DBI Values Used:** \n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- PER_ASG_DATE_PROBATION_END\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_START_DATE\n- IV_END_DATE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_ABSENCE_REASON_ID\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_ATTRIBUTE1\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_DURATION\n- IV_TOTALDURATION\n- PER_ASG_JOB_NAME\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- ANC_ABS_ENTRS_PER_ABSENCE_ENTRY_ID\n- PER_ASG_PERSON_AGE\n- IV_ATTRIBUTE_1\n- IV_ATTRIBUTE_2\n- IV_ABSENCE_REASON\n\n**Input Values:** \n- IV_END_DATE\n- IV_START_DATE\n- IV_ATTRIBUTE_1\n- IV_ATTRIBUTE_2\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type:** \nThe formula returns a validation result, which is a string indicating whether the input values are valid or not, along with an error message if the validation fails.\n\n**Logic Summary:** \nThe formula validates absence or leave requests based on various conditions. Here's a step-by-step breakdown:\n1. **Initialization**: It starts by setting default values for various database items and input parameters.\n2. **Validation Based on Attributes**: It checks the value of `IV_ATTRIBUTE_2` and applies different rules based on its value. For example, if `IV_ATTRIBUTE_2` is 'UP_ON DUTY', 'UP_PREGNANCY MEDICATION', etc., it checks if `IV_TOTALDURATION` exceeds 180 days and returns an error if it does.\n3. **Loop Through Absence Entries**: It loops through an array of absence entries (`ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`) and checks each entry's status and approval status. If an entry is not withdrawn or denied, it calculates the absence duration.\n4. **Date and Age Checks**: It performs various date checks, including comparing the start and end dates of the absence period with the hire date and the current date. It also checks the age of the person.\n5. **Specific Leave Type Checks**: For 'Block Leave', it checks if there are gaps between the end of one leave period and the start of another and returns an error if such gaps exist.\n6. **Final Validation**: It returns a validation result, which is either 'Y' (valid) or 'N' (not valid), along with an error message if the validation fails. The formula also checks for other conditions, such as the age of the person and the hire date, and returns errors if these conditions are not met.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula is designed to calculate the duration of an absence type, specifically for half-day durations, considering various work schedules and rosters. Here's the business logic it addresses:\n\nAccurate Duration Calculation: The formula ensures that the duration of an absence is calculated accurately based on the start and end times, taking into account the specific work schedules and rosters of the employee.\n\nHalf-Day Increments: The formula supports the calculation of absence durations in half-day increments, ensuring that partial days are accounted for correctly.\n\nShift and Roster Consideration: The formula considers both published and assigned shift details to determine the total assigned hours for each day in the absence period. write a  ensures that the calculation is aligned with the employee's actual work schedule.\n\nCompliance with Work Hours: The formula checks if the total assigned hours for a day are less than 4 hours and adjusts the duration accordingly. write a  ensures compliance with work hour regulations and policies.\n\nSupport for Multiple Days: The formula can handle absences that span multiple days, summing up the durations for each day to calculate the final duration.\n\n\n***Instruction for the fastformula***: ### Summary of the Oracle FastFormula\n\n#### DBI Values Used\nThe following database items (DBIs) are referenced in the formula:\n- `PERSON_ID`\n- `HR_ASSIGNMENT_ID`\n- `ABSENCE_TYPE_ID`\n- `PER_PER_PERSON_NUMBER`\n\n#### Input Values\nThe formula uses the following input values:\n- `IV_ACCRUALPERIODENDDATE`\n- `IV_ACCRUALPERIODSTARTDATE`\n- `IV_TERM_ID`\n- `IV_START_DATE`\n- `IV_END_DATE`\n- `IV_START_TIME`\n- `IV_TOTALDURATION`\n- `IV_START_DURATION`\n- `IV_END_DURATION`\n- `IV_ABS_START_DURATION`\n- `IV_ABS_END_DURATION`\n- `IV_END_TIME`\n\n#### Return Type\nThe formula returns a numeric value representing the calculated duration.\n\n#### Logic Summary\n1. **Initialization**: The formula starts by setting default values for various dates, times, and flags. It retrieves the `PERSON_ID`, `HR_ASSIGNMENT_ID`, and `ABSENCE_TYPE_ID` from the context.\n2. **Date and Time Calculations**: It then performs calculations to determine the start and end dates, handling cases where the end date might not be provided.\n3. **Loop Through Dates**: The formula loops through each day from the start date to the end date (inclusive if the end date is provided).\n4. **Check for Published and Assigned Shifts**: For each day, it checks if there are any published or assigned shifts. If found, it extracts details such as shift start and end times, durations, and object IDs.\n5. **Duration Calculations**: Based on the shift details, it calculates the total assigned hours for the day and determines the duration to be considered for absence, applying rules based on the ratio of entry duration to total assigned hours.\n6. **Accumulate Duration**: It accumulates the calculated durations for each day.\n7. **Final Calculation**: After looping through all relevant dates, the formula returns the total accumulated duration as the result.\n8. **Context Switching**: Throughout the process, the formula switches contexts to access relevant data for the HR assignment and absence type, ensuring calculations are performed in the correct context.\n9. **Handling Different Scenarios**: The formula includes logic to handle different scenarios such as when the end date is not provided, and it applies different rules based on the start and end times of shifts and the total duration of shifts on a given day.\n\nThis summary outlines the main steps and logic of the Oracle FastFormula, covering initialization, date and time calculations, loop through dates, checking for shifts, duration calculations, accumulation, and final calculation, along with handling different scenarios and context switching.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula is designed to determine the enrollment start date for an absence plan based on the employee's hire date and assignment effective start date. The business logic it addresses includes:\n\nHire Date-Based Enrollment: The formula sets the enrollment start date to the employee's hire date if it is on or after a specific start date (in write a  case, September 23, 2019).\n\nAssignment Effective Start Date: If the assignment effective start date is on or after the hire date, the formula updates the enrollment start date to the assignment effective start date.\n\n***Instruction for the fastformula***: **Summary of FastFormula**\n\n* **DBI Values Used**: PER_ASG_REL_DATE_START, PER_ASG_EFFECTIVE_START_DATE, PER_PER_PERSON_NUMBER, HR_ASSIGNMENT_ID, EFFECTIVE_DATE\n* **Input Values**: '4712/12/31 00:00:00'(date), 'X', '2019-09-23'\n* **Return Type**: Date\n* **Logic Summary**: \n  1. The formula starts by setting default values for certain database items and input values.\n  2. It then retrieves the hire date and HR assignment ID from the context.\n  3. The formula sets a start date and an effective date, and changes the context to use the effective date.\n  4. Within the new context, it retrieves the person number and HR assignment effective start date.\n  5. The formula then compares the hire date with a predefined start date and checks if the HR assignment effective start date is greater than or equal to the hire date.\n  6. Based on these comparisons, it determines the enrollment start date, which is either the hire date or the HR assignment effective start date.\n  7. Finally, the formula returns the determined enrollment start date.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula is designed to calculate the proration factor for leave accruals. The proration factor is set to 1, which means that the leave accrual is not prorated and is calculated at the full rate. write a  ensures that the leave accrual is not adjusted based on the employee's hire date, termination date, or any other factors\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: PER_ASG_REL_ORIGINAL_DATE_OF_HIRE, PER_ASG_REL_ACTUAL_TERMINATION_DATE, ANC_ABS_PLN_NAME, ANC_ABS_PLN_PLAN_UOM\n* **Input Values**: None\n* **Return Type**: Numeric value representing a proration factor\n* **Logic Summary**: \n  1. The formula starts by setting default values for certain database items (DBIs) related to employment dates and absence plan details.\n  2. It then sets a default for the absence plan name and unit of measure.\n  3. A proration factor is initialized to 1.\n  4. The formula simply returns this proration factor without any modifications or calculations based on the set defaults.\n  5. Overall, the formula appears to be initializing certain values and returning a constant proration factor, likely for use in further calculations or processing.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula is designed to calculate the annual leave accrual for CIMB employees based on various factors. Here's the business logic it addresses:\n\nProration Based on Band Change: The formula prorates the leave accrual based on changes in the employee's band during the accrual period. It captures the band change dates and calculates the accrual rates before and after each band change.\n\nRestriction on Monthly Accrual: The formula restricts the monthly leave accrual for certain types of leave, such as Unpaid Leave, Maternity Leave, Emergency Leave, and Hajj Leave. If an employee takes any of these leaves during the accrual period, the formula adjusts the accrual accordingly.\n\nAccrual Calculation: The formula calculates the leave accrual based on the employee's hire date, band change dates, and the duration of the accrual period. It considers the number of days in the accrual period and adjusts the accrual for any approved absences.\n\nFTE (Full-Time Equivalent) Changes: The formula accounts for changes in the employee's FTE value during the accrual period. It captures the FTE change dates and calculates the accrual based on the FTE value for each period.\n\nLeave Balance Adjustments: The formula includes logic to handle adjustments to the leave balance, such as carryover balances from the previous year and any special adjustments.\n\nGrade and Action Code: The formula captures the employee's grade and action code before and after each band change. write a  information is used to determine the appropriate accrual rates and adjustments\n\n***Instruction for the fastformula***: ### Summary of the FastFormula\n\n#### DBI Values Used:\nThe formula references the following Database Items (DBIs):\n- `PER_ASG_PERSON_NUMBER`\n- `ANC_ABS_TYP_NAME`\n- `ANC_ABS_PLN_NAME`\n- `PER_ASG_REL_DATE_START`\n- `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n- `ANC_ABS_ENTRS_DURATION`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n- `ANC_ABS_ENTRS_START_DATE`\n- `ANC_ABS_ENTRS_END_DATE`\n- `PER_ASG_REL_ACTUAL_TERMINATION_DATE`\n- `PER_PERSON_ENTERPRISE_HIRE_DATE`\n- `PER_ASG_GRADE_NAME`\n- `PER_ASG_ACTION_CODE`\n- `PER_ASG_JOB_NAME`\n- `PER_ASG_FTE_VALUE`\n- `HR_ASSIGNMENT_ID`\n- `LEGISLATIVE_DATA_GROUP_ID`\n\n#### Input Values:\nThe formula takes the following input values:\n- `IV_ACCRUAL`\n- `IV_ACCRUALPERIODENDDATE`\n- `IV_ACCRUALPERIODSTARTDATE`\n- `IV_PLANENROLLMENTSTARTDATE`\n- `IV_PLANENROLLMENTENDDATE`\n- `IV_CALEDARENDDATE`\n- `IV_CALEDARSTARTDATE`\n- `IV_EVENT_DATES`\n- `IV_BAND_CHG_DT1`\n- `IV_BAND_CHG_BEFVAL1`\n- `IV_BAND_CHG_AFTVAL1`\n- `IV_BAND_CHG_DT2`\n- `IV_BAND_CHG_BEFVAL2`\n- `IV_BAND_CHG_AFTVAL2`\n- `IV_BAND_CHG_DT3`\n- `IV_BAND_CHG_BEFVAL3`\n- `IV_BAND_CHG_AFTVAL3`\n- `IV_BAND_CHG_DT4`\n- `IV_BAND_CHG_BEFVAL4`\n- `IV_BAND_CHG_AFTVAL4`\n\n#### Return Type:\nThe formula returns an accrual value of type number and also populates `adjustmentvalues`, `adjustmentdates`, and `adjustmenttypes` parameters.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by initializing various variables with default values, including dates, accrual rates, and absence details.\n2. **Checking Enrollment**: It checks if the plan enrollment start date is equal to a specific date and if the accrual period start date is before the plan enrollment start date. If true, it sets the accrual to 0 and returns.\n3. **Band Change Detection**: The formula then determines if there are band changes within the accrual period by comparing the accrual period start and end dates with band change dates (`IV_BAND_CHG_DT1` and `IV_BAND_CHG_DT2`).\n4. **Calculating Accrual Periods**: Based on the band changes, it calculates the accrual periods (`l_accrued_period1`, `l_accrued_period2`, `l_accrued_period3`) considering the accrual rates before and after band changes.\n5. **Absence Processing**: For each absence entry related to the person, it checks the absence type, start and end dates, and calculates the absence duration within the accrual period, adjusting for band changes.\n6. **FTE (Full-Time Equivalent) Processing**: It processes FTE changes by iterating through FTE change dates and values, calculating the total number of days for each FTE value within the accrual period.\n7. **Accrual Calculation**: Finally, it calculates the final accrual by applying the accrual rates to the total days for each period, considering absences and FTE changes, and returns the result along with adjustments.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the accrual rate for an employee's absence based on their length of service and the specific month of hire or termination. It determines the number of days between the employee's hire date and the current effective date to calculate the length of service. If the employee's termination date falls within the current month and year, the formula adjusts the accrual rate based on the proportion of days worked in that month. Similarly, if the hire date falls within the current month and year, the formula adjusts the accrual rate based on the proportion of days worked since the hire date. The final accrual rate is then multiplied by the input accrual value to determine the total accrual for the period.\n\n***Instruction for the fastformula***: Here is a structured summary of the FastFormula:\n\n**DBI Values Used**: \n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_ASG_REL_ACTUAL_TERMINATION_DATE\n- ANC_ABS_PLN_NAME\n- ANC_ABS_PLN_PLAN_UOM\n\n**Input Values**: \n- IV_ACCRUAL\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n\n**Return Type**: \nThe formula returns a numeric value representing the accrual amount.\n\n**Logic Summary**: \n1. The formula starts by calculating the number of days between the current effective date and the original date of hire.\n2. It then extracts the year, month, and day components from both the original date of hire and the current effective date.\n3. The formula also calculates the last day of the current month.\n4. It checks if the termination date is in the same year and month as the current date. If so, it adjusts the accrual based on the number of days worked in the termination month.\n5. Similarly, it checks if the hire date is in the same year and month as the current date. If so, it adjusts the accrual based on the number of days worked since the hire date.\n6. Finally, the formula multiplies the calculated accrual by the input accrual value (IV_ACCRUAL) to determine the final accrual amount, which it then returns.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the accrual of leave for employees based on changes in their employment band and excludes accrual for days taken as unpaid leave, maternity leave, emergency leave, and Hajj leave. If the plan enrollment start date is September 5, 2019, and the accrual period start date is before the plan enrollment start date (and the start date is not the hire date), the accrual is set to zero. Otherwise, the accrual is set to the input accrual value. write a  ensures that the leave accrual is accurately calculated based on the employee's band changes and specific leave types.\n\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:** \n- PER_ASG_REL_DATE_START (with a default value of '1951/01/01 00:00:00')\n\n**Input Values:**\n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n- IV_EVENT_DATES\n- IV_BAND_CHG_DT1\n- IV_BAND_CHG_BEFVAL1\n- IV_BAND_CHG_AFTVAL1\n- IV_BAND_CHG_DT2\n- IV_BAND_CHG_AFTVAL2\n- IV_BAND_CHG_BEFVAL2\n- IV_BAND_CHG_DT3\n- IV_BAND_CHG_BEFVAL3\n- IV_BAND_CHG_AFTVAL3\n- IV_BAND_CHG_DT4\n- IV_BAND_CHG_AFTVAL4\n- IV_BAND_CHG_BEFVAL4\n\n**Return Type:** \nThe formula returns a numeric value representing the accrual amount.\n\n**Logic Summary:**\n1. The formula first checks if the plan enrollment start date matches a specific date ('2019/09/05 00:00:00') and if the accrual period start date is before the plan enrollment start date, and the plan enrollment start date is not the same as the hire date (which is set to '1951/01/01 00:00:00' by default).\n2. If this condition is true, the accrual is set to 0. Otherwise, the accrual is set to the input accrual value (IV_ACCRUAL).\n3. Regardless of the condition, the formula logs some input values (accrual period start and end dates, calendar start and end dates) using the ESS_LOG_WRITE function.\n4. Finally, the formula returns the calculated accrual value.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the duration of half-day absences for employees in Singapore based on their work schedules and rosters. It determines if an absence is a full day or half day by comparing the entered absence hours to the total assigned shift hours, ensuring half-day absences are only counted as 0.5 days if the duration is less than half of the shift hours or meets specific time criteria, like starting or ending at midnight.\n\n***Instruction for the fastformula***: ### Structured Summary of the Oracle FastFormula\n\n#### DBI Values Used:\nThe following database items (DBIs) are referenced in the formula:\n- PERSON_ID\n- HR_ASSIGNMENT_ID\n- ABSENCE_TYPE_ID\n- Various default values for dates, times, and other parameters\n\n#### Input Values:\nThe formula accepts the following input values:\n- IV_ACCRUALPERIODENDDATE (date)\n- IV_ACCRUALPERIODSTARTDATE (date)\n- IV_TERM_ID\n- IV_START_DATE (date)\n- IV_END_DATE (date)\n- IV_START_TIME (text)\n- IV_TOTALDURATION (number)\n- IV_START_DURATION (number)\n- IV_END_DURATION (number)\n- IV_ABS_START_DURATION (number)\n- IV_ABS_END_DURATION (number)\n- IV_END_TIME (text)\n- IV_ABS_START_DATE (date)\n- IV_ABS_END_DATE (date)\n\n#### Return Type:\nThe formula returns a value representing the calculated duration, which is a numeric value.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by initializing various variables and setting default values for parameters such as dates, times, and durations.\n2. **Date and Time Processing**: It processes the input start and end dates and times to determine the duration of a specific period.\n3. **Shift Details Retrieval**: The formula checks for the existence of published or assigned shift details for an individual and retrieves relevant information such as shift start and end dates and hours.\n4. **Duration Calculation**: Based on the retrieved shift details and input parameters, it calculates the total assigned hours and applies specific rules to determine the duration. This includes checks for conditions such as whether the end date is the same as the start date and adjusting the duration accordingly.\n5. **Final Calculation and Return**: The formula performs a final calculation of the unrounded duration based on the total assigned hours and the calculated entry duration, applying specific thresholds to determine the final duration value.\n6. **Return of Result**: The calculated duration is then returned as the result of the formula.\n\nThis summary outlines the main steps and logic of the Oracle FastFormula, providing a concise overview of how it processes inputs to calculate and return a duration value.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the accrual for the \"Brought Forward Leave Plan 3 Years Expiry - Year 1.\" It determines the length of service in months by calculating the number of months between the start of the accrual period and the hire date. It retrieves the balance for the specified leave plan as of the end date of the previous year. The accrual is then set to write a  retrieved balance. The formula returns the calculated accrual along with any adjustment values, dates, and types.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:** \n- `per_asg_person_number`\n- `anc_abs_typ_name`\n- `anc_abs_pln_name`\n- `per_asg_rel_date_start`\n- `per_asg_grade_name`\n- `legislative_data_group_id`\n- `person_id`\n- `hr_assignment_id`\n\n**Input Values:** \n- `iv_accrual`\n- `iv_accrualperiodenddate`\n- `iv_accrualperiodstartdate`\n- `iv_planenrollmentstartdate`\n- `iv_planenrollmentenddate`\n- `iv_caledarenddate`\n- `iv_caledarstartdate`\n\n**Return Type:** \nThe formula returns multiple values including an accrual value and three adjustment arrays (values, dates, and types), indicating a composite return type that includes both numerical and array data.\n\n**Logic Summary:** \n1. The formula starts by initializing various default values for parameters and variables, including employee assignment and plan details.\n2. It retrieves the legislative data group ID, person ID, and HR assignment ID from the context.\n3. The formula calculates the length of service in months from the hire date to the start of the accrual period.\n4. It then determines the previous year-end date based on the accrual period start date.\n5. By changing the effective date to the previous year-end date, it fetches the balance of a specific leave plan for the previous year.\n6. This balance is then used to calculate the accrual for the period.\n7. The formula writes a log entry with details about the accrual balance for the year and the previous year-end date.\n8. Finally, it returns the calculated accrual along with empty adjustment values, dates, and types, suggesting that the primary focus is on calculating and returning the accrual value based on the previous year's leave balance.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the accrual for the \"Brought Forward Leave Plan 3 Years Expiry - Year 2.\" It determines the length of service in months by calculating the number of months between the start of the accrual period and the hire date. It retrieves the balance for the specified leave plan as of the end date of the previous year. The accrual is then set to write a  retrieved balance. The formula returns the calculated accrual along with any adjustment values, dates, and types.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: \n  - per_asg_person_number \n  - anc_abs_typ_name \n  - anc_abs_pln_name \n  - per_asg_rel_date_start \n  - per_asg_grade_name \n  - legislative_data_group_id \n  - person_id \n  - hr_assignment_id\n\n* **Input Values**: \n  - iv_accrual \n  - iv_accrualperiodenddate \n  - iv_accrualperiodstartdate \n  - iv_planenrollmentstartdate \n  - iv_planenrollmentenddate \n  - iv_caledarenddate \n  - iv_caledarstartdate\n\n* **Return Type**: The formula returns multiple values including accrual (numeric), adjustmentvalues (numeric), adjustmentdates (date), and adjustmenttypes (text).\n\n* **Logic Summary**: \n  1. The formula starts by setting default values for various database items (DBIs) such as person number, absence type, and plan name.\n  2. It then initializes several local variables including legislative data group ID, annual and brought forward accrual balances, and a specific plan name.\n  3. The formula calculates the hire date of a person and the number of months between the accrual period start date and the hire date.\n  4. It retrieves the previous year's end date and changes the context to this date and the legislative data group.\n  5. Within this new context, it calculates the accrual balance for a specific plan (Brought Forward Leave Plan 3 Years Expiry - Year 2).\n  6. The formula then returns the accrual balance along with adjustment values, dates, and types.\n  7. The logic appears to be calculating the accrual for a specific leave plan based on the participant's hire date and accrual period, and considering any adjustments that may apply.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the duration of half-day absences for employees in Malaysia based on their work schedules and rosters. It determines the duration by comparing the entered absence hours to the total assigned shift hours, counting half-day absences as 0.5 days if the duration is less than half the shift hours, with adjustments for time criteria like starting before 2 PM or ending at midday. The formula returns the calculated duration.\n\n***Instruction for the fastformula***: ### Summary of the FastFormula\n\n#### DBI Values Used\n- `PERSON_ID`\n- `HR_ASSIGNMENT_ID`\n- `ABSENCE_TYPE_ID`\n\n#### Input Values\n- `IV_ACCRUALPERIODENDDATE`\n- `IV_ACCRUALPERIODSTARTDATE`\n- `IV_TERM_ID`\n- `IV_START_DATE`\n- `IV_END_DATE`\n- `IV_START_TIME`\n- `IV_TOTALDURATION`\n- `IV_START_DURATION`\n- `IV_END_DURATION`\n- `IV_ABS_START_DURATION`\n- `IV_ABS_END_DURATION`\n- `IV_END_TIME`\n- `IV_ABS_START_DATE`\n- `IV_ABS_END_DATE`\n\n#### Return Type\nThe formula returns a numeric value representing the duration calculated based on the input parameters and the logic applied.\n\n#### Logic Summary\n1. **Initialization**: The formula starts by initializing various variables with default values, including dates, times, and flags. It retrieves the `PERSON_ID`, `HR_ASSIGNMENT_ID`, and `ABSENCE_TYPE_ID` from the context.\n2. **Date and Time Processing**: It processes the start and end dates provided as input, handling cases where the end date is not provided by defaulting it to the start date. It also checks for full-day absences based on the start and end times.\n3. **Assignment and Availability Checks**: The formula checks for published and assigned shift details for the given dates and calculates the total assigned hours. It looks into the shift start and end times, comparing them with the input start and end times to determine the overlap and thus the duration of the absence.\n4. **Duration Calculation**: Based on the checks and comparisons, it calculates the duration of the absence, considering half shifts, full-day absences, and the intersection of absence periods with assigned shifts. It uses various conditions to determine whether the absence duration should be counted as a full day, half day, or a fraction of a day.\n5. **Special Conditions Handling**: The formula includes logic to handle special conditions such as absences starting or ending on the same day, overlapping shifts, and partial day absences. It adjusts the calculated duration accordingly.\n6. **Logging**: Throughout the process, the formula logs various steps and calculated values for auditing or debugging purposes using `ESS_LOG_WRITE`.\n7. **Final Calculation and Return**: Finally, it calculates the total duration based on the conditions met and returns this value as the result.\n\nThis summary outlines the major steps and logic applied in the FastFormula to calculate the absence duration based on the given inputs and database items.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates paternity leave applications for UK employees. It ensures the leave start date is within 15 weeks before or after the actual or expected child birth date and checks if a medical certificate (MAT B1) is uploaded. If these conditions are not met, it rejects the application. The formula returns a validity status along with an error message and tokens if the application is invalid.\n\n***Instruction for the fastformula***: **DBI Values Used**: \n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_ACTUALCHILDBIRTHDATE\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- PER_PER_CONT_REL_CONTACT_TYPE\n- PER_PER_CONT_REL_CONTACT_PERSON_ID\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- ABSENCE_ENTRY_ID\n- EFFECTIVE_DATE\n- HR_ASSIGNMENT_ID\n- PERSON_ID\n- PER_ABSENCE_ENTRY_ID\n- CIMB_ATTACHMENTS\n- CIMB_GET_FND_PERSON\n\n**Input Values**: \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_ACTUALCHILDBIRTHDATE\n\n**Return Type**: \nThe formula returns a set of values including a validity flag (VALID), an error message (ERROR_MESSAGE), and token names and values (TOKEN_NAME, TOKEN_VALUE) that can be used to provide detailed feedback.\n\n**Logic Summary**: \n1. The formula starts by initializing various default values and input parameters related to dates, absence reasons, and HR assignment details.\n2. It calculates the year's beginning and end dates based on the provided start date and sets an effective date for pay interface extraction.\n3. The formula checks for the absence entry ID and retrieves a value from a value set named 'CIMB_ATTACHMENTS' based on this ID.\n4. It identifies the HR assignment ID, person ID, and uses a value set 'CIMB_GET_FND_PERSON' to get the FND person number.\n5. The formula changes contexts for HR assignment and absence entry to set up the environment for further checks.\n6. Based on the user mode and person details, it performs several conditional checks:\n   - If the actual child birth date was not provided, it uses the expected child birth date for calculations.\n   - It checks if the start date plus 105 days exceeds the child's birth date and returns an error if true.\n   - If no certificate (MAT B1) is uploaded (indicated by a specific value set), it returns an error requesting the upload.\n7. The formula validates these conditions and returns a validity flag along with any error messages or token values required for further processing.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the carryover limit for annual leave in Singapore. It sets the limit to 5 days for grades U1 to U11, MA, G1 to G3, and S1 to S12, unless the employee was hired within 4 months of the accrual period start, in which case no carryover is allowed for grades U9, U10, and U11. The formula returns the calculated carryover limit.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:** \n- PER_ASG_BUSINESS_UNIT_NAME\n- PER_ASG_GRADE_NAME\n- PER_ASG_REL_DATE_START\n- HR_ASSIGNMENT_ID\n\n**Input Values:** \n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n\n**Return Type:** \nThe formula returns a numeric value representing the carryover amount.\n\n**Logic Summary:** \nThe formula starts by initializing variables, including setting default values and retrieving specific data like the HR assignment ID and grade name. It calculates the length of service in months based on the accrual period end date and the person's hire date. The formula then checks the grade name and applies different rules based on the grade category. If the grade falls into specific upper categories (U9, U10, U11), it checks the hire date in relation to the accrual period start date to determine the carryover amount. For other grade categories (ranging from U1 to S12, with some specific inclusions), it assigns a fixed carryover amount regardless of the hire date. The formula returns the calculated carryover amount based on these conditions.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the duration of half-day absences for employees in Thailand based on their work schedules and rosters. It determines the duration by comparing the entered absence hours to the total assigned shift hours, counting half-day absences as 0.5 days if the duration is less than half the shift hours or spans midnight, and full days if it matches or exceeds shift hours. The formula returns the calculated duration.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n- `PERSON_ID`\n- `HR_ASSIGNMENT_ID`\n- `ABSENCE_TYPE_ID`\n- `PER_PER_PERSON_NUMBER`\n- Various default values for accrual period, shift dates, and other parameters\n\n**Input Values:**\n- `IV_ACCRUALPERIODENDDATE` (date)\n- `IV_ACCRUALPERIODSTARTDATE` (date)\n- `IV_TERM_ID`\n- `IV_START_DATE` (date)\n- `IV_END_DATE` (date)\n- `IV_START_TIME` (text)\n- `IV_TOTALDURATION` (number)\n- `IV_START_DURATION` (number)\n- `IV_END_DURATION` (number)\n- `IV_ABS_START_DURATION` (number)\n- `IV_ABS_END_DURATION` (number)\n- `IV_END_TIME` (text)\n\n**Return Type:**\nThe formula returns a `DURATION` value, which is a numeric representation of the calculated duration.\n\n**Logic Summary:**\nThe formula calculates the duration of a specific period based on various input parameters and database item values. Here's a step-by-step breakdown:\n1. **Initialization**: The formula initializes various variables, including dates, durations, and flags, using default values and input parameters.\n2. **Loop Through Dates**: The formula loops through each day between the `IV_START_DATE` and `IV_END_DATE` (inclusive).\n3. **Calculate Shift Hours**: For each day, the formula calculates the total assigned shift hours based on published and assigned shift details.\n4. **Check Conditions**: The formula checks various conditions, including the presence of published or assigned shifts, duration of shifts, and overlap with the input period.\n5. **Calculate Duration**: Based on the conditions, the formula calculates the duration for each day, either as 0, 0.5, or 1, depending on the shift hours and input period.\n6. **Accumulate Duration**: The formula accumulates the duration for each day to calculate the total duration for the period.\n7. **Return Duration**: The formula returns the total duration as the result.\n\nThe formula appears to be designed to calculate the duration of a specific period, taking into account various factors such as shift schedules, accrual periods, and input parameters. The logic is complex and involves multiple conditions, loops, and calculations to arrive at the final duration value.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates half-pay maternity leave applications in Malaysia. It ensures the duration does not exceed 90 days, is applied after 90 days of full-pay maternity leave, and starts the day after the full-pay maternity leave ends. It also verifies the manager\u2019s active status and limits applications to the fifth child. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: **Summary of FastFormula**\n\n* **DBI Values Used**: \n  - ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  - ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - ANC_ABS_ENTRS_DURATION\n  - ANC_ABS_TYP_NAME\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  - ANC_ABS_ENTRS_END_DATE\n  - ANC_ABS_ENTRS_START_DATE\n  - ANC_ABS_ENTRS_ABSENCE_REASON_ID\n  - PER_ASG_GRADE_NAME\n  - PER_PER_CONT_REL_CONTACT_TYPE\n  - PER_PER_CONT_REL_CONTACT_PERSON_ID\n  - ANC_ABS_ENTRS_USER_MODE\n  - PER_ASG_MANAGER_USER_PERSON_ID\n  - PER_PER_PERSON_NUMBER\n\n* **Input Values**:\n  - iv_start_date\n  - iv_end_date\n  - IV_CALEDARSTARTDATE\n  - IV_CALEDARENDDATE\n  - IV_TOTALDURATION\n  - IV_ABSENCE_REASON\n  - IV_EXPECTEDCHILDBIRTHDATE\n  - IV_ACTUALCHILDBIRTHDATE\n\n* **Return Type**: The formula returns a validation result (VALID) along with an error message.\n\n* **Logic Summary**:\n  1. **Initialization**: The formula starts by checking if the provided person number is valid. If not, it sets the person number to 'N'.\n  2. **Context Setup**: It sets up the context for the HR assignment and effective date to retrieve the manager's ID and checks the manager's assignment status.\n  3. **Validation Checks**: The formula performs several validation checks:\n     - Checks if the start date is before a specific date ('2019/09/23') and returns an error if true.\n     - Verifies if the duration of the absence exceeds the limit (90 days) and returns an error if exceeded.\n     - Checks if the manager's assignment status is inactive or if the manager ID is 0, returning an error in such cases.\n  4. **Contact and Child Information Retrieval**: It retrieves contact and child information for the person:\n     - Loops through the contacts to find children and stores their IDs and dates of birth.\n     - Checks if there are more than 5 children and returns an error if true.\n  5. **Absence History Check**: The formula checks the absence history for the person:\n     - Loops through previous absence entries to check for specific types of leaves (Maternity Leave - 1st Time Mothers, Maternity Leave, Maternity Leave - Half Pay).\n     - Calculates the total duration of Maternity Leave and Half Pay Leave.\n     - Returns errors based on specific conditions such as taking Maternity Leave more than once in a year, not meeting the full pay duration requirement, or the half pay duration exceeding the limit.\n  6. **Final Validation**: After all checks, if no errors are found, the formula returns a validation result indicating success or failure along with an appropriate error message if any condition is not met.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates first-time maternity leave applications in Malaysia. It ensures the duration does not exceed 180 days, the employee has worked at least 3 months, and the leave starts within 30 days after the actual or expected child birth date. It also checks the manager\u2019s active status and prohibits leave during probation for contract employees. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: **DBI Values Used:** \n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_ACTUALCHILDBIRTHDATE\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- PER_PER_CONT_REL_CONTACT_TYPE\n- PER_PER_CONT_REL_CONTACT_PERSON_ID\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_EMPLOYMENT_CATEGORY\n\n**Input Values:** \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_ACTUALCHILDBIRTHDATE\n\n**Return Type:** \nThe formula returns a validation result, which includes a boolean value (VALID) indicating whether the input is valid, an error message (ERROR_MESSAGE), and optionally, token names and values for further error handling.\n\n**Logic Summary:** \nThis formula performs a series of checks to validate input data related to an employee's absence or leave application. \n1. It first sets default values for various database items and initializes parameters such as start and end dates, effective dates, and absence entry IDs.\n2. It then calculates the duration of the leave in days and checks the employment category of the employee.\n3. The formula proceeds with multiple conditional checks:\n   - It verifies if the leave start date is before a specific cutoff date (September 23, 2019) and if the manager's assignment status is active.\n   - It checks if the actual childbirth date (if provided) or the expected childbirth date (if actual is not provided) falls within a specific timeframe relative to the start date of the leave.\n   - It validates if the leave duration exceeds 180 days.\n   - For contract employees, it checks if the probation end date is after the leave start date.\n   - It also checks if there are any contacts (e.g., children) whose date of birth plus a certain timeframe (7 months) is before the leave start date.\n4. Based on these conditions, the formula returns a validation result indicating whether the leave application is valid or not, along with an appropriate error message if it's not valid. \n5. The formula iterates through the employee's contacts (if any) to perform specific date-based checks related to maternity leave, ensuring compliance with certain rules.\n6. Throughout the process, it utilizes various Oracle functions and value sets to retrieve necessary data, such as the manager's ID, person number, and assignment status, adjusting contexts as needed for accurate data retrieval.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates extended sick leave applications in Malaysia. It ensures they are only applied after 8 weeks of maternity leave have been utilized, preventing overlap with available sick leave balances. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: PERSON_ID, LEGISLATIVE_DATA_GROUP_ID, 'Sick Leave Plan'\n* **Input Values**: iv_start_date, iv_end_date, IV_CALEDARSTARTDATE, IV_CALEDARENDDATE, IV_TOTALDURATION, IV_ABSENCE_REASON\n* **Return Type**: The formula returns a validation result, which includes a validation flag (VALID) and an error message (ERROR_MESSAGE), both of type Text.\n* **Logic Summary**: \n  1. The formula initializes variables to track the start and end of the year based on the provided start date.\n  2. It retrieves the person ID and legislative data group ID from the context.\n  3. The formula then checks the balance of the 'Sick Leave Plan' as of the year-end date.\n  4. If the balance is greater than 0, it sets the validation flag to 'N', indicating an error, and provides an error message related to the utilization of Maternity Leave.\n  5. If the balance is 0 or less, the formula returns a validation flag of 'Y', indicating no error.\n  6. The formula uses the validation flag and error message to determine whether the employee can apply for more than Extended Maternity Leave.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates pilgrimage leave applications in Malaysia. It ensures the duration does not exceed 7 days, the employee has 10 years of service, and no prior Hajj leave of 30 days has been taken. It also checks the manager\u2019s active status. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: \n  - PER_ASG_REL_DATE_START\n  - PER_ASG_GRADE_NAME\n  - ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  - ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - ANC_ABS_TYP_NAME\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  - ANC_ABS_ENTRS_DURATION\n  - ANC_ABS_ENTRS_USER_MODE\n  - PER_ASG_MANAGER_USER_PERSON_ID\n  - PER_PER_PERSON_NUMBER\n\n* **Input Values**: \n  - iv_start_date\n  - iv_end_date\n  - IV_CALEDARSTARTDATE\n  - IV_CALEDARENDDATE\n  - IV_TOTALDURATION\n  - IV_ABSENCE_REASON\n\n* **Return Type**: \n  The formula returns a set of values including a validation flag (VALID), an error message (ERROR_MESSAGE), and potentially token names and values.\n\n* **Logic Summary**: \n  The formula starts by initializing variables and retrieving context values. It checks if the total duration of absence is a multiple of 0.5; if not, it returns an error. It then checks for the existence of a specific personnel number and, based on its presence, adjusts its value. The formula changes contexts to retrieve specific assignment and person details, including a manager's ID and assignment status. It checks for the user mode and, based on this, applies different validation rules, including checks on the start date, manager's status, and total duration. The formula also checks for conditions related to 'Hajj Leave', calculating durations and comparing them against specific thresholds. If any validation fails, it returns an appropriate error message. If all checks pass, the formula returns a validation flag indicating success. The logic is designed to enforce rules around employee absences, including eligibility for certain types of leave and adherence to organizational policies.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates pilgrimage or Umrah leave applications in Malaysia. It ensures the duration does not exceed 7 or 10 days (depending on grade and religion), the employee has 5 or 10 years of service (based on grade and religion), and no prior Hajj leave exceeds the entitlement (30 or 40 days). It also checks the manager\u2019s active status. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_LOCATION_NAME\n- PER_ASG_ATTRIBUTE7\n- PER_LDG_LEGISLATION_CODE\n- PER_EXT_RELIGION_NAME\n- PER_EXT_RELIGION_LEGISLATION_CODE\n\n**Input Values:**\n- IV_START_DATE\n- IV_END_DATE\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type:**\nThe formula returns a validation result, indicated by the variable `VALID`, which is a character indicating whether the input is valid or not, along with an error message and token values when validation fails.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by initializing various variables with default values from database items (DBIs) and input values. It captures the employee's hire date, grade name, absence duration, and other details.\n2. **Input Validation**: It checks if the input duration is valid (a multiple of 0.5) and if not, it returns an error message indicating the duration is incorrect.\n3. **Employee Eligibility Check**: The formula checks the employee's eligibility for a specific type of leave based on their grade, hire date, and duration of service. It considers different grades and their respective entitlements.\n4. **Manager Status Check**: For certain grades, it checks the status of the manager to ensure they are active and can approve the leave.\n5. **Legislation and Religion Checks**: For specific grades, it checks the legislation code and the employee's religion to determine their entitlement.\n6. **Entitlement Calculation**: It calculates the employee's leave entitlement based on their grade, duration of service, and religion.\n7. **Historical Leave Check**: The formula checks the employee's historical leave records to ensure they have not exceeded their entitlement.\n8. **Error Handling**: Throughout the process, it returns specific error messages and token values when validation fails, indicating the reason for the failure.\n9. **Final Validation**: After passing all checks, the formula returns a validation result indicating whether the leave application is valid or not.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates unpaid leave applications in Malaysia. It ensures no annual leave balance remains, the leave does not overlap calendar years, and for emergency leave, a reason is provided. It also prohibits leave during probation unless all annual and sick leave are exhausted, and checks the manager\u2019s active status. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the FastFormula:\n\n**DBI Values Used:**\n- per_asg_date_probation_end\n- per_asg_rel_date_start\n- per_asg_grade_name\n- per_asg_sex\n- global_pay_interface_extraction_date\n- iv_attribute_1\n- per_asg_action_code\n- per_asg_job_name\n- per_asg_user_person_type\n- anc_per_abs_entrs_absence_entry_id_arr\n- anc_abs_entrs_duration\n- anc_abs_typ_name\n- anc_abs_entrs_absence_status_cd\n- anc_abs_entrs_end_date\n- anc_abs_entrs_start_date\n- anc_abs_entrs_absence_type_id\n- anc_abs_entrs_approval_status_cd\n- anc_abs_entrs_user_mode\n- per_asg_manager_user_person_id\n- per_per_person_number\n- per_asg_employment_category\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- iv_caledarstartdate\n- iv_caledarenddate\n- iv_totalduration\n- iv_absence_reason\n- iv_attribute_1\n\n**Return Type:**\nThe formula returns a validation result, including a boolean value indicating whether the validation is successful or not, an error message, and optionally token names and values.\n\n**Logic Summary:**\nThis FastFormula performs a series of validations for employee absence requests. Here is a step-by-step breakdown:\n1. **Initialization**: The formula starts by setting various default values for database items and input parameters.\n2. **Validation for Leave Duration**: It checks if the leave duration is valid (i.e., it must be a multiple of 0.5 days).\n3. **Employee Person Number Validation**: It retrieves the employee's person number and checks if it is valid.\n4. **Manager Validation**: If the user is not an administrator, it checks if the manager's assignment status is active.\n5. **Probation Period Check**: If the employee is still in their probation period, it checks if they have any annual leave balance.\n6. **Absence Reason Validation**: Based on the absence reason, it performs additional checks, such as:\n   - For emergency leaves, it checks if the attribute is set correctly.\n   - For unpaid leaves, it checks if the employee is eligible.\n   - For adoption leaves, it checks if the employee is male and if the leave duration exceeds 30 days.\n7. **Date Range Validation**: It checks if the absence date range overlaps with the current year or exceeds the allowed duration.\n8. **Final Validation**: If all checks pass, the formula returns a successful validation result; otherwise, it returns an error message with a corresponding token name and value.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates extended no-pay maternity leave applications in Singapore. It ensures the leave is applied within 12 months of the child\u2019s birth, follows 56 days of maternity leave, and does not exceed 28 days in total across multiple blocks. It also checks the manager\u2019s active status. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: \n  - ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  - ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  - PER_PER_CONTACT_DATE_OF_BIRTH\n  - PER_PER_CONTACT_CONTACT_TYPE\n  - PER_PER_CONTACT_PERSON_ID\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - ANC_ABS_ENTRS_DURATION\n  - ANC_ABS_TYP_NAME\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  - ANC_ABS_ENTRS_END_DATE\n  - ANC_ABS_ENTRS_START_DATE\n  - PER_ASG_REL_DATE_START\n  - PER_EXT_PERSON_CITIZENSHIP_NATIONALITY\n  - PER_PER_CONT_REL_CONTACT_TYPE\n  - PER_PER_CONT_REL_CONTACT_PERSON_ID\n  - ANC_ABS_ENTRS_USER_MODE\n  - PER_ASG_MANAGER_USER_PERSON_ID\n  - HR_ASSIGNMENT_ID\n  - EFFECTIVE_DATE\n  - PERSON_ID\n  - ABSENCE_ENTRY_ID\n\n* **Input Values**:\n  - iv_start_date\n  - iv_end_date\n  - IV_CALEDARSTARTDATE\n  - IV_CALEDARENDDATE\n  - IV_TOTALDURATION\n  - IV_ABSENCE_REASON\n  - IV_EXPECTEDCHILDBIRTHDATE\n  - IV_ACTUALCHILDBIRTHDATE\n\n* **Return Type**: \n  The formula returns a validation result, which includes a VALID flag (indicating whether the validation was successful or not) and an ERROR_MESSAGE (providing details about the validation failure, if any).\n\n* **Logic Summary**:\n  The formula begins by setting default values for various database items and input parameters. It then initializes several local variables, including flags, dates, and counters, to track the validation process and store intermediate results. \n  The main validation logic checks the following conditions step by step:\n  1. **Date Validation**: Checks if the start date is before a specific cutoff date (September 23, 2019). If so, it returns an error.\n  2. **Manager Status Validation**: Verifies the status of the manager assigned to the employee. If the manager's status is not active or if no manager is assigned, it returns an error.\n  3. **Child Birth Date Validation**: Determines the child's birth date based on whether the actual birth date or expected birth date is provided. It then checks if the child is older than 1 year, considering the start date of the request. If the child is too old, it returns an error.\n  4. **Absence History Validation**: Retrieves the absence history for the employee within a specific date range (12 months prior to the child's birth date to the start date of the request). It checks for any existing maternity leave or extended maternity leave without pay entries that might affect the current request.\n  5. **Maternity Leave Balance Validation**: Calculates the remaining balance of maternity leave available to the employee. If the balance is insufficient, it returns an error.\n  6. **Extended Maternity Leave Validation**: Checks if an extended maternity leave without pay has been taken immediately after the maternity leave. If not, it returns an error.\n  The formula iterates through the absence history records to accumulate the durations of maternity leave and extended maternity leave without pay, ensuring that the total duration does not exceed the allowed limit (28 weeks for extended maternity leave without pay).\n  Throughout these steps, the formula maintains a validation flag and an error message to communicate the outcome of the validation process.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates national service committee leave applications in Singapore. It ensures the application does not occur before September 23, 2019, and the manager is active. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:** \n- IV_TOTALDURATION\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- IV_ABSENCE_REASON\n- PER_ASG_REL_DATE_START\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- ABSENCE_ENTRY_ID\n- EFFECTIVE_DATE\n- HR_ASSIGNMENT_ID\n\n**Input Values:** \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_DATE1\n\n**Return Type:** \nThe formula returns a validation result, which includes a validity flag (VALID) and an error message. The validity flag is a character, and the error message is text.\n\n**Logic Summary:** \nThe formula starts by setting default values for certain variables and then initializes specific dates based on the input start date. It retrieves an absence entry ID and an effective date from the context, and it checks for attachment values related to the absence entry. \nThe formula then retrieves the manager's assignment status and HR assignment ID, changing contexts as necessary for these retrievals. \nNext, it checks the user mode and applies specific validation rules based on whether the user mode is 'ADMIN' or not. If the user mode is not 'ADMIN', it checks the start date against a specific threshold and the manager's assignment status. \nIf any of the validation checks fail, the formula returns 'N' for valid along with an appropriate error message. Otherwise, it proceeds with the logic, ultimately returning a validation result. \nThe overall logic is designed to validate certain conditions related to absence entries, user modes, and managerial assignments, ensuring data integrity and adherence to specific business rules.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates lieu leave applications in Singapore. It ensures the leave is not applied for a day worked before or on the hire date, and the manager is active. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: \n  - ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  - PER_ASG_REL_DATE_START\n  - PER_ASG_MANAGER_USER_PERSON_ID\n  - ABSENCE_ENTRY_ID\n  - HR_ASSIGNMENT_ID\n\n* **Input Values**: \n  - iv_start_date\n  - iv_end_date\n  - IV_CALEDARSTARTDATE\n  - IV_CALEDARENDDATE\n  - IV_TOTALDURATION\n  - IV_ABSENCE_REASON\n  - IV_ATTRIBUTE_DATE1\n\n* **Return Type**: \n  The formula returns a validation result indicated by the \"VALID\" variable, which is of type Text, and an error message if the validation fails.\n\n* **Logic Summary**: \n  This FastFormula validates certain conditions for an absence request. Here's how it works step by step:\n  1. It determines the start and end dates of the year based on the provided start date.\n  2. It retrieves the absence entry ID and HR assignment ID from the context.\n  3. It sets the HR assignment ID in the context to the retrieved ID, effective from the start date, and then retrieves the manager's ID associated with this assignment.\n  4. It checks if the manager's assignment status is active. If not, or if the manager ID is 0, it returns an error indicating that the manager is inactive.\n  5. It checks if the attribute date (IV_ATTRIBUTE_DATE1) is before or on the hire date (PER_ASG_REL_DATE_START). If so, it returns an error because the request cannot be applied prior to or on the hire date.\n  6. If all checks pass, the formula returns a validation result. However, the provided formula seems to implicitly return 'Y' for valid (though not explicitly shown), assuming no error conditions are met, alongside a potentially empty error message if everything is valid.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates unpaid leave applications in Thailand. It ensures no annual leave balance remains, the leave is applied after probation (more than 6 months or probation end), and all sick leave (90 days) is exhausted. It also checks the manager\u2019s active status. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: **Summary of FastFormula**\n\n* **DBI Values Used**: \n  + PER_ASG_DATE_PROBATION_END\n  + PER_ASG_GRADE_NAME\n  + GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n  + ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  + ANC_ABS_ENTRS_START_DATE\n  + ANC_ABS_ENTRS_END_DATE\n  + ANC_ABS_TYP_NAME\n  + ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  + ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  + ANC_ABS_ENTRS_DURATION\n  + ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  + ANC_ABS_ENTRS_USER_MODE\n  + PER_ASG_EMPLOYMENT_CATEGORY\n  + PER_ASG_REL_DATE_START\n  + PER_ASG_MANAGER_USER_PERSON_ID\n  + LEGISLATIVE_DATA_GROUP_ID\n  + ABSENCE_ENTRY_ID\n  + HR_ASSIGNMENT_ID\n  + EFFECTIVE_DATE\n\n* **Input Values**: \n  + iv_start_date\n  + iv_end_date\n  + IV_CALEDARSTARTDATE\n  + IV_CALEDARENDDATE\n  + IV_TOTALDURATION\n  + IV_ABSENCE_REASON\n\n* **Return Type**: The formula returns a validation result, which includes a VALID flag (indicating whether the validation was successful) and an ERROR_MESSAGE (providing details about any errors encountered).\n\n* **Logic Summary**: \n  The formula starts by initializing various default values and input parameters. It then proceeds to validate a set of conditions related to employment and absence management. \n  1. It checks the user mode and manager assignment status to determine if the current user has the required permissions to perform the action.\n  2. If the user mode is not 'ADMIN' and the manager assignment status is not 'ACTIVE', or if the manager ID is 0, it returns an error.\n  3. Next, it retrieves the annual leave balance for the employee based on their employment category and checks if the balance is greater than 0 and if the start date is after the probation end date.\n  4. If the annual leave balance is available and the conditions are met, it returns an error indicating that the annual leave balance is available.\n  5. Throughout the process, it uses various Oracle E-Business Suite functions and APIs, such as GET_CONTEXT, GET_VALUE_SET, and CHANGE_CONTEXTS, to interact with the application's data and functionality.\n  6. The formula ultimately returns a validation result, indicating whether the validation was successful or not, along with an error message if applicable.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates sick leave applications in Malaysia. It ensures the duration does not exceed 14\u201330 days (based on grade), does not allow half-days for shift workers, and requires a medical certificate for durations over 1 day. It checks the manager\u2019s active status, prevents overlap between calendar years for non-contract employees, and limits sick leave without a certificate to 5 days per year. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: ### Summary of the Oracle FastFormula\n\n#### DBI Values Used:\n- `PER_ASG_REL_DATE_START`\n- `PER_ASG_REL_ACTUAL_TERMINATION_DATE`\n- `PER_ASG_GRADE_NAME`\n- `PER_ASG_EMPLOYMENT_CATEGORY`\n- `PER_ASG_BARGAINING_UNIT_CODE_NAME`\n- `PER_ASG_USER_PERSON_TYPE`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_abs_entrs_absence_type_id`\n- `ANC_ABS_TYP_NAME`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_ENTRS_APPROVALanners_STATUS_CD`\n- `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n- `PER_PER_PERSON_NUMBER`\n- `PERSON_ID`\n- `LEGISLATIVE_DATA_GROUP_ID`\n- `ABSENCE_ENTRY_ID`\n- `HR_ASSIGNMENT_ID`\n- `EFFECTIVE_DATE`\n\n#### Input Values:\n- `iv_start_date` (date)\n- `iv_end_date` (date)\n- `IV_CALEDARSTARTDATE` (date)\n- `IV_CALEDARENDDATE` (date)\n- `IV_TOTALDURATION` (number)\n- `IV_ABSENCE_REASON` (text)\n- `IV_ATTRIBUTE_1` (text)\n- `IV_ATTRIBUTE_2` (text)\n\n#### Return Type:\nThe formula returns a validation result (`VALID`) indicating whether the input values are valid according to the defined rules, along with an error message (`ERROR_MESSAGE`) if validation fails. The return type is essentially a boolean validation outcome with possible accompanying error messages or tokens.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by initializing various variables with default or context-based values, including dates, employee information, and absence details.\n2. **Validation Checks**: It performs a series of validation checks on the input values. These checks include:\n   - Date range validations to ensure the start and end dates are not prior to a specific cutoff date.\n   - Manager status checks to ensure the manager is active.\n   - Employee grade and category checks to determine leave limits.\n   - Absence reason and duration checks, with specific rules for \"Sick Leave without Certificate\".\n3. **Leave Limit Calculations**: Based on the employee's grade and category, the formula calculates the allowed leave limit. It also considers the number of leave days already taken in the current year.\n4. **Overlap Checks**: The formula checks for overlaps between the requested leave period and existing leave entries, ensuring that the employee is not exceeding their annual leave provision or violating other leave policies.\n5. **Attachment Checks**: For certain types of leaves (e.g., sick leave with a duration of one day), the formula checks if a medical certificate is attached. If not, it prompts the user to attach the necessary documentation.\n6. **Final Validation and Return**: After performing all the necessary checks and calculations, the formula returns a validation result. If any of the checks fail, it returns an error message with relevant details. Otherwise, it indicates that the input values are valid according to the defined rules.\n\nThis summary outlines the key steps and logic of the Oracle FastFormula, providing a clear understanding of how it processes input values and returns validation outcomes based on a set of predefined rules and database values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates hospitalization leave applications in Singapore. It ensures sufficient balance exists in the hospitalization leave plan, the leave does not overlap calendar years, and the manager is active. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used**: \n- ABSENCE_ENTRY_ID\n- LEGISLATIVE_DATA_GROUP_ID\n- EFFECTIVE_DATE\n- HR_ASSIGNMENT_ID\n- PER_ASG_MANAGER_USER_PERSON_ID\n- ANC_ABS_ENTRS_USER_MODE\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n\n**Input Values**: \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type**: \nThe formula returns a validation status, indicated by the variable 'VALID', which is of type character, along with an error message and token values when validation fails.\n\n**Logic Summary**: \n1. The formula starts by retrieving various database item (DBI) values, including absence entry ID, legislative data group ID, effective date, and HR assignment ID.\n2. It checks if the start and end dates fall within the same calendar year. If not, it returns an error indicating that leave applications cannot overlap between two years.\n3. It then retrieves the manager's assignment status and person ID for the employee.\n4. If the user mode is not 'ADMIN', it performs additional checks:\n   - It validates the start date to ensure it is not prior to a specific date ('2019/09/23').\n   - It checks if the manager's assignment status is 'ACTIVE' and if the manager ID is valid. If either condition fails, it returns an error.\n5. The formula then calculates the available balance for 'Hospitalization Leave (Including Sick Leave)' as of the year-end date and checks if the requested leave duration exceeds this balance. If it does, it returns an error.\n6. If all validations pass, the formula returns a success validation status.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates hospitalization leave applications in Malaysia. It ensures sufficient balance exists in the hospitalization leave plan, the leave does not overlap calendar years, and half-days are not allowed for shift workers or union members. It checks the manager\u2019s active status. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used:**\n- ABSENCE_ENTRY_ID\n- LEGISLATIVE_DATA_GROUP_ID\n- EFFECTIVE_DATE\n- HR_ASSIGNMENT_ID\n- PERSON_ID\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_EMPLOYMENT_CATEGORY\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_BARGAINING_UNIT_CODE_NAME\n- PER_ASG_ATTRIBUTE7\n- PER_ASG_GRADE_NAME\n- ANC_ABS_ENTRS_USER_MODE\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type:**\nThe formula returns a set of validation results, including a validity flag (VALID), an error message (ERROR_MESSAGE), and other contextual information (TOKEN_NAME, TOKEN_VALUE).\n\n**Logic Summary:**\nThis FastFormula is designed to validate absence entries based on various rules, including the duration of the absence, the start and end dates, and the employee's work schedule and leave balance. Here is a step-by-step breakdown:\n1. **Initial Validation**: The formula starts by checking if the total duration of the absence is valid (a multiple of 0.5). If not, it returns an error.\n2. **Context Setup**: It sets up the necessary context for the absence entry, including the effective date, legislative data group ID, and HR assignment ID.\n3. **Manager and Employee Validation**: If the user is not an administrator, it checks if the employee has a valid manager and if the manager is active. If not, it returns an error.\n4. **Leave Balance Check**: It calculates the leave balance for the employee based on their employment category and checks if the requested leave duration exceeds the available balance. If so, it returns an error.\n5. **Date and Schedule Validation**: It checks if the absence dates overlap with the current year or exceed the allowed dates for the employee's schedule. If so, it returns an error.\n6. **Shift and Grade Restrictions**: For certain shifts and grades, it checks if half-day leaves are allowed. If not, and the requested leave duration is not a full day, it returns an error.\n7. **Final Validation and Return**: After passing all checks, it returns a validity flag indicating success, or an error message and other contextual information if any checks fail.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates hospitalization leave applications in Malaysia. It ensures sufficient balance exists in the hospitalization leave plan, the leave does not overlap calendar years, and half-days are not allowed for shift workers or union members. It checks the manager\u2019s active status. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:** \n- ABSENCE_ENTRY_ID\n- LEGISLATIVE_DATA_GROUP_ID\n- EFFECTIVE_DATE\n- HR_ASSIGNMENT_ID\n- PERSON_ID\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_BARGAINING_UNIT_CODE_NAME\n- PER_ASG_ATTRIBUTE7\n- PER_ASG_GRADE_NAME\n\n**Input Values:** \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type:** The formula returns a validation result, which is a combination of a validation flag (VALID) and an error message (ERROR_MESSAGE), along with additional context information (TOKEN_NAME, TOKEN_VALUE).\n\n**Logic Summary:** \n1. The formula initializes various variables with default or context values, including dates, employee details, and absence entry information.\n2. It checks if the total duration of an absence request is valid (can be divided by 0.5 without a remainder); if not, it returns an error.\n3. It verifies the person number and changes contexts as necessary to retrieve manager assignment details.\n4. Based on the user mode (ADMIN or not), it applies different sets of rules: for non-ADMIN users, it checks the request date against a specific cutoff date and ensures the manager's assignment status is active.\n5. It calculates the available balance for a specific leave plan based on the employee's category (contract or non-contract) and checks if the requested leave duration exceeds this balance.\n6. The formula also checks for overlap with existing leave periods within the same year, considering different rules for contract and non-contract employees.\n7. Additionally, it enforces rules about half-day leaves based on the employee's shift and grade.\n8. Finally, it retrieves attachment values related to the absence entry and returns the validation result.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the enrollment start date for absence plans in Malaysia. It uses the later of the employee\u2019s hire date or September 23, 2019, as the start date. The formula returns the calculated enrollment start date.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: PER_ASG_REL_DATE_START\n* **Input Values**: '4712/12/31 00:00:00', '2019-09-23'\n* **Return Type**: Date\n* **Logic Summary**: The formula calculates an enrollment start date by comparing the employee's assignment relationship start date with a predefined start date (September 23, 2019). If the assignment relationship start date is later than the predefined start date, the formula uses the assignment relationship start date as the enrollment start date. Otherwise, it uses the predefined start date as the enrollment start date. The formula then returns this calculated enrollment start date.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the enrollment start date for absence plans in Thailand. It uses the later of the employee\u2019s hire date or September 5, 2019, as the start date. The formula returns the calculated enrollment start date.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: PER_ASG_REL_DATE_START\n* **Input Values**: '4712/12/31 00:00:00', '2019-09-05'\n* **Return Type**: Date\n* **Logic Summary**: The formula first sets a default hire date and a specific start date. It then compares the hire date with the specific start date. If the hire date is later than the specific start date, it sets the enrollment start date to the hire date. Otherwise, it sets the enrollment start date to the specific start date. The formula then returns the determined enrollment start date.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the enrollment start date for absence plans in Singapore. It uses the later of the employee\u2019s hire date or September 23, 2019, as the start date. The formula returns the calculated enrollment start date.\n\n***Instruction for the fastformula***: **Summary**\n\n* **DBI Values Used**: PER_ASG_REL_DATE_START\n* **Input Values**: None\n* **Return Type**: Date\n* **Logic Summary**: This formula determines the enrollment start date. It first compares the hire date with a specific start date (September 23, 2019). If the hire date is later than the specified start date, it sets the enrollment start date to the hire date. Otherwise, it sets the enrollment start date to the specified start date. The formula then returns the determined enrollment start date. \n\nLet me know if you need me to adjust anything!",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates retirement leave applications in Malaysia. It ensures the leave is applied within one month of the last working day and the manager is active. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: ### Summary of the Provided Oracle FastFormula\n\n#### DBI Values Used:\n- `ANC_ABS_ENTRS_DURATION`\n- `IV_TOTALDURATION`\n- `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n- `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n- `ANC_ABS_TYP_NAME`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_ENTRS_END_DATE`\n- `ANC_ABS_ENTRS_START_DATE`\n- `IV_START_DATE`\n- `IV_END_DATE`\n- `IV_CALEDARSTARTDATE`\n- `IV_CALEDARENDDATE`\n- `PER_ASG_REL_DATE_START`\n- `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n- `ANC_ABS_ENTRS_USER_MODE`\n- `PER_ASG_REL_ACTUAL_TERMINATION_DATE`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `PER_PER_PERSON_NUMBER`\n\n#### Input Values:\n- `iv_start_date`\n- `iv_end_date`\n- `IV_CALEDARSTARTDATE`\n- `IV_CALEDARENDDATE`\n- `IV_TOTALDURATION`\n- `IV_ABSENCE_REASON`\n\n#### Return Type:\nThe formula returns a validation result, indicated by the `VALID` variable, which can be either 'Y' (valid) or 'N' (not valid), along with an `ERROR_MESSAGE` when validation fails.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by setting default values for various database items (DBIs) and inputs if they are not provided.\n2. **Context Setup**: It retrieves and sets up necessary contexts such as effective date, absence entry ID, HR assignment ID, and person ID.\n3. **Manager and Assignment Status Check**: It checks the status of the manager's assignment and the person's number to determine the user mode and validate the input dates.\n4. **Validation Checks**: The formula performs several validation checks:\n   - **Date Validation**: It checks if the start date is before a specific cutoff date ('2019/09/23').\n   - **Manager Status Validation**: It verifies if the manager's assignment status is active and if the manager ID is valid.\n   - **Termination Date Validation**: It checks if the start date is before the month of the actual termination date of the assignment.\n5. **Error Handling**: If any validation fails, it sets `VALID` to 'N', assigns an appropriate error message, and returns these values.\n6. **Success Condition**: If all validations pass, it returns a valid result, though the specific logic for a successful validation outcome is not fully detailed in the provided steps, implying a return of `VALID` as 'Y' by default when no errors are encountered.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates voluntary leave applications in Malaysia. It ensures the duration is in full or half-day increments, the leave does not overlap calendar years, and the manager is active. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: ### Summary of the FastFormula\n\n#### DBI Values Used:\n- `PER_ASG_DATE_PROBATION_END`\n- `PER_ASG_GRADE_NAME`\n- `PER_ASG_REL_DATE_START`\n- `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n- `ANC_ABS_ENTRS_USER_MODE`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `PER_PER_PERSON_NUMBER`\n\n#### Input Values:\n- `iv_start_date` (date)\n- `iv_end_date` (date)\n- `IV_CALEDARSTARTDATE` (date)\n- `IV_CALEDARENDDATE` (date)\n- `IV_TOTALDURATION` (Number)\n- `IV_ABSENCE_REASON` (Text)\n\n#### Return Type:\nThe formula returns a validation result, which includes a boolean value (`VALID`) indicating whether the input is valid, an error message, and token values for error messages.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by initializing several variables with default values or by fetching them from the database. This includes dates, personnel numbers, and manager IDs.\n2. **Input Validation**: It validates the input duration to ensure it is a multiple of 0.5, returning an error if it's not, as it requires leave durations to be in half-day increments.\n3. **Personnel and Manager Validation**: The formula checks if the personnel number is valid and, if not, sets it to a default. It then determines the manager's ID and checks the manager's assignment status to ensure it's active.\n4. **Authorization Check**: Based on the user mode (ADMIN or not) and comparisons between the personnel number, manager ID, and input values, the formula performs authorization checks to determine if the user is allowed to proceed with the absence request.\n5. **Date Checks**: The formula checks the start date of the absence against a specific cutoff date (September 23, 2019) and returns an error if it's prior to this date for certain conditions.\n6. **Manager Status and Absence Overlap**: It verifies that the manager's assignment status is active and not inactive or null, returning an error if the status is inappropriate. Additionally, it checks for any overlap of the requested absence with existing absences within the same year, returning an error if an overlap is found.\n7. **Return Validation Result**: After performing these checks, the formula returns a validation result (`VALID` or not) along with any applicable error messages or token values. This result indicates whether the absence request can proceed based on the input values and system rules.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates unpaid leave applications in Singapore. It ensures no annual leave balance remains, the leave does not overlap calendar years, and for emergency leave, a reason is provided. It also prohibits leave during the first 3 months or probation period unless all annual leave is exhausted, and checks the manager\u2019s active status. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: PER_ASG_DATE_PROBATION_END, PER_ASG_REL_DATE_START, PER_ASG_GRADE_NAME, GLOBAL_PAY_INTERFACE_EXTRACTION_DATE, IV_ATTRIBUTE_1, PER_ASG_ACTION_CODE, PER_ASG_JOB_NAME, PER_ASG_USER_PERSON_TYPE, ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR, ANC_ABS_ENTRS_DURATION, ANC_ABS_TYP_NAME, ANC_ABS_ENTRS_ABSENCE_STATUS_CD, ANC_ABS_ENTRS_END_DATE, ANC_ABS_ENTRS_START \u65e5\u671f, ANC_ABS_ENTRS_ABSENCE_TYPE_ID, ANC_ABS_ENTRS_APPROVAL_STATUS_CD, ANC_ABS_ENTRS_USER_MODE, PER_ASG_EMPLOYMENT_CATEGORY, PER_ASG_MANAGER_USER_PERSON_ID, HR_ASSIGNMENT_ID, LEGISLATIVE_DATA_GROUP_ID, PERSON_ID, EFFECTIVE_DATE, ABSENCE_ENTRY_ID\n* **Input Values**: iv_start_date, iv_end_date, IV_CALEDARSTARTDATE, IV_CALEDARENDDATE, IV_TOTALDURATION, IV_ABSENCE_REASON, IV_ATTRIBUTE_1\n* **Return Type**: The formula returns a validation result, which is either 'Y' (valid) or 'N' (not valid), along with an error message and token values if the validation fails.\n* **Logic Summary**: \n  1. The formula first checks if the start and end dates provided as input are within the same calendar year. If not, it immediately returns an error message indicating that leave applications cannot overlap between two years.\n  2. It then retrieves various details such as the user's assignment ID, legislative data group ID, person ID, and effective date.\n  3. The formula checks the user's mode and, if it's not 'ADMIN', applies additional validation rules. These include checking if the start date is prior to a specific date (September 23, 2019), verifying the manager's assignment status, and ensuring the manager ID is valid.\n  4. If the user is on probation or within three months of their hire date, the formula checks their annual leave balance. If there's an outstanding balance, it returns an error related to unpaid leave.\n  5. Throughout these checks, if any validation fails, the formula returns an error message. If all checks pass, it returns a valid result. The logic is designed to validate leave application inputs based on a set of predefined rules and employee data.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates unpaid leave applications in Thailand. It ensures no annual leave balance remains, the leave is applied after probation (more than 6 months), and all sick leave (90 days) is exhausted. It also checks the manager\u2019s active status. The formula returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: **DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_USER_PERSON_TYPE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- PER_ASG_MANAGER_USER_PERSON_ID\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n**Return Type:**\nThe formula returns two values: VALID (a flag indicating whether the leave application is valid) and ERROR_MESSAGE (the reason for the application being invalid if any).\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by setting default values for various database items and input parameters. It also retrieves necessary context values such as HR assignment ID, legislative data group ID, and person ID.\n2. **Manager Status Check**: It checks if the manager's assignment status is active and if the manager ID is valid. If not, it marks the application as invalid with an appropriate error message.\n3. **Annual Leave Balance Check**: Based on the user's employment type (fixed term contract or not), it calculates the available annual leave balance.\n4. **Sick Leave Period Calculation**: If the start date falls after the probation end date and within six months of hiring, it calculates the total sick leave days taken during the current year by iterating through absence entries.\n5. **Eligibility Check**: It checks if the user has used up their annual leave and sick leave before applying for unpaid leave. If not, or if the total sick leave days are less than 90, it marks the application as invalid with an error message.\n6. **Return Result**: Finally, it returns the validity of the application along with an error message if applicable. The logic ensures that employees can only apply for unpaid leave after utilizing their annual and sick leave balances, adhering to specific employment policies.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the duration of absences based on work schedules. It adds 1 day for each non-public holiday day between the start and end dates, adjusting for half-day starts or ends by subtracting 0.5 days. The formula returns the calculated duration.\n\n***Instruction for the fastformula***: Here is the structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used**: \n- PERSON_ID\n- CIMB_GET_PH (Value Set)\n\n**Input Values**: \n- IV_START_DATE (date)\n- IV_END_DATE (date)\n- IV_START_TIME (text)\n- IV_END_TIME (text)\n- IV_START_DURATION (number)\n- IV_END_DURATION (number)\n\n**Return Type**: \nThe formula returns a numeric value representing the calculated duration.\n\n**Logic Summary**: \nThis formula calculates the duration based on a set of input dates, times, and durations. It starts by setting up default values for the start and end dates, times, and durations if they are not provided. It then determines the person ID from the context. The formula calculates the start and end dates of the period by combining the provided dates with the start and end times. It iterates through each day in the period, checking for specific conditions related to a person's schedule (using the CIMB_GET_PH value set) on each day. If the conditions are met, it increments the unrounded duration. Adjustments are made to the duration if the start or end duration is half a day. Finally, the formula returns the calculated duration.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates the duration of absences based on work schedules. It uses a pay availability function to determine working days between start and end dates, adjusting for half-day starts or ends by subtracting 0.5 days, and adds 1 day for each non-public holiday day if no working days are found. The formula returns the calculated duration.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: PERSON_ID\n* **Input Values**: \n  + IV_START_DATE (date)\n  + IV_END_DATE (date)\n  + IV_START_TIME (text)\n  + IV_END_TIME (text)\n  + IV_START_DURATION (number)\n  + IV_END_DURATION (number)\n* **Return Type**: The formula returns a numeric value representing a duration.\n* **Logic Summary**: \n  1. The formula initializes variables to store duration and calculates the start and end dates of a period by combining the input start and end dates with the input start and end times.\n  2. It retrieves the person ID from the context and uses it to calculate the unrounded duration using the GET_PAY_AVAILABILITY function.\n  3. If the calculated duration is zero, it loops through each day in the period to calculate the duration based on specific conditions, including checking for public holidays using the GET_VALUE_SET function.\n  4. The formula then applies adjustments to the duration based on the input start and end durations, and finally adjusts the duration to a minimum of 0.5 days if it falls within a specific range.\n  5. The final calculated duration is returned as the result of the formula.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated annual leave accrual for contractors in Thailand based on band changes. Determines the number of band changes within the accrual period, assigns accrual rates before and after each change, and restricts accrual during unpaid, maternity, emergency, or Hajj leave. Adjusts accrual based on absence days and returns the final prorated accrual value.\n\n***Instruction for the fastformula***: Here is the summary:\n\n**DBI Values Used:**\n- PER_ASG_PERSON_NUMBER\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_END_DATE\n- PER_ASG_REL_ACTUAL_TERMINATION_DATE\n- PER_PERSON_ENTERPRISE_HIRE_DATE\n- PER_ASG_GRADE_NAME\n- PER_ASG_REL_DATE_START\n\n**Input Values:**\n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n- IV_EVENT_DATES\n- IV_BAND_CHG_DT1\n- IV_BAND_CHG_BEFVAL1\n- IV_BAND_CHG_AFTVAL1\n- IV_BAND_CHG_DT2\n- IV_BAND_CHG_BEFVAL2\n- IV_BAND_CHG_AFTVAL2\n- IV_BAND_CHG_DT3\n- IV_BAND_CHG_BEFVAL3\n- IV_BAND_CHG_AFTVAL3\n- IV_BAND_CHG_DT4\n- IV_BAND_CHG_BEFVAL4\n- IV_BAND_CHG_AFTVAL4\n\n**Return Type:**\nThe formula returns a numerical value representing the calculated accrual amount.\n\n**Logic Summary:**\nThe formula calculates the accrual amount for an employee's annual leave based on their hire date, accrual period, plan enrollment, and absence records. Here's a step-by-step breakdown:\n1. **Initialization**: The formula initializes various variables, including accrual rates, band change dates, and absence periods.\n2. **Accrual Period Determination**: It determines the accrual period start and end dates based on the employee's hire date and plan enrollment dates.\n3. **Absence Processing**: The formula loops through the employee's absence records, checking for absences within the accrual period. It calculates the absence duration and updates the accrued periods accordingly.\n4. **Band Change Processing**: If there are band changes within the accrual period, the formula adjusts the accrual rates and periods accordingly.\n5. **Accrual Calculation**: The formula calculates the total accrual amount by summing up the accrued periods.\n6. **Rounding and Finalization**: The formula rounds the accrual amount to the nearest whole number or half-day, depending on the decimal value.\n7. **Return**: The final accrual amount is returned as the result of the formula.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates study leave applications in Thailand. Ensures the leave start date is not before September 5, 2019, and the manager is active. Returns a validity status along with an error message if the application is invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used**: \n- `ABSENCE_ENTRY_ID`\n- `HR_ASSIGNMENT_ID`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `ANC_ABS_ENTRS_USER_MODE`\n- `EFFECTIVE_DATE`\n\n**Input Values**: \n- `iv_start_date` (date)\n- `iv_end_date` (date)\n- `IV_CALEDARSTARTDATE` (date)\n- `IV_CALEDARENDDATE` (date)\n- `IV_TOTALDURATION` (Number)\n- `IV_ABSENCE_REASON` (Text)\n\n**Return Type**: \nThe formula returns a validation result, which is a set of two values: `VALID` (indicating whether the validation is successful or not) and `ERROR_MESSAGE` (providing an error message if validation fails).\n\n**Logic Summary**: \nThis FastFormula validates absence entries based on various conditions. Here's a step-by-step breakdown:\n1. It starts by initializing several variables with input or context values, including start and end dates, absence duration, and absence reason.\n2. It retrieves the absence entry ID, effective date, HR assignment ID, and manager assignment status from the context.\n3. The formula checks if the user mode is not 'ADMIN'. If so, it proceeds with additional checks.\n4. It validates if the start date is prior to a specific date ('2019/09/05'). If true, it returns an error indicating that the date is prior to the specified date.\n5. Next, it checks if the manager's assignment status is not 'ACTIVE' or if the manager ID is 0. If either condition is true, it returns an error indicating an inactive manager or missing manager ID.\n6. If all checks pass without returning an error, the formula returns a validation result indicating success.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates maternity leave applications in Thailand. Ensures the duration does not exceed 105 days for Laos branches or 98 days (45 full pay, 53 no pay) for others, checks if full-pay maternity leave is fully utilized before no-pay, verifies the manager\u2019s active status, and ensures the application is not before September 5, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: \n  - PER_ASG_DATE_PROBATION_END\n  - PER_ASG_GRADE_NAME\n  - GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n  - IV_ABSENCE_REASON\n  - PER_ASG_REL_DATE_START\n  - PER_ASG_ORG_DEPARTMENT_NAME\n  - ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  - ANC_ABS_ENTRS_START_DATE\n  - ANC_ABS_ENTRS_END_DATE\n  - IV_EXPECTEDCHILDBIRTHDATE\n  - IV_ACTUALCHILDBIRTHDATE\n  - ANC_ABS_TYP_NAME\n  - ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  - ANC_ABS_ENTRS_DURATION\n  - ANC_ABS_ENTRS_USER_MODE\n  - PER_ASG_MANAGER_USER_PERSON_ID\n  - ANC_ABS_ENTRS_ABSENCE_REASON_ID\n  - PER_ASG_LOCATION_NAME\n\n* **Input Values**: \n  - iv_start_date\n  - iv_end_date\n  - IV_CALEDARSTARTDATE\n  - IV_CALEDARENDDATE\n  - IV_TOTALDURATION\n  - IV_ABSENCE_REASON\n  - IV_EXPECTEDCHILDBIRTHDATE\n  - IV_ACTUALCHILDBIRTHDATE\n\n* **Return Type**: \n  The formula returns a validation result, which is a set of values including a boolean validity flag (VALID), an error message (ERROR_MESSAGE), and potentially additional token names and values for error messages.\n\n* **Logic Summary**: \n  1. The formula starts by setting default values for various database items and initializing several local variables.\n  2. It checks if the input start date is before a specific date (September 5, 2019); if so, it sets the validity flag to 'N' (not valid) with a specific error message and returns.\n  3. It then checks the status of the manager's assignment; if the manager is inactive or does not exist, it sets the validity flag to 'N' with a specific error message and returns.\n  4. Based on the location and absence reason, it calculates a limit for maternity leave duration.\n  5. If the requested leave duration exceeds this limit, it sets the validity flag to 'N' with a specific error message, including the maximum allowed days and type of absence, and returns.\n  6. The formula then enters a loop to check for previous absence entries in the last 12 months, considering only non-withdrawn and approved absences.\n  7. For each relevant absence, it accumulates the duration based on the absence type (maternity leave with full pay or no pay).\n  8. After the loop, if the total accumulated duration plus the current requested duration exceeds the limit, it sets the validity flag to 'N' with a specific error message and returns.\n  9. If the absence reason is 'No Pay' and the accumulated full pay duration does not match a specific limit, it sets the validity flag to 'N' with a specific error message and returns.\n  10. Finally, it retrieves a value from a value set related to attachments for the specific absence entry and returns the validation result, which may include an error message and additional tokens for error handling.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates sick leave applications in Malaysia. Ensures the duration does not exceed 14\u201330 days (based on grade), prohibits half-days for shift workers, requires a medical certificate for durations over 1 day, checks the manager\u2019s active status, prevents overlap between calendar years for non-contract employees, and limits sick leave without a certificate to 5 days per year. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n- ANC_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_ABSENCE_REASON_ID\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_GRADE_NAME\n- PER_ASG_EMPLOYMENT_CATEGORY\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_ASG_BARGAINING_UNIT_CODE_NAME\n- PER_PER_PERSON_NUMBER\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n- IV_ATTRIBUTE_2\n\n**Return Type:**\nThe formula returns a validation result indicating whether the provided input values are valid according to the defined rules. The return type includes a validation flag (VALID), an error message (ERROR_MESSAGE), and in some cases, specific error details (TOKEN_NAME, TOKEN_VALUE).\n\n**Logic Summary:**\nThe formula starts by initializing various variables and setting default values for database items. It then checks the user mode and whether the current user is an administrator or has a specific manager ID.\n\n1. **Initial Checks**: The formula performs initial checks on the input values, such as validating the absence reason, checking for specific attribute values, and ensuring the duration is a valid number (whole or half days).\n2. **Validation Rules**: It applies several validation rules, including checks for:\n   - Sick leave without certificate exceeding a certain limit.\n   - Half-day leaves not allowed for certain shifts.\n   - Absence duration exceeding the allowed limit based on the grade name.\n   - Overlapping absences across different periods.\n3. **Context Checks**: The formula changes contexts to fetch data for specific absence entries, legislative data groups, and HR assignments. It uses these contexts to calculate the total sick leave days taken and checks against the allowed limit.\n4. **Additional Validations**: Further checks are performed for sick leave without certificates, including verifying if the total duration exceeds a certain limit and ensuring that there are no overlapping sick leaves without certificates on consecutive days.\n5. **Final Validation and Error Handling**: If any validation fails, the formula returns an error message indicating the specific reason for the failure. If all validations pass, it returns a valid flag.\n6. **Attachments Check**: For absences that are not sick leave without certificates, the formula checks if a medical certificate is attached. If not, it returns an error message.\n7. **Return Statement**: Finally, the formula returns the validation result based on the checks performed.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates adoption/paternity leave applications in Malaysia. Ensures the leave start date matches the child\u2019s birth date, the employee has worked at least 3 months, prohibits leave during probation for contract employees, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n- PER_PER_CONTACT_DATE_OF_BIRTH\n- PER_ASG_DATE_PROBATION_END\n- PER_PER_CONT_REL_CONTACT_TYPE\n- PER_PER_CONT_REL_CONTACT_PERSON_ID\n- ANC_ABS_ENTRS_USER_MODE\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_ACTUALCHILDBIRTHDATE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n**Input Values:**\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_CALEDARSTARTDATE (date)\n- IV_CALEDARENDDATE (date)\n- IV_TOTALDURATION (Number)\n- IV_ABSENCE_REASON (Text)\n- IV_EXPECTEDCHILDBIRTHDATE (DATE)\n- IV_ACTUALCHILDBIRTHDATE (DATE)\n\n**Return Type:**\nThe formula returns a validation result, specifically a boolean value ('Y' for valid, 'N' for not valid) along with an error message when the validation fails.\n\n**Logic Summary:**\nThe formula's logic can be broken down into the following steps:\n1. **Initialization**: It starts by initializing various variables, including default values for dates, IDs, and other parameters.\n2. **Context Setup**: It sets up the context for the HR assignment and absence entry IDs.\n3. **Person Number Retrieval**: It attempts to retrieve the foundation person number and handles cases where it might be null.\n4. **Manager Assignment Status Check**: It checks the assignment status of the manager associated with the current person.\n5. **User Mode and Validation**: Based on the user mode and person number, it performs various validations, including checks for dates (start date before a specific threshold, match between child's birth date and start date), manager's assignment status, and existence of contact persons of a certain type.\n6. **Probation Period Check**: It checks if the start date falls within a probation period.\n7. **Return Validation Result**: Finally, it returns a validation result ('Y' or 'N') along with an appropriate error message if the validation fails at any step. Each step of validation failure provides a specific error message related to the type of failure (e.g., date mismatch, inactive manager, etc.).",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates compassionate leave applications in Malaysia. Ensures the duration does not exceed 3\u20135 days (based on grade and reason), prohibits overlap between calendar years for non-contract employees, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the FastFormula:\n\n### DBI Values Used\n- ANC_ABS_ENTRS_DURATION \n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- IV_START_DATE\n- IV_END_DATE\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- ANC_ABS_ENTRS_ABSENCE_REASON_ID\n- PER_ASG_GRADE_NAME\n- IV_ABSENCE_REASON\n- PER_ASG_REL_DATE_START\n- PER_ASG_PROJECTED_ASSIGNMENT_END_DATE\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_SEX\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n### Input Values\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n### Return Type\nThe formula returns a validation flag (`VALID`) along with an error message if validation fails.\n\n### Logic Summary\nThe FastFormula is used to validate absence entries based on various conditions. Here's a step-by-step breakdown:\n1. **Initialization**: The formula initializes various default values for absence entries, including duration, approval status, and absence type.\n2. **Date Calculations**: It calculates the start and end dates of the year based on the global pay interface extraction date and the start date of the absence entry.\n3. **Context Setup**: The formula sets up contexts for the HR assignment ID, effective date, and absence entry ID to retrieve relevant data.\n4. **Validation Checks**: It performs several validation checks, including:\n   - Checking if the absence entry is prior to a specific date (2019/09/23).\n   - Verifying the manager's assignment status and person ID.\n   - Checking the grade name and absence reason to determine the maximum allowed duration.\n   - Validating the employment category and absence overlap with existing entries.\n5. **Contract Employee Checks**: For contract employees, the formula calculates the year start date based on the hire date and checks the grade name to determine the limit on compassionate leave days.\n6. **Compassionate Leave Checks**: It checks for compassionate leave entries within the calculated year and verifies if the total duration exceeds the limit.\n7. **Error Handling**: If any validation fails, the formula sets an error message and returns the validation flag (`VALID`) as 'N'.\n8. **Return**: Finally, the formula returns the validation flag (`VALID`) and an error message if validation fails.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates compassionate leave applications in Malaysia. Ensures the duration does not exceed 3\u20135 days (based on grade and reason), prohibits overlap between calendar years for non-contract employees, verifies the manager\u2019s active status, restricts applications before September 23, 2019, and checks leave duration increments (half-day or full-day). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: ### FastFormula Summary\n\n#### DBI Values Used:\n- `absence_entry_id`\n- `legislative_data_group_id`\n- `effective_date`\n- `hr_assignment_id`\n- `person_id`\n\n#### Input Values:\n- `iv_start_date` (date)\n- `iv_end_date` (date)\n- `iv_caledarstartdate` (date)\n- `iv_caledarenddate` (date)\n- `iv_totalduration` (number)\n- `iv_absence_reason` (text)\n\n#### Return Type:\nThe formula returns a validation result (`valid`), which is a string indicating whether the input is valid or not, along with an `error_message` when validation fails.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by setting default values for various database items and input parameters.\n2. **Duration Validation**: It checks if the total duration of absence is in half-day increments; otherwise, it returns an error.\n3. **Employee Eligibility Check**: It verifies if the employee applying for leave is eligible based on their person number and manager's assignment status.\n4. **Absence Reason Validation**: It checks the absence reason and applies different rules based on the type of absence (e.g., 'Death in Family', 'Serious Illness', 'Disaster', 'Paternity', 'Adoption').\n5. **Leave Balance Check**: For contract employees, it calculates the annual limit of compassionate leave and checks if the requested leave exceeds this limit.\n6. **Document Validation**: It checks if a mandatory document is attached for certain types of leaves.\n7. **Final Validation**: After passing all checks, the formula returns a validation result. If any check fails, it returns an error message indicating the reason for the failure.\n8. **Specific Grade and Employment Category Rules**: It applies additional rules based on the employee's grade and employment category, including limits on the number of days that can be taken for certain types of leave.\n9. **Error Handling**: Returns specific error messages for various scenarios, such as exceeding the annual limit, ineligible leave types for certain grades or employment categories, and missing documents.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates marriage leave applications in Malaysia. Ensures the duration does not exceed 5\u201310 days (based on grade), the leave is applied within 6 months of the marriage registration or ceremony date, prohibits leave during probation, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- IV_ATTRIBUTE_DATE1\n- IV_ATTRIBUTE_DATE2\n- PER_ASG_GRADE_NAME\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MARITAL_STATUS\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_DATE1\n- IV_ATTRIBUTE_DATE2\n\n**Return Type:**\nThe formula returns a validation result, which includes a VALID flag (indicating whether the validation was successful or not), an ERROR_MESSAGE (providing details about the validation failure), and optionally, TOKEN_NAME and TOKEN_VALUE pairs for additional error context. The return type is essentially a set of values that indicate the outcome of the validation process.\n\n**Logic Summary:**\nThis FastFormula is designed to validate absence or leave requests based on various conditions. Here is a step-by-step breakdown of its logic:\n1. **Initialization**: The formula starts by setting default values for certain database items (DBIs) and input values if they are not provided.\n2. **Duration Validation**: It checks if the duration of the leave or absence request is valid (specifically, if it's a multiple of half days). If not, it returns an error message indicating incorrect duration.\n3. **Person Number Validation**: It retrieves the person number associated with the request and checks if it's valid. If invalid, it proceeds with a default assumption.\n4. **Manager Assignment Validation**: For non-admin users, it checks the manager's assignment status and ensures it's active. If the manager is inactive or not assigned, it returns an error.\n5. **Probation Period Check**: It checks if the absence start date falls within the probation period. If so, it returns an error.\n6. **Leave Duration Checks Based on Grade**: It applies different maximum leave duration rules based on the employee's grade, ensuring that the requested leave duration does not exceed these limits. If exceeded, it returns an error with the maximum allowed days.\n7. **Date Checks**: It also checks if the leave start date is after a certain cutoff date and if specific attribute dates (IV_ATTRIBUTE_DATE1 and IV_ATTRIBUTE_DATE2) plus six months are before the start date of the leave. If these conditions are not met, it returns respective error messages.\n8. **Final Validation Result**: If none of the above conditions return an error, the formula indicates a successful validation (VALID = 'Y'). Otherwise, it returns the specific error messages and validation failures encountered during the process.\n\nThis summary should provide a clear overview of the FastFormula's purpose and logic, enabling someone familiar with Oracle FastFormula to understand and potentially recreate it based on the provided information.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates sports leave applications in Malaysia. Ensures the duration does not exceed 3 days, prohibits leave during probation, prevents overlap between calendar years, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type:**\nThe formula returns a validation result, which includes a validation flag (VALID), an error message (ERROR_MESSAGE), and potentially token names and values for further error handling or messaging.\n\n**Logic Summary:**\n1. The formula starts by validating if the total duration of absence is correct according to the organization's rules. If the duration is not a multiple of half a day, it returns an error.\n2. It checks if the person's number is not null and then changes the assignment and effective date contexts to retrieve the manager's ID and status.\n3. Based on the user mode and the relationship between the applicant and the manager, it validates various conditions such as the start date being prior to a specific cutoff date, the manager's assignment status, and the maximum allowed days of absence.\n4. It checks for overlapping absences within the same year, ensuring that the absence being applied for does not overlap with existing approved absences of a specific type (Sports Leave).\n5. Throughout these validations, if any condition is not met, the formula returns with an appropriate error message indicating the reason for the validation failure.\n6. If all validations pass, the formula concludes by returning a success validation indicator. \n\nThis summary captures the essence of the formula's logic without detailing the specific code, allowing one to understand the purpose and flow of the FastFormula.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates Hajj leave applications in Malaysia. Ensures the duration does not exceed 30\u201340 days (based on grade), the employee has 5\u201310 years of service, no prior Hajj leave exceeds the entitlement, departure and arrival dates are valid, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the provided Oracle FastFormula:\n\n**DBI Values Used:** \n- PER_ASG_REL_DATE_START \n- PER_ASG_GRADE_NAME \n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD \n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR \n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID \n- ANC_ABS_TYP_NAME \n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD \n- ANC_ABS_ENTRS_DURATION \n- ANC_ABS_ENTRS_USER_MODE \n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE \n- PER_ASG_MANAGER_USER_PERSON_ID \n- PER_PER_PERSON_NUMBER \n- IV_ATTRIBUTE_DATE1 \n- IV_ATTRIBUTE_DATE2 \n- PER_ASG_EMPLOYMENT_CATEGORY \n- PER_ASG_JOB_NAME \n\n**Input Values:** \n- iv_start_date \n- iv_end_date \n- IV_CALEDARSTARTDATE \n- IV_CALEDARENDDATE \n- IV_TOTALDURATION \n- IV_ABSENCE_REASON \n- IV_ATTRIBUTE_DATE1 \n- IV_ATTRIBUTE_DATE2 \n\n**Return Type:** \nThe formula returns a validation result (VALID) which is a character indicating whether the input data is valid or not, along with an ERROR_MESSAGE and potentially TOKEN_NAME and TOKEN_VALUE, which provide more details about the validation result.\n\n**Logic Summary:** \nThis FastFormula validates leave requests based on various conditions and rules. Here is a step-by-step summary of its logic:\n1. **Initialization**: The formula starts by initializing various variables with default values or by fetching data from the database.\n2. **Duration Validation**: It checks if the leave duration is correct and in line with the working hours. If the duration is not a multiple of 0.5, it returns an error.\n3. **User Mode and Manager Status Check**: Depending on the user mode (ADMIN or not), it checks the manager's assignment status and ensures that the manager is active. If not, it returns an error.\n4. **Minimum Years of Service Check**: For certain job grades, it checks if the employee has completed the minimum required years of service before applying for a specific type of leave (e.g., Hajj Leave). If not, it returns an error.\n5. **Leave Duration Limit Check**: It checks if the requested leave duration exceeds the allowed limit (e.g., 40 days for certain grades, 30 days for others). If exceeded, it returns an error.\n6. **Previous Leave Check**: For certain leave types, it checks if the employee has already applied for a similar leave within a specific timeframe. If so, it returns an error.\n7. **Date Validation**: Finally, it validates the leave start and end dates to ensure they are within the allowed period and that the arrival date is not before the departure date.\n8. **Return Validation Result**: Based on these checks, the formula returns a validation result (VALID or NOT VALID) along with an error message, if any.\n\nThe formula seems to be designed for managing and validating leave requests in a specific organizational context, taking into account various rules, job grades, and service periods.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates Hajj leave applications in Malaysia. Ensures the duration does not exceed 30\u201340 days (based on grade), the employee has 5\u201310 years of service, no prior Hajj leave exceeds the entitlement, departure and arrival dates are valid, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_USER_MODE\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- IV_ATTRIBUTE_DATE1\n- IV_ATTRIBUTE_DATE2\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_DATE1\n- IV_ATTRIBUTE_DATE2\n\n**Return Type:**\nThe formula returns a validation indicator (VALID), an error message (ERROR_MESSAGE), and additional token information (TOKEN_NAME and TOKEN_VALUE) if applicable.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by setting default values for various database items (DBIs) and initializing input parameters.\n2. **Validation Checks**: It checks if the duration of leave is valid (in increments of 0.5 days). If not, it returns an error message.\n3. **User Mode and Manager Status**: It determines the user mode and checks the manager's assignment status.\n4. **Eligibility for Leave**: Based on the employee's grade, it checks if they are eligible for leave, considering factors like years of service.\n5. **Leave Duration Validation**: It validates the leave duration against the maximum allowed days for the specific type of leave (e.g., Hajj leave).\n6. **Yearly Leave Limit**: It checks if the employee has exceeded the yearly limit for a specific type of leave by looking at their absence history.\n7. **Travel Dates Validation**: Finally, it validates the travel dates (arrival and departure) against the leave start and end dates.\n8. **Return Validation Result**: Based on these checks, the formula returns a validation indicator along with an error message if the validation fails.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates transfer leave applications in Malaysia. Ensures the duration does not exceed 3\u20135 days (based on grade and union membership), is applied within 12 months of the transfer date, restricts to union members, verifies the manager\u2019s active status, and prohibits applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is the summary of the provided FastFormula:\n\n* **DBI Values Used**: PER_ASG_GRADE_NAME, PER_ASG_EMPLOYMENT_CATEGORY, ANC_ABS_ENTRS_USER_MODE, PER_ASG_MANAGER_USER_PERSON_ID, PER_PER_PERSON_NUMBER, PER_ASG_ATTRIBUTE7, ANC_ABS_ENTRS_APPROVAL_STATUS_CD, ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR, ANC_ABS_ENTRS_ABSENCE_TYPE_ID, ANC_ABS_ENTRS_DURATION, ANC_ABS_TYP_NAME, ANC_ABS_ENTRS_ABSENCE_STATUS_CD, ANC_ABS_ENTRS_END_DATE, ANC_ABS_ENTRS_START_DATE\n* **Input Values**: iv_start_date, iv_end_date, IV_CALEDARSTARTDATE, IV_CALEDARENDDATE, IV_TOTALDURATION, IV_ABSENCE_REASON, IV_ATTRIBUTE_DATE1\n* **Return Type**: The formula returns a validation result, including a validation flag (VALID) and an error message (ERROR_MESSAGE), along with token names and values if applicable.\n* **Logic Summary**: \n  1. The formula initializes various variables and checks the duration of the leave to ensure it meets the minimum requirements. If not, it returns an error.\n  2. It checks if the employee's person number is valid and retrieves the manager's assignment status.\n  3. Based on the user mode, it applies different validation rules, including checking the start date, manager's status, and employee's eligibility for the leave.\n  4. It checks the leave type and applies specific rules for transfer leaves, including calculating the total days taken and ensuring it does not exceed the limit.\n  5. The formula iterates through previous leave entries to check for overlapping or conflicting leaves and returns an error if any conditions are not met.\n  6. Finally, it returns a validation result, including a flag, error message, and token values if applicable, based on the outcome of the various checks and validations.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates the duration of half-day absences for employees in Singapore based on work schedules and rosters. Determines if an absence is a full day or half day by comparing entered absence hours to total assigned shift hours, counting half-day absences as 0.5 days if less than half the shift hours, and full days if equal to or exceeding shift hours, with adjustments for midnight spans. Returns the calculated duration.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n### DBI Values Used:\nThe following DBI (Database Item) values are referenced in the formula:\n- `PERSON_ID`\n- `HR_ASSIGNMENT_ID`\n- `ABSENCE_TYPE_ID`\n- `PER_PER_PERSON_NUMBER`\n\n### Input Values:\nThe formula accepts the following input values:\n- `IV_ACCRUALPERIODENDDATE` (date)\n- `IV_ACCRUALPERIODSTARTDATE` (date)\n- `IV_TERM_ID`\n- `IV_START_DATE` (date)\n- `IV_END_DATE` (date)\n- `IV_START_TIME` (text)\n- `IV_TOTALDURATION` (number)\n- `IV_START_DURATION` (number)\n- `IV_END_DURATION` (number)\n- `IV_ABS_START_DURATION` (number)\n- `IV_ABS_END_DURATION` (number)\n- `IV_END_TIME` (text)\n\n### Return Type:\nThe formula returns a numeric value representing the calculated duration.\n\n### Logic Summary:\n1. **Initialization**: The formula starts by initializing various variables and setting default values for dates, durations, and flags. It retrieves the person ID, assignment ID, and absence type ID from the context.\n2. **Date Loop**: It then enters a loop that iterates over each day between the start and end dates provided as input.\n3. **Shift Details Processing**: For each day, it checks if there are published or assigned shift details available. If shifts are found, it calculates the total assigned hours for the day.\n4. **Duration Calculation**: Based on the total assigned hours and the duration of the shift, it calculates an unrounded duration value. This calculation considers whether the shift duration is less than 4 hours or not and adjusts the unrounded duration accordingly.\n5. **Iteration and Accumulation**: This process is repeated for each day in the date range, and the unrounded duration values are accumulated.\n6. **Final Calculation**: After processing all days, the formula returns the total accumulated unrounded duration as the final result.\n7. **Context and Value Sets**: Throughout the formula, various value sets and contexts are used to retrieve specific data, such as scheduled durations and shift details, based on the person, assignment, and dates.\n8. **Conditional Logic**: The formula employs extensive conditional logic to handle different scenarios based on the presence of shifts, their timing, and their duration, ensuring that the calculation accurately reflects the required duration.\n\nThis summary encapsulates the key steps and logic of the Oracle FastFormula without delving into the specific code details, providing a clear understanding of how the formula processes input values to calculate the duration.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Determines the enrollment end date for absence plans for contractors in Malaysia. Uses the employee\u2019s actual termination date if available, otherwise defaults to the context end date. Returns the calculated enrollment end date.\n\n***Instruction for the fastformula***: Here is the summary of the provided FastFormula:\n\n* **DBI Values Used**: PER_ASG_USER_PERSON_TYPE, PER_ASG_REL_ACTUAL_TERMINATION_DATE\n* **Input Values**: EFFECTIVE_DATE, END_DATE\n* **Return Type**: Date\n* **Logic Summary**: \n    1. The formula first checks if the actual termination date has been provided or is still at its default value.\n    2. If a specific actual termination date is given (not defaulted), it uses this date as the enrollment end date.\n    3. If the actual termination date is still at its default value, it uses the end date (derived from the context) as the enrollment end date.\n    4. The formula then returns the determined enrollment end date.\n    5. The formula also considers the effective date and end date from the context, but uses them as defaults if other specific dates are not provided. \n\nThis description should allow someone to understand the logic and potentially recreate the FastFormula based on the explanation provided.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates pilgrimage leave applications in Malaysia. Ensures sick leave and hospitalization leave balances are zero, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used**: \n- ANC_ABS_ENTRS_USER_MODE \n- PER_ASG_MANAGER_USER_PERSON_ID \n- PER_PER_PERSON_NUMBER \n- LEGISLATIVE_DATA_GROUP_ID \n- PERSON_ID \n- HR_ASSIGNMENT_ID \n\n**Input Values**: \n- iv_start_date \n- iv_end_date \n- IV_CALEDARSTARTDATE \n- IV_CALEDARENDDATE \n- IV_TOTALDURATION \n- IV_ABSENCE_REASON \n\n**Return Type**: \nThe formula returns a validation result, which is a combination of a flag indicating whether the validation was successful (VALID) and an error message if the validation fails.\n\n**Logic Summary**: \nThe formula starts by initializing various variables, including balances for hospitalization and sick leave. It retrieves the legislative data group ID, the year-end date based on the start date, and checks for the existence of a specific person number. It then sets up contexts for the HR assignment ID and effective date. The formula checks the user mode and compares it against specific conditions related to the person number and manager ID. If the start date is before a specific cutoff date, it immediately returns an error. Otherwise, it calculates the balances of hospitalization and sick leave as of the year-end date. If either balance is greater than zero, it returns an error indicating that these leaves must be completely used before proceeding. If none of these conditions trigger an error, the formula returns a validation success. The overall logic is designed to validate the eligibility of an employee to apply for a certain type of leave based on their leave balances and the date of application.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates no-pay leave applications in Malaysia. Ensures the annual leave balance is zero, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used**: \n- LEGISLATIVE_DATA_GROUP_ID\n- Defaults for 'Annual Leave Plan Employee' and 'Annual Leave Plan Contractor' plans\n\n**Input Values**: \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type**: \nThe formula returns a validation result, which includes a VALID flag (text) indicating whether the validation passed or failed and an ERROR_MESSAGE (text) providing a reason if the validation failed.\n\n**Logic Summary**: \n1. The formula starts by initializing variables to track annual leave balance and the legislative data group ID.\n2. It calculates the year-end date based on the provided start date.\n3. The formula then checks the annual leave balance for the employee under the current legislative data group context, adjusting the context to the calculated year-end date.\n4. If the employee's annual leave balance is not available, it checks the balance for a contractor plan.\n5. If any annual leave balance is found (i.e., greater than 0), the formula returns an invalid status with an error message indicating that the application can only proceed if the annual leave has been completely used.\n6. The validation result is returned, indicating whether the process can continue based on the annual leave balance.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates exam leave applications in Malaysia. Ensures the duration does not exceed 5\u20137 days (based on grade), the leave start date matches the exam date, prohibits leave during probation, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: \n  + PER_ASG_DATE_PROBATION_END\n  + PER_ASG_GRADE_NAME\n  + ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  + ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  + ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  + ANC_ABS_TYP_NAME\n  + ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  + ANC_ABS_ENTRS_DURATION\n  + IV_ATTRIBUTE_DATE1\n  + PER_ASG_EMPLOYMENT_CATEGORY\n  + ANC_ABS_ENTRS_USER_MODE\n  + PER_ASG_MANAGER_USER_PERSON_ID\n  + PER_PER_PERSON_NUMBER\n* **Input Values**: \n  + iv_start_date\n  + iv_end_date\n  + IV_CALEDARSTARTDATE\n  + IV_CALEDARENDDATE\n  + IV_TOTALDURATION\n  + IV_ABSENCE_REASON\n  + IV_ATTRIBUTE_DATE1\n* **Return Type**: The formula returns a validation result indicating whether the absence request is valid or not, along with an error message if the request is invalid.\n* **Logic Summary**: \n  1. The formula starts by initializing various variables and setting default values for database items.\n  2. It checks if the leave duration is a multiple of 0.5 and returns an error if it's not.\n  3. It retrieves the employee's person number and checks if it's valid. If not, it returns an error.\n  4. It checks the user mode and manager's assignment status, and returns an error if the manager is inactive or the user is not an admin.\n  5. It checks if the start date is before a specific cutoff date and returns an error if it is.\n  6. It checks the employee's probation end date, employment category, and grade name, and returns an error if any of these conditions are not met.\n  7. It checks the leave duration against a maximum allowed limit based on the employee's grade name, and returns an error if it exceeds the limit.\n  8. It checks for existing absence entries for the same employee and returns an error if there are overlapping absences.\n  9. It checks the attribute date and start date, and returns an error if they are not the same.\n  10. Finally, it checks for attachments and returns an error if any conditions are not met. If all checks pass, the formula returns a valid result.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates study leave applications in Malaysia. Ensures the duration does not exceed 5 days, the leave start date is within 14 days of the exam/study date, prohibits leave during probation, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the provided FastFormula:\n\n**DBI Values Used:** \n- PER_ASG_DATE_PROBATION_END\n- IV_ATTRIBUTE_DATE1\n- PER_ASG_GRADE_NAME\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n**Input Values:** \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_DATE1\n\n**Return Type:** \nThe formula returns a validation result, which includes a validation flag (VALID), an error message (ERROR_MESSAGE), and possibly additional token names and values.\n\n**Logic Summary:** \n\n1. **Initialization**: The formula starts by initializing various variables with default values and input parameters.\n2. **Validation Checks**: It then performs a series of validation checks. \n   - Checks if the leave duration is valid (in increments of 0.5 days) and returns an error if not.\n   - Verifies if the person number is valid and sets up context for HR assignment and effective dates.\n3. **Manager Validation**: \n   - Checks the status of the manager's assignment and ensures the manager is active.\n4. **Date-Based Validations**: \n   - Checks if the leave start date is before a specific date (September 23, 2019), during the probation period, or outside allowed dates for certain leave types.\n   - Validates the attribute date (e.g., examination date) to ensure it falls within a specific window around the leave dates.\n5. **Absence History Check**: \n   - Loops through existing absence entries for the year to check for overlapping leaves, especially for examination and study leaves.\n   - Accumulates durations of previous examination and study leaves to check against total allowed durations.\n6. **Overlap Check**: \n   - Checks for leaves that overlap with the current year's boundaries.\n7. **Return**: \n   - Based on the validations, the formula returns a validation result, which may include an error message if any of the checks fail, or a success indicator if all checks pass.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates leave for CSR in Malaysia. Ensures the employee has at least 2 years of service, prohibits leave during probation, prevents overlap between calendar years, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the FastFormula:\n\n**DBI Values Used:** \n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_GRADE_NAME\n- PER_ASG_REL_DATE_START\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n**Input Values:** \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type:** \nThe formula returns a set of values including a validation flag (VALID), an error message (ERROR_MESSAGE), and in some cases, tokens (TOKEN_NAME and TOKEN_VALUE) indicating specific error conditions.\n\n**Logic Summary:** \nThe formula performs a series of checks to validate the input dates and absence details. \n1. It starts by setting some default values for DBIs and input parameters.\n2. It calculates specific dates such as the start and end of the year based on the GLOBAL_PAY_INTERFACE_EXTRACTION_DATE.\n3. The formula checks the user mode and person IDs to determine if the user is an admin or a manager, affecting how it validates the absence request.\n4. It validates if the start date of the absence is before a specific cutoff date (September 23, 2019), returning an error if true.\n5. The formula checks the manager's assignment status and returns an error if the manager is inactive or not assigned.\n6. It then checks if the absence start date falls within the probation period of the employee or if the employee has not completed the minimum years of service, returning specific error messages based on these conditions.\n7. Finally, it checks for overlap of the absence period with a predefined annual period, returning an error if there's an overlap.\n8. Throughout these checks, the formula returns validation flags (VALID) and error messages as necessary, providing feedback on the status of the absence request validation.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates exam leave applications in Singapore. Ensures the duration does not exceed 3 days, the leave start date matches the exam date, prohibits leave during probation, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: **Summary**\n### DBI Values Used\nThe following database items (DBIs) are referenced in the formula:\n- `ABSENCE_ENTRY_ID`\n- `HR_ASSIGNMENT_ID`\n- `EFFECTIVE_DATE`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n- `ANC_ABS_TYP_NAME`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n- `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n\n### Input Values\nThe formula accepts the following input values:\n- `iv_start_date` (date)\n- `iv_end_date` (date)\n- `IV_CALEDARSTARTDATE` (date)\n- `IV_CALEDARENDDATE` (date)\n- `IV_TOTALDURATION` (Number)\n- `IV_ABSENCE_REASON` (Text)\n- `IV_ATTRIBUTE_DATE1` (DATE)\n\n### Return Type\nThe formula returns a validation result (`VALID`) along with an error message (`ERROR_MESSAGE`) and associated tokens (`TOKEN_NAME` and `TOKEN_VALUE`) if the input data fails certain validation checks.\n\n### Logic Summary\n1. **Initial Validation**: The formula first checks if the start and end dates span across two different calendar years. If so, it returns an error message indicating that leave applications cannot overlap between two years.\n2. **Setup and Context**: It then sets up context variables such as the HR assignment ID, effective date, and manager's person ID. It checks the manager's assignment status and ensures it is active.\n3. **Probation Check**: The formula checks if the start date of the leave is before the probation end date. If so, it raises an error related to absence during probation.\n4. **Validation Against Existing Absences**: It loops through existing absence entries for the same year, checking for overlapping examination leaves that have not been withdrawn, denied, or saved. It accumulates the total duration of such absences.\n5. **Total Duration Check**: If the total duration of the current leave request plus the accumulated duration of existing absences exceeds a certain threshold (3 days), it returns an error regarding the maximum allowed days.\n6. **Final Validation and Return**: After passing all checks, the formula returns a validation result indicating success or failure, along with any relevant error messages or tokens.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates maternity leave applications in Singapore. Ensures the employee has worked at least 3 months, the duration does not exceed 56 days, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: ### Summary of the Provided FastFormula\n\n#### DBI Values Used:\n- `PER_PER_CONTACT_DATE_OF_BIRTH`\n- `PER_PER_CONTACT_CONTACT_TYPE`\n- `PER_PER_CONTACT_PERSON_ID`\n- `PER_EXT_PERSON_CITIZENSHIP_NATIONALITY`\n- `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n- `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n- `ANC_ABS_ENTRS_DURATION`\n- `ANC_ABS_TYP_NAME`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_ENTRS_END_DATE`\n- `ANC_ABS_ENTRS_START_DATE`\n- `PER_ASG_REL_DATE_START`\n- `ANC_ABS_ENTRS_USER_MODE`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n\n#### Input Values:\n- `iv_start_date` (date)\n- `iv_end_date` (date)\n- `IV_CALEDARSTARTDATE` (date)\n- `IV_CALEDARENDDATE` (date)\n- `IV_TOTALDURATION` (Number)\n- `IV_ABSENCE_REASON` (Text)\n\n#### Return Type:\nThe formula returns a validation result, which is a text indicating whether the provided inputs are valid or not, along with an error message if the validation fails.\n\n#### Logic Summary:\n1. The formula starts by setting default values for various database items and initializing local variables.\n2. It retrieves the person ID of the current user and the effective date from the context.\n3. It then changes the context to set the HR assignment ID and effective date for further queries.\n4. The formula checks the manager's assignment status and person ID.\n5. If the user mode is not 'ADMIN', it performs several checks:\n   - It validates if the start date is before a specific cutoff date.\n   - It checks if the manager's assignment status is active and if the manager ID is valid.\n   - It verifies if the start date is more than three months after the relationship start date.\n6. For each validation failure, it sets the validation result to 'N' (not valid), assigns an appropriate error message, and returns these values.\n7. If all checks pass, the formula returns a validation result indicating success.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates extended maternity leave applications in Singapore. Ensures the leave is applied within 12 months of the child\u2019s birth, follows 56 days of maternity leave, and does not exceed 28 days total across multiple blocks, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used**: \n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- PER_PER_CONTACT_DATE_OF_BIRTH\n- PER_PER_CONTACT_CONTACT_TYPE\n- PER_PER_CONTACT_PERSON_ID\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- PER_ASG_REL_DATE_START\n- PER_EXT_PERSON_CITIZENSHIP_NATIONALITY\n- PER_PER_CONT_REL_CONTACT_TYPE\n- PER_PER_CONT_REL_CONTACT_PERSON_ID\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n\n**Input Values**: \n- IV_START_DATE\n- IV_END_DATE\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_ACTUALCHILDBIRTHDATE\n\n**Return Type**: The formula returns a validation result, which is a combination of a boolean validity flag (VALID) and an error message (ERROR_MESSAGE) along with tokenized values for specific error details when applicable.\n\n**Logic Summary**: \n1. The formula initializes various variables and context values, including dates, absence types, and personnel information, either from defaults or input values.\n2. It checks if the user mode is 'ADMIN' and proceeds with validation checks only if the user is not an admin.\n3. It performs a series of date-based validation checks:\n   - It verifies if the start date is prior to a specific cutoff date ('2019/09/23').\n   - It checks the status of the manager's assignment.\n   - It ensures the child's age is not beyond 12 months from the actual childbirth date.\n4. For each validation failure, it sets an appropriate error message and tokenized error details before returning the result.\n5. It calculates the duration of 'Extended Maternity Leave' and 'Maternity Leave' based on specific date ranges and checks against entitlement limits.\n6. If all validations pass, it returns a valid result; otherwise, it returns an error message with relevant details. \n7. The logic flow suggests a focus on validating maternity leave application details, ensuring compliance with organizational policies and entitlement rules.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Retrieves compensation data for absence plans in Thailand. Checks for specific absence types (e.g., annual, sick, Hajj, monkhood) with block leave reasons within a specified period, determining if compensation limits are exceeded. Returns a status indicating whether compensation data exists.\n\n***Instruction for the fastformula***: **Summary of the FastFormula**\n\n* **DBI Values Used**: PER_ASG_PERSON_NUMBER, ANC_ABS_TYP_NAME, ANC_ABS_PLN_NAME, PER_ASG_REL_DATE_START, ANC_ABS_ENTRS_APPROVAL_STATUS_CD, ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR, ANC_ABS_ENTRS_ABSENCE_TYPE_ID, ANC_ABS_ENTRS_DURATION, ANC_ABS_TYP_NAME, ANC_ABS_ENTRS_ABSENCE_STATUS_CD, ANC_ABS_ENTRS_ABSENCE_REASON_ID, ANC_ABS_ENTRS_END_DATE, ANC_ABS_ENTRS_START_DATE, PER_ASG_GRADE_NAME, PER_ASG_JOB_NAME, ANC_ABS_ENTRS_ATTRIBUTE1\n* **Input Values**: IV_ACCRUAL, IV_ACCRUALPERIODENDDATE, IV_ACCRUALPERIODSTARTDATE, IV_PLANENROLLMENTSTARTDATE, IV_PLANENROLLMENTENDDATE, IV_CALEDARENDDATE, IV_CALEDARSTARTDATE, IV_EVENT_DATES, IV_BAND_CHG_DT1, IV_BAND_CHG_BEFVAL1, IV_BAND_CHG_AFTVAL1, IV_BAND_CHG_DT2, IV_BAND_CHG_AFTVAL2, IV_BAND_CHG_BEFVAL2, IV_BAND_CHG_DT3, IV_BAND_CHG_BEFVAL3, IV_BAND_CHG_AFTVAL3, IV_BAND_CHG_DT4, IV_BAND_CHG_AFTVAL4, IV_BAND_CHG_BEFVAL4, check_start_date, check_end_date, comp_limit, CURR_YR_ST_date, CURR_YR_END_date\n* **Return Type**: The formula returns a character value ('Y' or 'N') indicating whether a specific condition is met.\n* **Logic Summary**: The formula checks for the existence of absence entries for a given person and period. It loops through each absence entry and checks the absence type, status, and dates. If the absence type is 'Annual Leave', 'Sick Leave', 'Hajj Leave', or 'Monkhood Leave', and the absence reason is specific, or if the absence attribute is 'Block Leave%', it sets the return value to 'Y'. The formula also logs various values and dates for auditing purposes. The logic involves checking multiple conditions and iterating through absence entries to determine the return value. The formula uses various database items, input values, and context values to perform the calculations and make decisions.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates compassionate leave applications in Singapore. Ensures the duration does not exceed 1\u20137 days (based on reason, e.g., death of immediate family or sibling/grandparents), verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used:**\n- `ABSENCE_ENTRY_ID`\n- `LEGISLATIVE_DATA_GROUP_ID`\n- `EFFECTIVE_DATE`\n- `HR_ASSIGNMENT_ID`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n\n**Input Values:**\n- `iv_start_date` (date)\n- `iv_end_date` (date)\n- `IV_CALEDARSTARTDATE` (date)\n- `IV_CALEDARENDDATE` (date)\n- `IV_TOTALDURATION` (Number)\n- `IV_ABSENCE_REASON` (Text)\n\n**Return Type:**\nThe formula returns a validation status indicated by the `VALID` variable, which is a text type ('Y' for valid, 'N' for not valid), along with an `ERROR_MESSAGE` when validation fails.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by initializing various default values for different database items (DBIs) and input parameters.\n2. **Context Setup**: It then sets up contexts for absence entry, legislative data group, and effective date to ensure the correct data is accessed.\n3. **Manager Assignment Check**: The formula retrieves the manager's assignment status and person ID to verify if the manager is active.\n4. **Validation**: It validates the input start date to ensure it's not prior to a specific date ('2019/09/23'). If it is, the validation fails with an error message.\n5. **Manager Status Validation**: The formula checks if the manager's assignment status is active and if the manager ID is not zero. If either condition is not met, the validation fails with an appropriate error message.\n6. **Absence Reason and Duration Validation**: Based on the absence reason, the formula checks the duration of the absence against specific rules. For example, if the reason is related to the death of a spouse, parent, or child, the duration must not exceed 7 days. For the death of a sibling or grandparent, the duration must not exceed 1 day. If these conditions are not met, the validation fails with a corresponding error message.\n7. **Return Validation Status**: Finally, the formula returns the validation status (`VALID`) along with an error message if the validation fails. If all checks pass, the formula returns a valid status without an error message.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates no-pay leave applications in Singapore. Ensures annual leave and sick leave (60 days) are fully utilized, prohibits leave during the first 3 months or probation unless all leave is exhausted, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the provided FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_USER_PERSON_TYPE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- PER_ASG_EMPLOYMENT_CATEGORY\n- PER_ASG_MANAGER_USER_PERSON_ID\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n**Return Type:**\nThe formula returns two values: a validation flag (VALID) indicating whether the process is valid or not, and an error message (ERROR_MESSAGE) if the validation fails.\n\n**Logic Summary:**\n1. The formula starts by initializing various default values for database items and input parameters.\n2. It then retrieves the current HR assignment ID, legislative data group ID, and person ID from the context.\n3. The formula calculates key dates, including the effective date based on the global pay interface extraction date, the start and end of the year, and checks for the probation end date.\n4. It checks the employment category of the assignment to determine whether to use the annual leave plan for employees or contractors.\n5. The formula then checks the manager's assignment status and retrieves the manager's person ID. If the manager's status is not active or the manager ID is zero, it sets the validation flag to 'N' and returns an error message.\n6. Based on the employment category, it calculates the annual accrual balance for either employees or contractors using the `GET_PLAN_BALANCE` function.\n7. The formula then checks if the start date is after the probation end date and if the probation end date is within six months of the hire date. If there is an annual accrual balance and these conditions are met, it sets the validation flag to 'N' and returns an error message indicating an unpaid error.\n8. Finally, the formula returns the validation flag and any error message if the validation fails.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates paternity leave applications in Singapore. Ensures the employee has worked at least 3 months, the leave start date is within 16 weeks of the child\u2019s birth, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used:**\n- PER_PER_CONTACT_DATE_OF_BIRTH\n- PER_PER_CONTACT_CONTACT_TYPE\n- PER_PER_CONT_REL_CONTACT_TYPE\n- PER_PER_CONT_REL_CONTACT_PERSON_ID\n- PER_EXT_PERSON_CITIZENSHIP_NATIONALITY\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_REL_DATE_START\n- PER_ASG_MANAGER_USER_PERSON_ID\n- ABSENCE_ENTRY_ID\n- HR_ASSIGNMENT_ID\n- EFFECTIVE_DATE\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_ACTUALCHILDBIRTHDATE\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_DATE1\n\n**Return Type:**\nThe formula returns a validation result, which includes a validation flag (VALID) indicating whether the validation passed or failed, and an error message if the validation failed.\n\n**Logic Summary:**\nThe formula performs a series of validations for an absence entry. Here is a step-by-step description:\n1. **Initial Setup**: The formula initializes various default values for inputs that might not be provided, such as dates and identifiers.\n2. **Context Setup**: It sets up the context for the HR assignment and absence entry to retrieve relevant data.\n3. **User Mode Check**: If the user mode is not 'ADMIN', it checks if the start date is before a specific cutoff date and if the manager's assignment status is active. If either condition is not met, it returns an error.\n4. **Child Birth Date Determination**: It determines the child's birth date based on whether the actual birth date was provided or if it should use the expected birth date.\n5. **Employment Duration Check**: It checks if the employee has been working for at least three months prior to the start date. If not, it returns an error.\n6. **Child Existence and Citizenship Check**: It checks if there is a child contact person and verifies the child's citizenship.\n7. **Age Eligibility Check**: It checks if the child is at least one year old by the start date. If not, it returns an error.\n8. **Validation Conclusion**: If all checks pass, the formula returns a success validation. If any check fails, it returns an appropriate error message.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates adoption leave applications in Singapore. Ensures the duration does not exceed 84 days, the child is under 12 months, the employee has worked at least 3 months, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_ASG_REL_DATE_START\n- ANC_ABS_ENTRS_USER_MODE\n- PER_PER_CONTACT_DATE_OF_BIRTH\n- PER_PER_CONTACT_CONTACT_TYPE\n- PER_PER_CONTACT_PERSON_ID\n- PER_PER_CONT_REL_CONTACT_TYPE\n- PER_PER_CONT_REL_CONTACT_PERSON_ID\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_DATE1\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_ACTUALCHILDBIRTHDATE\n\n**Return Type:**\nThe formula returns a validation status indicated by the variable `VALID` which is of type character, along with an error message when validation fails.\n\n**Logic Summary:**\nThe formula performs a series of validations on the input values and database item values. Here's a step-by-step breakdown:\n1. **Initialization**: Default values are set for various variables, including dates, numbers, and text, to ensure the formula has baseline values to work with if inputs are missing.\n2. **Date and Context Setup**: Specific dates are calculated or retrieved, such as the start and end of the year based on the input start date, and the effective date is set for context.\n3. **Manager Assignment Check**: The formula checks the status of the manager's assignment to ensure it is active and retrieves the manager's ID.\n4. **Validation Checks**: The formula then proceeds with several validation checks, including:\n   - Checking if the start date is before a specific cutoff date (September 23, 2019).\n   - Verifying the manager's assignment status is active and the manager ID is not zero.\n   - Ensuring the total duration of absence does not exceed 84 days.\n   - Handling actual and expected child birth dates for further checks.\n   - Checking if the employee has been working for more than 3 months from their start date.\n   - Verifying if the child's birth date plus 12 months falls after the start date of the absence.\n5. **Error Handling**: If any validation fails, the formula sets an appropriate error message and returns the validation status as 'N' (not valid), along with the error message and, in some cases, specific token values.\n6. **Validation Success**: If all checks pass, the formula returns a validation status of 'Y' (valid).",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates shared parental leave applications in Singapore. Ensures the duration does not exceed 28 days, the child is under 12 months, the employee has worked at least 3 months, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: ### Summary of the FastFormula\n\n#### DBI Values Used:\n- PER_PER_CONTACT_DATE_OF_BIRTH\n- PER_PER_CONTACT_CONTACT_TYPE\n- PER_PER_CONTACT_PERSON_ID\n- PER_ASG_REL_DATE_START\n- PER_ASG_MANAGER_USER_PERSON_ID\n- ANC_ABS_ENTRS_USER_MODE\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n\n#### Input Values:\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_DATE1\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_ACTUALCHILDBIRTHDATE\n\n#### Return Type:\nThe formula returns a set of values including a validation flag (`VALID`), an error message (`ERROR_MESSAGE`), and potentially token names and values. The primary return value is of type validation result, indicating whether the input data is valid or not along with error messages if any.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by initializing various variables with default or context-based values.\n2. **Date and Manager Validation**: It checks if the start date is before a specific cutoff date and if the manager's assignment status is active, returning an error if these conditions are not met.\n3. **Three Months Work Validation**: The formula then checks if the employee has worked for at least three months, returning an error if this condition is not satisfied.\n4. **Child Birth Date Logic**: Depending on whether the actual child birth date was provided, it sets the child's birth date to either the actual or expected birth date.\n5. **Absence History Check**: The formula checks the employee's absence history for any shared parental leave entries that are not withdrawn or denied and calculates the total duration of these absences. If adding the new absence would exceed a maximum allowed duration (28 days), it returns an error.\n6. **Post-Child Birth Validation**: It checks if the start date of the absence is after the child is 12 months old, returning an error if this condition is not met.\n7. **Attachment Check**: Finally, it checks for any attachments related to the absence entry and returns a validation result based on all the checks performed.\n\nThis summary provides a high-level overview of the logic encoded in the FastFormula, covering the validation and calculation steps involved in processing an absence request.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates critical illness leave applications in Singapore. Ensures the duration does not exceed 2 days per instance and 10 days per year for illness of immediate family, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used**: \n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- HR_ASSIGNMENT_ID\n- EFFECTIVE_DATE\n- ABSENCE_ENTRY_ID\n\n**Input Values**: \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type**: \nThe formula returns a validation result, which includes a status indicator ('Y' for valid, 'N' for not valid) and an error message if the validation fails.\n\n**Logic Summary**: \nThis FastFormula validates absence entries based on various rules and conditions. Here's a step-by-step breakdown:\n1. **Initialization**: The formula starts by initializing various variables with default or input values, including start and end dates, total duration, and absence reason.\n2. **Date Validation**: It checks if the start date is before a specific cutoff date (2019/09/23) and returns an error if true.\n3. **Manager Status Check**: It verifies the status of the manager assigned to the absence entry, ensuring they are active. If not, it returns an error.\n4. **Duration Validation**: The formula checks if the total duration of the absence exceeds 2 days and returns an error if this condition is met.\n5. **Historical Data Check**: It then iterates through existing absence entries for the same year, checking for overlapping or conflicting absences, particularly focusing on 'Critical Illness Leave' types that are not withdrawn or denied.\n6. **Cumulative Duration Check**: If such absences are found, it accumulates their durations and checks if the total exceeds 10 days. If this limit is surpassed, it returns an error.\n7. **Validation Result**: If all checks pass without returning errors, the formula indicates a successful validation ('Y'); otherwise, it returns 'N' along with an appropriate error message.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates child care leave applications in Singapore. Ensures the duration does not exceed 6 days for Singaporean children or 2 days for non-Singaporean children, the youngest child is under 7 years, the employee has worked at least 3 months, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the provided Oracle FastFormula:\n\n**DBI Values Used**: \n- PER_PER_CONTACT_DATE_OF_BIRTH\n- PER_PER_CONTACT_CONTACT_TYPE\n- PER_PER_CONTACT_PERSON_ID\n- PER_EXT_PERSON_CITIZENSHIP_NATIONALITY\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- PER_ASG_REL_DATE_START\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_CONT_REL_CONTACT_TYPE\n- PER_PER_CONT_REL_CONTACT_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n**Input Values**: \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type**: \nThe formula returns a validation result indicated by the variable `VALID` along with an error message if the validation fails.\n\n**Logic Summary**: \nThis FastFormula appears to be validating a child care leave application. The logic can be broken down into the following steps:\n1. **Initial Validation**: The formula first checks if the leave application spans across two different calendar years. If so, it immediately returns an error, as leave applications cannot overlap.\n2. **Person and Manager Validation**: It retrieves the person's number and manager's ID, checks the manager's assignment status, and verifies if the user applying for leave is either an admin or the manager of the person.\n3. **Eligibility Checks**: The formula checks if the applicant has children by examining their contacts. For each child found, it retrieves the child's date of birth and citizenship.\n4. **Youngest Child Identification**: It identifies the youngest child based on the dates of birth retrieved.\n5. **Service Months Calculation**: The formula calculates the number of months the applicant has been in service from their job start date.\n6. **Leave Eligibility Calculation**: Depending on the youngest child's age and citizenship, it calculates the eligible leave days. If the child is above 7 years old, it checks for the service months and calculates leave accordingly.\n7. **Previous Leaves Check**: The formula then checks for any previous child care leaves taken in the same year and calculates the remaining eligible days.\n8. **Final Validation**: It validates if the total duration of the current leave application plus any previous leaves does not exceed the eligible leave days. If it does, it returns an error; otherwise, it returns a success validation.\n\nThis summary should allow someone to understand the logic and potentially recreate the FastFormula based on the described steps and conditions.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates extended child care leave applications in Singapore. Ensures the employee has worked at least 3 months, the youngest child is between 7 and 12 years old, the duration does not exceed 2 days for Singaporean children, prohibits leave for non-Singaporean children, prevents overlap between calendar years, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the provided Oracle FastFormula:\n\n**DBI Values Used:** \n* PER_ASG_MANAGER_USER_PERSON_ID\n* PER_PER_CONT_REL_CONTACT_PERSON_ID\n* PER_EXT_PERSON_CITIZENSHIP_NATIONALITY\n* ANC_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n* ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n* ANC_ABS_TYP_NAME\n* ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n* ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n* PER_PER_CONTACT_DATE_OF_BIRTH\n* PER_PER_CONTACT_CONTACT_TYPE\n* PER_PER_CONTACT_PERSON_ID\n* PER_ASG_REL_DATE_START\n\n**Input Values:**\n* iv_start_date\n* iv_end_date\n* IV_CALEDARSTARTDATE\n* IV_CALEDARENDDATE\n* IV_TOTALDURATION\n* IV_ABSENCE_REASON\n\n**Return Type:** \nThe formula returns a validation result, indicated by the variable 'VALID', which is of type character (either 'Y' for valid or 'N' for not valid), along with an error message and possible tokens.\n\n**Logic Summary:** \n1. The formula first checks if the start and end dates fall within the same calendar year. If not, it raises an error.\n2. It then retrieves the manager's ID and checks their assignment status. If the manager is inactive or not assigned, it raises an error.\n3. Next, it checks if the employee has completed three months of work. If not, it raises an error.\n4. The formula then retrieves the employee's child(ren) information, including their date of birth and citizenship.\n5. It determines the youngest child's age and checks if they meet the age criteria (between 7 and 12 years old) for Extended Child Care Leave. If not, it raises an error.\n6. The formula also checks if the child is a Singapore citizen and if the leave duration exceeds the maximum allowed.\n7. It then checks for any existing leave entries of the same type within the same year and ensures that the total duration does not exceed the allowed maximum.\n8. If all checks pass, the formula returns a validation result of 'Y' (valid); otherwise, it returns 'N' (not valid) with an appropriate error message.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Determines the enrollment end date for absence plans for contractors. Uses the employee\u2019s actual termination date if available, otherwise defaults to the effective date. Returns the calculated enrollment end date.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: PER_ASG_USER_PERSON_TYPE, PER_ASG_REL_ACTUAL_TERMINATION_DATE\n* **Input Values**: EFFECTIVE_DATE, END_DATE\n* **Return Type**: Date\n* **Logic Summary**: \n  1. The formula first checks if a specific termination date has been provided. \n  2. If this date is provided, it is used as the enrollment end date.\n  3. If the termination date is not provided (i.e., it uses a default value), the formula then determines the enrollment end date based on the effective date.\n  4. The formula returns the determined enrollment end date as a result. The effective date and end date are context values that are used in case the termination date is defaulted. The formula prioritizes user-provided termination dates over system defaults for calculating the enrollment end date.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated brought forward leave accrual for employees in Cambodia with 3-year expiry, year 1. Checks the previous year\u2019s balance, restricts accrual during unpaid, maternity, emergency, or Hajj leave, and limits accrual to 6 days. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: per_asg_person_number, anc_abs_typ_name, anc_abs_pln_name, per_asg_rel_date_start, per_asg_grade_name, legislative_data_group_id, person_id, hr_assignment_id\n* **Input Values**: iv_accrual, iv_accrualperiodenddate, iv_accrualperiodstartdate, iv_planenrollmentstartdate, iv_planenrollmentenddate, iv_caledarenddate, iv_caledarstartdate\n* **Return Type**: The formula returns multiple values: accrual (number), adjustmentvalues (empty number), adjustmentdates (empty date), and adjustmenttypes (empty text)\n* **Logic Summary**: \n  1. Initialize default values for various database items and input parameters.\n  2. Retrieve the legislative data group ID, person ID, and HR assignment ID from the context.\n  3. Calculate the hire date and the number of months between the accrual period start date and the hire date.\n  4. Retrieve the previous year-end date and change the effective date to this value.\n  5. Retrieve the annual leave plan balance for the previous year-end date.\n  6. Calculate the accrual amount based on the least of 6 or the annual leave plan balance.\n  7. Log the calculation details for auditing purposes.\n  8. Return the calculated accrual amount along with empty adjustment values, dates, and types.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated brought forward leave accrual for employees in Cambodia with 3-year expiry, year 2. Carries over the balance from year 1, restricts accrual during unpaid, maternity, emergency, or Hajj leave. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: \n  - per_asg_person_number\n  - anc_abs_typ_name\n  - anc_abs_pln_name\n  - per_asg_rel_date_start\n  - per_asg_grade_name\n  - legislative_data_group_id\n  - person_id\n  - hr_assignment_id\n\n* **Input Values**: \n  - iv_accrual\n  - iv_accrualperiodenddate\n  - iv_accrualperiodstartdate\n  - iv_planenrollmentstartdate\n  - iv_planenrollmentenddate\n  - iv_caledarenddate\n  - iv_caledarstartdate\n\n* **Return Type**: The formula returns multiple values including an accrual value and adjustment details (values, dates, and types), indicating a complex return type that includes both numerical and date values along with text descriptions for adjustments.\n\n* **Logic Summary**: \n  The formula calculates an accrual based on previous year's leave balance. Here's a step-by-step breakdown:\n  1. It initializes various default values for employee assignment details, plan names, and dates.\n  2. It retrieves necessary context values such as legislative data group ID and person ID.\n  3. It calculates the length of service in months from the hire date to the start of the accrual period.\n  4. It determines the previous year's end date based on the accrual period start date.\n  5. It changes the context to the previous year's end date and retrieves the leave balance for a specific plan (Brought Forward Leave Plan) for that date.\n  6. The retrieved leave balance is considered as the accrual for the year.\n  7. It logs information about the accrual balance and the previous year's end date.\n  8. Finally, it returns the calculated accrual along with adjustment values, dates, and types, though the adjustments are initially set as empty, suggesting further processing might be required or these are placeholders for potential future adjustments.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated brought forward leave accrual for employees in Cambodia with 3-year expiry, year 3. Carries over the balance from year 2, restricts accrual during unpaid, maternity, emergency, or Hajj leave. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: per_asg_person_number, per_asg_rel_date_start, per_asg_grade_name, anc_abs_typ_name, anc_abs_pln_name\n* **Input Values**: iv_accrual, iv_accrualperiodenddate, iv_accrualperiodstartdate, iv_planenrollmentstartdate, iv_planenrollmentenddate, iv_caledarenddate, iv_caledarstartdate\n* **Return Type**: The formula returns multiple values including accrual (a numeric value), adjustmentvalues (a numeric array), adjustmentdates (a date array), and adjustmenttypes (a text array)\n* **Logic Summary**: \n  1. The formula starts by setting default values for various database items such as person number, assignment start date, and absence plan name.\n  2. It then retrieves several input values including accrual, accrual period start and end dates, plan enrollment start and end dates, and calendar start and end dates.\n  3. The formula initializes several local variables including legislative data group ID, annual accrual balance, brought forward leave balance, and hire date.\n  4. It calculates the length of service in months by finding the difference between the accrual period start date and the hire date.\n  5. The formula then changes the context to a previous year-end date and retrieves the plan balance for a specific brought forward leave plan.\n  6. Finally, the formula returns the accrual balance, adjustment values, adjustment dates, and adjustment types. Overall, the formula appears to calculate accrual balances for employees based on their length of service and plan enrollment dates.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates maternity leave applications in Cambodia. Ensures the duration does not exceed 90 days, prohibits leave during probation, requires the start date to be within 30 days after the child\u2019s birth, and verifies the manager\u2019s active status. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: **Summary of Oracle FastFormula**\n\n* **DBI Values Used**: \n  + PER_ASG_DATE_PROBATION_END\n  + PER_ASG_REL_DATE_START\n  + IV_EXPECTEDCHILDBIRTHDATE\n  + IV_ACTUALCHILDBIRTHDATE\n  + GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n  + PER_PER_CONT_REL_CONTACT_TYPE\n  + PER_PER_CONT_REL_CONTACT_PERSON_ID\n  + ANC_ABS_ENTRS_USER_MODE\n  + PER_ASG_MANAGER_USER_PERSON_ID\n  + PER_PER_PERSON_NUMBER\n  + ABSENCE_ENTRY_ID\n  + EFFECTIVE_DATE\n  + HR_ASSIGNMENT_ID\n  + PERSON_ID\n  + PER_ASG_MANAGER_USER_PERSON_ID\n  + ANC_ABS_ENTRS_USER_MODE\n* **Input Values**: \n  + iv_start_date\n  + iv_end_date\n  + IV_CALEDARSTARTDATE\n  + IV_CALEDARENDDATE\n  + IV_TOTALDURATION\n  + IV_ABSENCE_REASON\n  + IV_EXPECTEDCHILDBIRTHDATE\n  + IV_ACTUALCHILDBIRTHDATE\n* **Return Type**: The formula returns a set of values including a validation flag (VALID), an error message (ERROR_MESSAGE), and token names and values (TOKEN_NAME and TOKEN_VALUE).\n* **Logic Summary**: \n  1. **Initialization**: The formula starts by initializing several default values for dates and variables.\n  2. **Date Calculations**: It calculates the start and end dates of the year based on the input start date.\n  3. **Context Setup**: The formula sets up various contexts such as HR assignment ID, effective date, and absence entry ID.\n  4. **User Mode Check**: It checks the user mode to determine if the user is an administrator or not.\n  5. **Validation Checks**: The formula then performs several validation checks, including:\n     - Checking if the total duration of absence exceeds 90 days.\n     - Verifying if the employee is still in their probation period.\n     - Ensuring that the start date of the absence is not earlier than 30 days before the actual or expected child birthdate.\n  6. **Error Handling**: If any of the validation checks fail, the formula returns an error message along with relevant token values.\n  7. **Return**: Finally, the formula returns the validation flag and any associated error messages or token values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates sick leave applications in the UK. Ensures the duration does not exceed 30 days, requires a medical certificate for durations over 7 days, checks the manager\u2019s active status, and prevents overlap between calendar years for non-contract employees. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the FastFormula:\n\n**DBI Values Used**: \n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_REASON_ID\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_GRADE_NAME\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n\n**Input Values**: \n- iv_start_date (date)\n- iv_end_date (date)\n- IV_CALEDARSTARTDATE (date)\n- IV_CALEDARENDDATE (date)\n- IV_TOTALDURATION (Number)\n- IV_ABSENCE_REASON (Text)\n\n**Return Type**: The formula returns a validation result, which includes a VALID flag (indicating whether the validation was successful) and an optional ERROR_MESSAGE.\n\n**Logic Summary**: \n1. The formula starts by initializing various default values for database items and input parameters.\n2. It then retrieves the person ID, legislative data group ID, and absence entry ID from the context.\n3. The formula calculates the year's start and end dates based on the global pay interface extraction date.\n4. It checks the user mode and, if not in 'ADMIN' mode, applies specific rules for sick leave.\n5. For non-admin users, it checks if the requested duration exceeds the allowed limit (30 days) and returns an error if so.\n6. The formula then loops through existing absence entries to calculate the total sick leave days already taken in the current year.\n7. If the total sick leave days exceed the allowed limit, it returns an error. Otherwise, it checks if the requested duration would exceed the limit and returns an error if so.\n8. Additionally, the formula checks if the requested duration is more than 7 days and if a medical certificate is required (based on a value set). If a certificate is required but not found, it returns an error.\n9. Finally, the formula returns the validation result, including any error messages.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates maternity leave applications in the UK. Ensures the start date is within 11 weeks before or on the child\u2019s birth date, the duration does not exceed 77 days, prohibits leave during probation, requires a medical certificate (MAT B1), and verifies the manager\u2019s active status. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_ACTUALCHILDBIRTHDATE\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- PER_PER_CONT_REL_CONTACT_TYPE\n- PER_PER_CONT_REL_CONTACT_PERSON_ID\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_ACTUALCHILDBIRTHDATE\n\n**Return Type:**\nThe formula returns a validation result (VALID) along with an error message and token values if the validation fails. The return type is primarily focused on determining whether a set of input values for a maternity leave application is valid according to certain rules.\n\n**Logic Summary:**\n1. The formula initializes default values for various database items and input values, including dates for probation end, expected childbirth, actual childbirth, and more.\n2. It then sets the current year's start and end dates based on the provided start date and extracts the effective date from a global pay interface extraction date.\n3. The formula retrieves specific IDs and values from the context and value sets, such as absence entry ID, HR assignment ID, person ID, and information about_attachments.\n4. Based on the user mode (whether it's an admin or not) and the person's number, it applies different validation rules.\n5. It checks if the actual childbirth date was provided or if it should default to the expected childbirth date and then applies a series of validations:\n   - It checks if applying for maternity leave 11 weeks before the expected or actual childbirth date is valid.\n   - It verifies if the person is still on probation and if the leave start date exceeds the maximum allowed duration before childbirth.\n   - It also checks if a necessary certificate (MAT B1) has been uploaded.\n6. If any of these validations fail, it sets an error message, token name, and token value, and returns that the input is not valid (VALID = 'N'). If all validations pass, it implies that the input is valid. The logic steps through each condition sequentially, ensuring that all required criteria for maternity leave are met according to the organization's policies.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates compassionate leave applications in the UK. Ensures the duration does not exceed 3 days for immediate family, 2 days for siblings, or 1 day for grandparents, prohibits overlap between calendar years for non-contract employees, requires a medical certificate, and verifies the manager\u2019s active status. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n- ANC_ABS_ENTRS_DURATION\n- IV_TOTALDURATION\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- IV_START_DATE\n- IV_END_DATE\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- ANC_ABS_ENTRS_ABSENCE_REASON_ID\n- PER_ASG_GRADE_NAME\n- IV_ABSENCE_REASON\n- PER_ASG_REL_DATE_START\n- PER_ASG_PROJECTED_ASSIGNMENT_END_DATE\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_SEX\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type:**\nThe formula returns a validation result, including a VALID flag (indicating whether the input is valid or not), an ERROR_MESSAGE (when the input is invalid), and optionally TOKEN_NAME and TOKEN_VALUE for specific error messages.\n\n**Logic Summary:**\n1. The formula initializes various default values and input parameters.\n2. It checks if the start and end dates of an absence entry fall within a valid range based on the absence reason and employment category, disallowing overlaps for certain categories.\n3. It validates the duration of the absence based on the absence reason, checking against specific limits (e.g., compassionate leave for different relatives).\n4. For compassionate leave, it checks the total duration taken in a year to ensure it does not exceed the maximum allowed (7 days).\n5. It verifies if a mandatory document is attached for the absence entry.\n6. If any validation fails, it returns an error message with specific details. If all checks pass, it returns a valid flag.\n7. The formula uses various context changes to retrieve and validate data correctly, including HR assignments, person details, and absence entry specifics.\n8. It iterates through existing absence entries to check for overlaps and accumulates durations for the same type of leave within a year.\n9. Based on user mode and person number, it applies different validation rules, including manager approval and employment status checks.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates marriage leave applications in Singapore. Ensures the duration does not exceed 5 days, the leave is applied within 6 months of the marriage date, prohibits leave during probation, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n- `ABSENCE_ENTRY_ID`\n- `HR_ASSIGNMENT_ID`\n- `EFFECTIVE_DATE`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `PER_ASG_DATE_PROBATION_END`\n\n**Input Values:**\n- `iv_start_date`\n- `iv_end_date`\n- `IV_CALEDARSTARTDATE`\n- `IV_CALEDARENDDATE`\n- `IV_TOTALDURATION`\n- `IV_ABSENCE_REASON`\n- `IV_ATTRIBUTE_DATE1`\n\n**Return Type:**\nThe formula returns multiple values including a validation flag (`VALID`) indicating whether the input is valid or not, an error message (`ERROR_MESSAGE`), and potentially token names and values for more detailed error handling.\n\n**Logic Summary:**\nThe formula begins by setting up various defaults and inputs for dates, numbers, and text values. It then proceeds to:\n1. Validate if the absence entry is valid by checking the user mode and comparing it with 'ADMIN'.\n2. Check if the start date is before a specific cutoff date (September 23, 2019), returning an error if true.\n3. Verify the manager's assignment status and ID, ensuring they are active and not zero, or return an error.\n4. Validate the duration of the absence, checking if it exceeds a maximum of 5 days and returning an error with a specific token for the maximum days allowed if it does.\n5. Check if the start date of the absence falls during the probation period, returning an error if true.\n6. Finally, it checks if a specific attribute date plus six months is earlier than the start date of the absence, returning an error if this condition is met.\nThe formula uses various Oracle functions such as `GET_CONTEXT`, `TO_DATE`, `ADD_MONTHS`, and `GET_VALUE_SET` to achieve these validations, ensuring that the absence entry adheres to the defined rules and policies. It iterates through each condition, returning as soon as any validation fails, providing an error message and appropriate details for handling.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates annual leave applications in Malaysia. Ensures the duration aligns with grade-based entitlements, prohibits overlap between calendar years for non-contract employees, checks sufficient balance, restricts applications before September 23, 2019, and verifies the manager\u2019s active status. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: **Summary**\n\n* **DBI Values Used**: \n  * PER_ASG_DATE_PROBATION_END\n  * PER_ASG_REL_DATE_START\n  * PER_ASG_GRADE_NAME\n  * GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n  * IV_ATTRIBUTE_1\n  * PER_ASG_ACTION_CODE\n  * PER_ASG_JOB_NAME\n  * PER_ASG_USER_PERSON_TYPE\n  * PER_ASG_EMPLOYMENT_CATEGORY\n  * ANC_ABS_ENTRS_USER_MODE\n  * PER_ASG_MANAGER_USER_PERSON_ID\n  * PER_PER_PERSON_NUMBER\n  * PER_ASG_ATTRIBUTE7\n  * PER_ASG_BARGAINING_UNIT_CODE_NAME\n\n* **Input Values**:\n  * iv_start_date\n  * iv_end_date\n  * IV_CALEDARSTARTDATE\n  * IV_CALEDARENDDATE\n  * IV_TOTALDURATION\n  * IV_ABSENCE_REASON\n  * IV_ATTRIBUTE_1\n\n* **Return Type**: The formula returns a set of values including VALID (a flag indicating whether the input is valid), ERROR_MESSAGE (a message describing any error encountered), and in some cases, ERROR_CODE (a code further specifying the nature of the error), TOKEN_NAME, and TOKEN_VALUE (used for more detailed error reporting).\n\n* **Logic Summary**: \n  1. **Initialization**: The formula starts by setting default values for various database items (DBIs) and initializing input values.\n  2. **Date and Assignment Context Setup**: It sets up the context for the assignment and effective dates, retrieving the legislative data group ID, person ID, and other necessary details.\n  3. **Grade and Category Determination**: The formula determines the employee's grade band based on their grade name and job title, which is crucial for calculating annual leave entitlements.\n  4. **Leave Entitlement Calculation**: It calculates the annual leave balance and accrual based on the employee's category (contractor or employee), grade band, and years of service.\n  5. **Validation Checks**: The formula performs several validation checks, including:\n     - Checking if the absence reason is valid and if the user has sufficient leave balance.\n     - Verifying if the absence overlaps with existing absences or falls outside the allowed leave period.\n     - Ensuring that the duration of leave does not exceed the compulsory leave limit or the available balance.\n     - Checking for half-day absences and ensuring compliance with company policies.\n  6. **Error Handling and Return**: If any validation check fails, the formula returns an error message, error code (if applicable), and sets the VALID flag to 'N'. If all checks pass, it returns with the VALID flag set to 'Y', indicating that the input is valid.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates annual leave applications in Malaysia. Ensures the duration aligns with grade-based entitlements, prohibits overlap between calendar years for non-contract employees, checks sufficient balance, restricts applications before September 23, 2019, and verifies the manager\u2019s active status. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: **DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_ATTRIBUTE7\n- PER_ASG_BARGAINING_UNIT_CODE_NAME\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n**Return Type:**\nThis formula returns a validation status (VALID) along with an error message (ERROR_MESSAGE) and sometimes error codes (ERROR_CODE) and token values (TOKEN_VALUE), indicating whether the input values are valid according to the formula's logic, specifically in the context of annual leave application rules.\n\n**Logic Summary:**\n\n1. **Initialization**: The formula starts by checking the duration of the leave request to ensure it's in increments of 0.5 days. If not, it returns an error message indicating that the leave duration is incorrect.\n\n2. **Validation Checks**: It then proceeds to validate the input parameters, including checking if the person applying for leave is eligible, the leave period does not overlap with restricted periods, and ensuring the leave balance is sufficient for the requested duration.\n\n3. **Probation Period Check**: If the start date of the leave falls within the probation period, the formula applies specific rules to calculate the earned leave days, considering the employee's initial leave balance, service months, and completed months.\n\n4. **Absence Reason and Shift Checks**: It checks the absence reason and the employee's shift to ensure compliance with specific company policies, such as half-day leave restrictions for certain shifts.\n\n5. **Grade Band and Entitlement Calculation**: The formula determines the employee's grade band and calculates their annual leave entitlement based on this band, applying company rules for compulsory leave and fixed entitlements.\n\n6. **Future Absence and Insufficient Balance Checks**: It verifies that the leave does not extend into future years with insufficient balance and checks for compulsory leave conditions.\n\n7. **Final Validation and Return**: After passing through all these checks, the formula returns the validation status, along with any error messages or codes that may have been triggered during the validation process. This comprehensive logic ensures that leave applications adhere to the company's complex policies and rules regarding annual leave.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates annual leave applications in Malaysia. Ensures the duration aligns with grade-based entitlements, prohibits overlap between calendar years for non-contract employees, checks sufficient balance, restricts applications before September 23, 2019, and verifies the manager\u2019s active status. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: **Summary of the FastFormula**\n\n* **DBI Values Used**: \n  - PER_ASG_DATE_PROBATION_END\n  - PER_ASG_REL_DATE_START\n  - PER_ASG_REL_ACTUAL_TERMINATION_DATE\n  - PER_ASG_GRADE_NAME\n  - GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n  - IV_ATTRIBUTE_1\n  - PER_ASG_ACTION_CODE\n  - PER_ASG_JOB_NAME\n  - PER_ASG_POSITION_NAME\n  - PER_ASG_USER_PERSON_TYPE\n  - PER_ASG_EMPLOYMENT_CATEGORY\n  - ANC_ABS_ENTRS_USER_MODE\n  - PER_ASG_MANAGER_USER_PERSON_ID\n  - PER_PER_PERSON_NUMBER\n  - PER_ASG_ATTRIBUTE7\n  - PER_ASG_BARGAINING_UNIT_CODE_NAME\n\n* **Input Values**:\n  - iv_start_date\n  - iv_end_date\n  - IV_CALEDARSTARTDATE\n  - IV_CALEDARENDDATE\n  - IV_TOTALDURATION\n  - IV_ABSENCE_REASON\n  - IV_ATTRIBUTE_1\n\n* **Return Type**: The formula returns a validation result (VALID) along with an error message (ERROR_MESSAGE) and potentially an error code (ERROR_CODE) or other specific messages and values depending on the logic flow.\n\n* **Logic Summary**:\n  The formula validates an employee's absence request based on various business rules and data checks. The process can be broken down into several steps:\n  1. **Initialization**: Set default values for various database items (DBIs) such as probation end date, employment start date, and others, if they are not provided. Initialize input values for start and end dates, duration, absence reason, and other required parameters.\n  2. **Employee Data Retrieval**: Fetch the employee's grade name, job name, position name, employment category, and manager details using the `GET_CONTEXT` function.\n  3. **Date Calculations**: Calculate key dates such as the year begin date, year end date, hire date, and service months.\n  4. **Leave Balance Check**: Determine the employee's current leave balance by calling `GET_PLAN_BALANCE` for either the 'Annual Leave Plan Contractor' or 'Annual Leave Plan Employee' based on the employee's grade name. Compare this balance against the requested leave duration.\n  5. **Validation Checks**: Perform a series of validation checks:\n     - **Probation Period**: Ensure the employee is not requesting leave during their probation period or before their hire date.\n     - **Leave Duration**: Verify that the leave duration is correct and aligns with working hours.\n     - **Balance Sufficiency**: Check if the employee has sufficient leave balance for the requested duration.\n     - **Overlap**: Prevent leave requests that overlap with existing leaves or periods outside the current year.\n     - **Absence Reason**: Validate the reason for absence, with special handling for 'Emergency Leave' and 'Compulsory Leave'.\n     - **Half-Day Leaves**: Ensure half-day leaves are requested correctly based on the shift pattern.\n  6. **Grade Band and Year Band Determination**: Determine the employee's grade band and year band based on their grade name and job title, which influences the leave entitlement and compulsory leave rules.\n  7. **Compulsory Leave Check**: Verify if the requested leave meets the compulsory leave criteria based on the grade band and year band.\n  8. **Final Validation and Messaging**: Return a validation result along with an appropriate error message or code if any of the checks fail. If all checks pass, the absence request is considered valid.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates annual leave applications in Singapore. Ensures the duration aligns with grade and service-based entitlements, prohibits overlap between calendar years, checks sufficient balance, restricts applications before September 23, 2019, and verifies the manager\u2019s active status. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n### DBI Values Used\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- IV_ABSENCE_REASON\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_REL_DATE_START\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- LEGISLATIVE_DATA_GROUP_ID\n- EFFECTIVE_DATE\n- ABSENCE_ENTRY_ID\n- HR_ASSIGNMENT_ID\n- PERSON_ID\n\n### Input Values\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n### Return Type\nThe formula returns a validation result indicated by the `VALID` variable, which can be either 'Y' (valid) or 'N' (not valid). It also returns an `ERROR_MESSAGE` and potentially other error details such as `ERROR_CODE` and `TOKEN_NAME`/`TOKEN_VALUE` pairs, depending on the reason for invalidation.\n\n### Logic Summary\n1. **Initialization**: The formula starts by setting default values for various database items (DBIs) and input parameters if they are not provided.\n2. **Date and Context Setup**: It sets up important dates such as the effective date, year begin and end dates, and determines the legislative data group ID and other contextual information.\n3. **Validation Checks**:\n    - **Date Range Validation**: Checks if the start and end dates of an absence request span across two calendar years, which is not allowed.\n    - **Fractional Duration Check**: Ensures the total duration of the absence is a whole number or a multiple of 0.5 days.\n    - **User Mode and Manager Checks**: Verifies the user mode (e.g., 'ADMIN') and manager status to ensure the absence request can be made.\n    - **Probation and Service Period Checks**: Calculates earned leave days based on the hire date, probation end date, and service months.\n4. **Leave Balance and Accrual Calculations**:\n    - **Annual Leave Balance**: Calculates the annual leave balance of the employee, taking into account the employment category (e.g., 'CONTRACT').\n    - **Leave Accrual Rate**: Determines the accrual rate based on the grade band and service months.\n5. **Compliance and Sufficiency Checks**:\n    - **Compulsory Leave Check**: Ensures that if the absence reason is 'Compulsory Leave', the duration meets the compulsory leave requirements.\n    - **Sufficient Balance Check**: Verifies that the employee has sufficient leave balance to cover the requested absence period.\n6. **Final Validation and Error Handling**: If all checks pass, the formula returns a 'VALID' result. If any check fails, it returns an appropriate error message and code, indicating why the absence request is not valid.\n7. **Conclusion**: The formula concludes by returning the validation result along with any error information if the request is invalid.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated annual leave accrual for employees in Thailand based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and rounds to the nearest half-day. Returns the final accrual value and adjustments.\n\n***Instruction for the fastformula***: ### Summary of the Oracle FastFormula\n\n#### DBI Values Used:\n- PER_ASG_PERSON_NUMBER\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_END_DATE\n- PER_ASG_REL_ACTUAL_TERMINATION_DATE\n- PER_PERSON_ENTERPRISE_HIRE_DATE\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n\n#### Input Values:\n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n- IV_EVENT_DATES\n- IV_BAND_CHG_DT1\n- IV_BAND_CHG_BEFVAL1\n- IV_BAND_CHG_AFTVAL1\n- IV_BAND_CHG_DT2\n- IV_BAND_CHG_BEFVAL2\n- IV_BAND_CHG_AFTVAL2\n- IV_BAND_CHG_DT3\n- IV_BAND_CHG_BEFVAL3\n- IV_BAND_CHG_AFTVAL3\n- IV_BAND_CHG_DT4\n- IV_BAND_CHG_BEFVAL4\n- IV_BAND_CHG_AFTVAL4\n\n#### Return Type:\nThe formula returns an accrual value (ACCRUAL) which is of numeric type, along with adjustment values, types, and dates.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by setting default values for various database items and input parameters. It also initializes several local variables to be used throughout the formula.\n\n2. **Conditional Checks**: It checks if the plan enrollment start date equals a specific date ('2019/09/05 00:00:00') and if the accrual period start date is before the plan enrollment start date, and the plan enrollment start date is not the hire date. If this condition is true, it sets the accrual to 0 and calculates the service months.\n\n3. **Grade Band Determination**: It determines the grade band based on the grade name and retrieves the annual leave entitlement for that grade band from a table.\n\n4. **Absence Processing**: It iterates through absence entries for the employee, calculating the absence duration within the accrual period, considering band changes. It adjusts the accrual period based on the absence type (e.g., unpaid leave, training leave).\n\n5. **Accrual Calculation**: After processing absences, it calculates the accrued leave for each period between band changes, considering the absence days. It then calculates the total accrual by summing up the accruals for each period.\n\n6. **Flooring and Rounding**: The formula floors the accrual to the nearest whole number or rounds it based on the decimal part.\n\n7. **Balance Check and Adjustment**: It checks the previous year's annual leave balance. If the balance is negative, it creates an adjustment to offset the negative balance.\n\n8. **Return**: Finally, the formula returns the calculated accrual, along with any adjustments, their types, and dates.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates annual leave applications in Thailand. Ensures the duration aligns with grade-based entitlements, prohibits overlap between calendar years, checks sufficient balance, restricts applications before September 5, 2019, and verifies the manager\u2019s active status. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ABSENCE_REASON\n- PER_ASG_REL_DATE_START\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_EMPLOYMENT_CATEGORY\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type:**\nThe formula returns a boolean value (VALID) indicating whether the input is valid or not, along with an error message if the input is invalid.\n\n**Logic Summary:**\nThis FastFormula validates various conditions for absence or leave application. Here's a step-by-step breakdown:\n1. **Initialization**: It starts by setting default values for various database items (DBIs) and input parameters.\n2. **Input Validation**: The formula checks if the duration of the absence (IV_TOTALDURATION) is in half-day increments. If not, it returns an error.\n3. **User Mode and Person Number Check**: It checks the user mode and person number to determine if the user is allowed to apply for leave. If not, it returns an error.\n4. **Date Checks**: It performs several date-related checks, including whether the leave start date is before a specific cutoff date, if the manager's assignment status is active, and if the leave start date is within the probation period or after a certain future date. If any of these conditions are not met, it returns an error.\n5. **Annual Leave Balance Check**: The formula calculates the annual leave balance and checks if there is sufficient balance for the requested leave duration. If not, it returns an error.\n6. **Compulsory Leave Check**: It checks if the requested leave duration meets the compulsory leave requirements based on the employee's grade and business unit. If not, it returns an error or warning.\n7. **Notice Period Check**: The formula checks if the leave application is made with sufficient prior notice. If not, it returns an error.\n8. **Final Validation**: After passing all checks, the formula returns a valid status. If any condition fails, it returns an error message with a corresponding error code.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates sick leave applications in Thailand. Ensures the duration does not exceed 30 days, requires a medical certificate for durations over 2 days, checks the manager\u2019s active status, and restricts applications before September 5, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_TYP_NAME\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- PER_ASG_USER_PERSON_TYPE\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- LEGISLATIVE_DATA_GROUP_ID\n- ABSENCE_ENTRY_ID\n- EFFECTIVE_DATE\n- HR_ASSIGNMENT_ID\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type:**\nThe formula returns a validation result, which includes a validity flag (VALID), an error message (ERROR_MESSAGE), an error code (ERROR_CODE), and token names and values (TOKEN_NAME and TOKEN_VALUE) under certain conditions.\n\n**Logic Summary:**\n1. The formula initializes various variables, including dates, absence types, and person IDs, using default values or context values.\n2. It checks if the total duration is a multiple of half a day. If not, it returns an error.\n3. It then checks the user mode and the start date. If the start date is before a specific cutoff date and the user mode is not 'ADMIN', it returns an error.\n4. The formula checks the manager's assignment status. If the status is not 'ACTIVE' or if the manager ID is 0, it returns an error.\n5. It validates the duration of the absence. If the duration exceeds 30 days, it returns an error with a specific error message and code.\n6. The formula then iterates over absence entries, checking for overlap and calculating the total duration of sick leave. If the total sick leave duration exceeds 30 days, it returns an error with a specific error message and code.\n7. Finally, the formula returns the validation result, which may include an error message, code, and token values, depending on the validation outcome.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates extended sick leave applications in Thailand. Ensures the duration does not exceed 30 days, requires full-pay sick leave to be exhausted, checks the manager\u2019s active status, and restricts applications before September 5, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_TYP_NAME\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- PER_ASG_USER_PERSON_TYPE\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_EMPLOYMENT_CATEGORY\n- PER_ASG_MANAGER_USER_PERSON_ID\n- LEGISLATIVE_DATA_GROUP_ID\n- ABSENCE_ENTRY_ID\n- EFFECTIVE_DATE\n- HR_ASSIGNMENT_ID\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type:**\nThe formula returns a validation result, which includes a validity flag (VALID), an error message (ERROR_MESSAGE), and may include additional error codes and token values depending on the specific validation outcome.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by setting default values for various database items (DBIs) and input parameters. It also initializes several local variables that will be used throughout the formula.\n2. **Input Validation**: The formula checks if the input duration is a whole number or a multiple of 0.5. If not, it returns an error indicating that the duration must be in half-day increments.\n3. **Context Setup**: It sets up the context for HR assignments and absence entries, retrieving relevant IDs and status information.\n4. **User Mode Check**: If the user mode is not 'ADMIN', it checks for specific conditions such as the start date being prior to a certain threshold, manager assignment status, and manager ID. If these conditions are not met, it returns appropriate error messages.\n5. **Duration Validation**: The formula checks if the absence duration exceeds 30 days, returning an error if it does.\n6. **Annual Leave Balance Check**: Depending on the employment category, it retrieves the annual leave balance and checks if there is still a balance. If so, it returns an error indicating that there is an outstanding balance.\n7. **Absence History Check**: It iterates through absence entries for the year, checking for specific types of leaves (Sick Leave and Extended Sick Leave) and their durations. If conditions related to these leaves are not met, it returns error messages.\n8. **Final Validation**: The formula performs a final check on the sick leave duration and returns an error if it's less than 30 days.\n9. **Return**: Based on the validation outcomes, the formula returns a validity flag along with any appropriate error messages, codes, and token values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates unpaid sick leave applications in Thailand. Ensures the duration does not exceed 30 days, requires full-pay and extended sick leave to be exhausted, checks the manager\u2019s active status, and restricts applications before September 5, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: ### Summary of the FastFormula\n\n#### DBI Values Used:\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_USER_PERSON_TYPE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_EMPLOYMENT_CATEGORY\n- PER_ASG_MANAGER_USER_PERSON_ID\n\n#### Input Values:\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n#### Return Type:\nThe formula returns a set of values including VALID (a flag indicating whether the validation was successful), ERROR_MESSAGE (a message describing any error encountered), and potentially ERROR_CODE and TOKEN_NAME/VAlUE pairs for specific error conditions.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by setting default values for various database items (DBIs) and input parameters. It then initializes several local variables to store data that will be used throughout the calculation, such as dates, durations, and flags.\n\n2. **Context Setting**: The formula sets contexts for HR Assignment, Legislative Data Group, and Person ID. It retrieves specific values like the HR assignment ID, legislative data group ID, and person ID from the context.\n\n3. **Validation Checks**: The formula performs several validation checks:\n   - **Date Validation**: It checks if the start date is before a specific cutoff date ('2019/09/05'), returning an error if true.\n   - **Manager Status Check**: It verifies the manager's assignment status, returning an error if the status is not 'ACTIVE' or if the manager ID is 0.\n   - **Duration Check**: It checks if the requested duration exceeds a limit (30 days), returning an error with specific details if exceeded.\n\n4. **Annual Leave Balance Calculation**: Based on the employment category, it calculates the annual leave balance using the `GET_PLAN_BALANCE` function for either the employee or contractor plan.\n\n5. **Absence Entry Processing**: The formula iterates through absence entries (using `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`) and calculates durations for sick leave, extended sick leave, and unpaid sick leave based on the absence type and status. It applies these calculations to entries that overlap with the current year.\n\n6. **Final Checks and Returns**: After processing all absence entries, the formula checks if the total unpaid sick leave days (including the requested duration) exceed the limit, returning an error if necessary. It also checks if sick leave or extended sick leave days are less than the limit, returning an appropriate error message. Finally, it returns the validation flag along with any error messages or codes.\n\nThis summary outlines the main logic flow of the FastFormula, including data initialization, context setting, validation checks, and the calculation of leave balances and durations.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates the duration of half-day absences for employees in Malaysia based on work schedules and rosters. Determines if an absence is a full day or half day by comparing entered absence hours to total assigned shift hours, with adjustments for shift patterns. Returns the calculated duration.\n\n***Instruction for the fastformula***: ### Summary of the Provided Oracle FastFormula\n\n#### DBI Values Used:\n- `PERSON_ID`\n- `HR_ASSIGNMENT_ID`\n- `ABSENCE_TYPE_ID`\n\n#### Input Values:\n- `IV_ACCRUALPERIODENDDATE`\n- `IV_ACCRUALPERIODSTARTDATE`\n- `IV_TERM_ID`\n- `IV_START_DATE`\n- `IV_END_DATE`\n- `IV_START_TIME`\n- `IV_END_TIME`\n- `IV_TOTALDURATION`\n- `IV_START_DURATION`\n- `IV_END_DURATION`\n- `IV_ABS_START_DURATION`\n- `IV_ABS_END_DURATION`\n\n#### Return Type:\nThe formula returns a numeric value representing the calculated duration.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by initializing various variables, including dates, times, and flags, with default values. It also retrieves specific database items (`DBIs`) such as `PERSON_ID`, `HR_ASSIGNMENT_ID`, and `ABSENCE_TYPE_ID`.\n2. **Date and Time Calculations**: It performs several date and time calculations based on the input values `IV_START_DATE`, `IV_END_DATE`, `IV_START_TIME`, and `IV_END_TIME` to determine the duration.\n3. **Loop Through Dates**: The formula loops through each day from `IV_START_DATE` to `IV_END_DATE`.\n4. **Check for Assigned and Published Shifts**: For each day, it checks if there are assigned or published shifts (using `ANC_ASSIGNED_SHIFT_DETAILS_ARR` and `ANC_PUBLISHED_SHIFT_DETAILS_ARR`) and calculates the duration based on these shifts.\n5. **Duration Calculation**: The duration is calculated differently depending on whether the day is the first day, the last day, or any day in between, considering the start and end times of shifts and the total assigned hours.\n6. **Rounding and Final Calculation**: The calculated durations are then rounded and summed up to get the final duration.\n7. **Return**: Finally, the formula returns the total calculated duration (`DURATION`) as a numeric value.\n\nThis summary outlines the basic steps and logic involved in the provided Oracle FastFormula, focusing on the key elements such as DBIs used, input values, return type, and a concise description of the formula's logic.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates personal leave applications in Thailand. Ensures the duration does not exceed 10 days, limits marriage or graduation leave to 2 days, prohibits paternity leave for females, checks the manager\u2019s active status, and restricts applications before September 5, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is the summary of the provided FastFormula:\n\n**DBI Values Used**: PER_ASG_DATE_PROBATION_END, PER_ASG_GRADE_NAME, GLOBAL_PAY_INTERFACE_EXTRACTION_DATE, ANC_ABS_ENTRS_APPROVAL_STATUS_CD, ANC_ABS_ENTRS_START_DATE, ANC_ABS_ENTRS_END_DATE, ANC_ABS_TYP_NAME, ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR, ANC_ABS_ENTRS_ABSENCE_TYPE_ID, ANC_ABS_ENTRS_DURATION, ANC_ABS_ENTRS_ABSENCE_STATUS_CD, PER_ASG_SEX, ANC_ABS_ENTRS_USER_MODE, IV_ABSENCE_REASON, PER_ASG_MANAGER_USER_PERSON_ID\n\n**Input Values**: iv_start_date, iv_end_date, IV_CALEDARSTARTDATE, IV_CALEDARENDDATE, IV_TOTALDURATION, IV_ABSENCE_REASON\n\n**Return Type**: The formula returns a validation result, which includes a VALID flag (indicating whether the input is valid or not), an ERROR_MESSAGE, and optionally an ERROR_CODE and TOKEN_NAME and TOKEN_VALUE.\n\n**Logic Summary**:\nThe formula starts by initializing various defaults for database items and input values. It then checks if the total duration is a multiple of 0.5, and if not, it returns an error message.\nNext, it retrieves the manager's assignment status and checks if the user mode is 'ADMIN'. If not, it checks if the start date is prior to a specific date, and if so, it returns an error message.\nThe formula then checks if the manager's assignment status is 'ACTIVE' and if the manager ID is valid. If not, it returns an error message.\nIt also checks if the total duration exceeds a certain limit (10 days), and if so, it returns an error message with the remaining days allowed.\nAdditionally, it checks if the absence reason is 'Marriage (Self)' or 'Graduation (Self)' and if the duration exceeds 2 days, and if so, it returns an error message.\nThe formula then iterates through an array of absence entry IDs and checks if the absence type is 'Personal Leave'. If so, it accumulates the duration and checks if the total duration exceeds the limit (10 days). If it does, it returns an error message with the remaining days allowed.\nFinally, the formula returns the validation result, which includes the VALID flag, ERROR_MESSAGE, and optionally an ERROR_CODE and TOKEN_NAME and TOKEN_VALUE.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates Hajj leave applications in Thailand. Ensures the duration does not exceed 10 days, requires at least 2 years of service, requires 30 days advance notice, checks the manager\u2019s active status, and restricts applications before September 5, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used**: \n- PER_ASG_DATE_PROBATION_END \n- PER_ASG_GRADE_NAME \n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE \n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD \n- ANC_ABS_ENTRS_START_DATE \n- ANC_ABS_ENTRS_END_DATE \n- ANC_ABS_TYP_NAME \n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR \n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID \n- ANC_ABS_ENTRS_DURATION \n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD \n- ANC_ABS_ENTRS_USER_MODE \n- PER_ASG_REL_DATE_START \n- PER_ASG_MANAGER_USER_PERSON_ID \n\n**Input Values**: \n- iv_start_date \n- iv_end_date \n- IV_CALEDARSTARTDATE \n- IV_CALEDARENDDATE \n- IV_TOTALDURATION \n- IV_ABSENCE_REASON \n\n**Return Type**: \nThe formula returns a validation result, which includes a VALID flag (indicating whether the validation was successful) and an ERROR_MESSAGE (providing details about any errors encountered).\n\n**Logic Summary**: \n1. Initialize default values and input parameters for dates, absence reasons, and durations.\n2. Determine the effective date based on a global pay interface extraction date.\n3. Retrieve an absence entry ID and set it as a context value.\n4. Validate the start date of the absence against specific criteria, including checking if the user mode is not 'ADMIN', the start date is not prior to a specific threshold date, the manager's assignment status is active, the start date is not within two years of the manager's assignment start date, and the start date is not within 30 days of the effective date.\n5. If any validation fails, return an error message with a specific code (e.g., 'CIMB_TH_PRIOR_DM', 'CIMB_TH_INACTIVE_MGR_ERROR', 'CIMB_TH_MHL_2_YRS', 'CIMB_TH_30_DAYS_ADV').\n6. If all validations pass, return a validation success indicator.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates monkhood leave applications in Thailand. Ensures the duration does not exceed 30 days, requires at least 2 years of service, checks the manager\u2019s active status, and restricts applications before September 5, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used**: \n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- PER_ASG_REL_DATE_START\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n\n**Input Values**: \n- iv_start_date (date)\n- iv_end_date (date)\n- IV_CALEDARSTARTDATE (date)\n- IV_CALEDARENDDATE (date)\n- IV_TOTALDURATION (Number)\n- IV_ABSENCE_REASON (Text)\n\n**Return Type**: \nThe formula returns a validation status indicated by the variable VALID, which is of type text ('Y' for valid, 'N' for not valid), along with an optional error message and token values.\n\n**Logic Summary**: \nThis FastFormula validates absence entries based on various conditions. It starts by initializing default values for dates and user modes. It then checks the user mode and, if not in admin mode, proceeds with several validation checks:\n1. **Date Validation**: It checks if the start date of the absence is before a specific cutoff date (2019/09/05). If so, it returns an error indicating that the date is prior to a certain implementation date.\n2. **Manager Status Validation**: It verifies if the manager's assignment status is active and if a manager ID is assigned. If the manager's status is not active or if there is no manager ID, it returns an error indicating an inactive manager.\n3. **Duration Validation**: It checks if the total duration of the absence exceeds 30 days. If so, it returns an error specifying the maximum allowed days.\n4. **Probation Period Validation**: It checks if the start date of the absence falls within 24 months after the employee's assignment start date. If so, it returns an error related to the maternity leave policy within two years of hiring.\nIf none of these conditions are met, the formula returns a validation status of 'Y', indicating the absence entry is valid. Otherwise, it returns 'N' along with an appropriate error message and token values where applicable.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates sterilization leave applications in Thailand. Ensures the duration is valid, checks the manager\u2019s active status, and restricts applications before September 5, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used**: \n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_TYP_NAME\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n\n**Input Values**: \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type**: \nThe formula returns a validation result, indicated by the `VALID` variable, which can be either 'Y' (valid) or 'N' (not valid), along with an error message when validation fails.\n\n**Logic Summary**: \nThis FastFormula is designed to validate certain conditions related to employee absence entries. Here is a step-by-step breakdown:\n1. **Initialize Defaults**: The formula starts by setting default values for various database items (DBIs) if they are not already set. These include dates, names, statuses, and IDs related to employee assignments, absence entries, and managerial data.\n2. **Get Input Values**: The formula accepts several input parameters, including start and end dates, calendar dates, total duration of absence, and the reason for absence.\n3. **Retrieve Context**: It retrieves specific values from the system context, such as the absence entry ID, effective date, and HR assignment ID.\n4. **Validate Manager Assignment**: The formula checks the status of the manager's assignment to ensure it is active. If not, or if the manager ID is invalid (zero), it returns an error.\n5. **Check User Mode**: It determines the user mode (admin or not) and applies different validation rules based on this mode. For non-admin users, it checks if the start date of the absence is before a specific threshold date.\n6. **Apply Validation Rules**: Based on the user mode and the absence start date, the formula applies specific validation rules. For example, if the absence start date is prior to a certain date for non-admin users, it returns an error.\n7. **Return Validation Result**: Finally, the formula returns a validation result ('Y' for valid or 'N' for not valid) along with an appropriate error message if the validation fails. The error messages are specific to the type of validation failure encountered.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates military service leave applications in Thailand. Ensures the duration does not exceed 60 days, requires at least 2 years of service, checks the manager\u2019s active status, and restricts applications before September 5, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n* PER_ASG_DATE_PROBATION_END\n* PER_ASG_GRADE_NAME\n* GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n* ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n* ANC_ABS_ENTRS_START_DATE\n* ANC_ABS_ENTRS_END_DATE\n* ANC_ABS_TYP_NAME\n* ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n* ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n* ANC_ABS_ENTRS_DURATION\n* ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n* ANC_ABS_ENTRS_USER_MODE\n* PER_ASG_REL_DATE_START\n* PER_ASG_MANAGER_USER_PERSON_ID\n* HR_ASSIGNMENT_ID\n* EFFECTIVE_DATE\n* ABSENCE_ENTRY_ID\n\n**Input Values:**\n* iv_start_date\n* iv_end_date\n* IV_CALEDARSTARTDATE\n* IV_CALEDARENDDATE\n* IV_TOTALDURATION\n* IV_ABSENCE_REASON\n\n**Return Type:**\nThe formula returns a validation result, which includes a VALID flag (indicating whether the input is valid or not) and an ERROR_MESSAGE (providing details about the error if any).\n\n**Logic Summary:**\nThe formula performs the following steps:\n1. Checks if the user mode is 'ADMIN' or not. If not, it proceeds with further validation.\n2. Verifies if the start date is prior to a specific date ('2019/09/05'). If so, it returns an error.\n3. Checks the manager's assignment status and ID. If the status is not 'ACTIVE' or the ID is 0, it returns an error.\n4. Validates the total duration of absence. If it exceeds 60 days, it returns an error.\n5. Iterates through an array of absence entry IDs and checks for any overlapping absence entries. If an overlap is found, it checks the absence type and duration. If the absence type is 'Military Service Leave' and the total duration exceeds 60 days, it returns an error.\n6. Checks if the start date is within 2 years of the employee's relationship start date. If so, it returns an error.\n7. If all validations pass, the formula returns a valid result. Otherwise, it returns an error with a corresponding message.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates training leave applications in Thailand. Ensures the duration is valid, requires 7 days advance notice, checks the manager\u2019s active status, and restricts applications before September 5, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used**: \n- `PER_ASG_DATE_PROBATION_END`\n- `PER_ASG_GRADE_NAME`\n- `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n- `ANC_ABS_ENTRS_USER_MODE`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `ABSENCE_ENTRY_ID`\n- `EFFECTIVE_DATE`\n- `HR_ASSIGNMENT_ID`\n\n**Input Values**: \n- `iv_start_date` (date)\n- `iv_end_date` (date)\n- `IV_CALEDARSTARTDATE` (date)\n- `IV_CALEDARENDDATE` (date)\n- `IV_TOTALDURATION` (Number)\n- `IV_ABSENCE_REASON` (Text)\n\n**Return Type**: \nThe formula returns a validation result, which is a set of values including a validity flag (`VALID`) and an error message (`ERROR_MESSAGE`).\n\n**Logic Summary**: \n1. The formula starts by setting default values for various database items and initializing input parameters.\n2. It extracts the absence entry ID and effective date from the context.\n3. The formula changes the HR assignment ID context to retrieve the manager's ID and checks the manager's assignment status.\n4. It then changes the effective date and absence entry ID contexts to get the user mode.\n5. If the user mode is not 'ADMIN', the formula performs several checks:\n   - It checks if the start date is before a specific cutoff date (September 5, 2019) and returns an error if true.\n   - It verifies if the manager's status is 'ACTIVE' and the manager ID is not zero; otherwise, it returns an error.\n   - It checks if the start date is less than 7 days after the payroll interface extraction date and returns an error if true.\n6. If all checks pass, the formula returns a validation result indicating that the input is valid.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates sick leave applications in Singapore. Ensures the duration does not exceed 14\u201330 days (based on grade), requires a medical certificate for durations over 1 day, prohibits overlap between calendar years, checks the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: ### Summary of the FastFormula\n\n#### DBI Values Used\n- `LEGISLATIVE_DATA_GROUP_ID`\n- `ABSENCE_ENTRY_ID`\n- `HR_ASSIGNMENT_ID`\n- `EFFECTIVE_DATE`\n- `PER_ASG_REL_DATE_START`\n- `PER_ASG_REL_ACTUAL_TERMINATION_DATE`\n- `PER_ASG_GRADE_NAME`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n- `ANC_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n- `ANC_ABS_TYP_NAME`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n- `ANC_ABS_ENTRS_END_DATE`\n- `ANC_ABS_ENTRS_START_DATE`\n- `ANC_ABS_ENTRS_ABSENCE_REASON_ID`\n\n#### Input Values\n- `iv_start_date`\n- `iv_end_date`\n- `IV_CALEDARSTARTDATE`\n- `IV_CALEDARENDDATE`\n- `IV_TOTALDURATION`\n- `IV_ABSENCE_REASON`\n\n#### Return Type\nThe formula returns a validation result, which is a set of values including a validation flag (`VALID`), an error message (`ERROR_MESSAGE`), and potentially token names and values for more detailed error information.\n\n#### Logic Summary\n1. **Initialization**: The formula starts by initializing various default values for database items and input parameters.\n2. **Year Validation**: It checks if the start and end dates span across two different calendar years. If so, it returns an error indicating that leave applications cannot overlap between two years.\n3. **Duration Validation**: The formula then validates if the total duration of the absence is a multiple of half a day. If not, it returns an error.\n4. **User Mode and Manager Status Check**: Depending on the user mode (not specified as 'ADMIN'), it checks the manager's assignment status and ensures the global pay interface extraction date is appropriate.\n5. **Absence Reason and Grade-Based Limitations**: Based on the employee's grade, it applies different limits on the total duration of absences allowed within a calendar year. It also checks for specific absence reasons and applies rules accordingly, such as restrictions on consecutive days of sick leave without a certificate.\n6. **Checks Against Existing Absence Entries**: The formula iterates through existing absence entries for the employee within the specified year, checking for overlaps, calculating remaining days available, and enforcing absence limits.\n7. **Validation and Error Handling**: Throughout these steps, it performs validation checks and returns appropriate error messages or validation results based on the input parameters and existing data.\n8. **Final Validation**: After checking all conditions, the formula returns a validation result indicating whether the absence application is valid or not, along with any relevant error messages or token values for additional information.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates brought forward leave applications in Malaysia. Ensures sufficient balance in no-expiry or 3-year expiry plans, prohibits overlap between calendar years, checks the manager\u2019s active status, restricts applications before September 23, 2019, and verifies leave duration increments. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- IV_ABSENCE_REASON\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_ATTRIBUTE7\n- PER_ASG_BARGAINING_UNIT_CODE_NAME\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n**Return Type:**\nThe formula returns a validation result (VALID) which is a string indicating whether the input values are valid or not, along with an error message if the validation fails.\n\n**Logic Summary:**\n1. The formula first checks if the total duration of the absence is a multiple of 0.5. If not, it returns an error message indicating that the leave duration is incorrect.\n2. It then checks if the person number associated with the assignment is null. If not null, it retrieves the manager's assignment status and person ID.\n3. The formula checks if the manager's assignment status is active and if the manager ID is valid. If not, it returns an error message.\n4. It then calculates the available leave balance for the person and checks if the requested leave duration exceeds the available balance. If it does, it returns an error message.\n5. The formula checks for overlapping absence periods and returns an error message if an overlap is found.\n6. For non-emergency leave, it checks the next working day's pay availability and returns an error message if the next working day's pay availability is less than 1.\n7. It also checks for half-day leave restrictions for certain shifts and returns an error message if half-day leave is not allowed.\n8. The formula applies rules specific to emergency leave and compulsory leave, returning error messages if these rules are not met.\n9. Finally, it checks the compulsory leave limit for certain grade bands and returns an error message if the limit is exceeded.\n10. If all checks pass, the formula returns a validation result indicating that the input values are valid.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates brought forward leave applications in Malaysia. Ensures sufficient balance in no-expiry or 3-year expiry plans, prohibits overlap between calendar years, checks the manager\u2019s active status, restricts applications before September 23, 2019, and verifies leave duration increments. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Based on the provided FastFormula, here is a structured summary:\n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- IV_ABSENCE_REASON\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_ATTRIBUTE7\n- PER_ASG_BARGAINING_UNIT_CODE_NAME\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n**Return Type:**\nThe formula returns a validation result (VALID) along with an error message if the validation fails.\n\n**Logic Summary:**\n1. **Initialization**: Initialize various variables with default or context values.\n2. **Validation Checks**: Perform initial checks, including validating the duration of the absence to ensure it aligns with working hours and checking for valid person and manager information.\n3. **Context Setup**: Set up necessary contexts for HR assignments, legislative data groups, and effective dates to fetch relevant data.\n4. **Balance Checks**: Calculate and check balances for different types of leave (e.g., Brought Forward Leave Plan No Expiry, 3 Years Expiry, 6 Months Expiry) to ensure the employee has sufficient leave balance.\n5. **Date and Absence Reason Validation**: Validate the absence dates to prevent overlaps with existing absences and check the absence reason for specific rules (e.g., emergency leave, compulsory leave).\n6. **Shift and Grade Validation**: Apply rules based on the employee's shift and grade, including restrictions on half-day absences for certain shifts and compulsory leave rules based on the grade.\n7. **Return Validation Result**: Return a validation result along with an error message if any validation fails, indicating whether the absence request is valid or not.\n\nThis summary captures the key aspects of the FastFormula, from initialization and validation to the final return of a validation result, without delving into the specific code details.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated annual leave accrual for employees in Malaysia based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and rounds to the nearest half-day. Returns the final accrual value and adjustments.\n\n***Instruction for the fastformula***: Based on the provided FastFormula, here is a structured summary:\n\n**DBI Values Used:** \n- PER_ASG_PERSON_NUMBER\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- PER_ASG_REL_DATE_START\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_END_DATE\n- PER_ASG_REL_ACTUAL_TERMINATION_DATE\n- PER_PERSON_ENTERPRISE_HIRE_DATE\n- PER_ASG_GRADE_NAME\n- PER_ASG_ACTION_CODE\n- PER_HIST_ASG_EFFECTIVE_START_DATE\n- PER_ASG_FTE_VALUE\n- LEGISLATIVE_DATA_GROUP_ID\n\n**Input Values:** \n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n- IV_EVENT_DATES\n- IV_BAND_CHG_DT1\n- IV_BAND_CHG_BEFVAL1\n- IV_BAND_CHG_AFTVAL1\n- IV_BAND_CHG_DT2\n- IV_BAND_CHG_BEFVAL2\n- IV_BAND_CHG_AFTVAL2\n- IV_BAND_CHG_DT3\n- IV_BAND_CHG_BEFVAL3\n- IV_BAND_CHG_AFTVAL3\n- IV_BAND_CHG_DT4\n- IV_BAND_CHG_BEFVAL4\n- IV_BAND_CHG_AFTVAL4\n\n**Return Type:** \nThe formula returns the Accrual value along with adjustment values, dates, and types.\n\n**Logic Summary:**\nThe FastFormula calculates the accrual for an employee based on their job details, absence records, and band changes. Here's a step-by-step breakdown:\n1. It checks if the plan enrollment start date is equal to a specific date and the accrual period start date is before the plan enrollment start date. If true, it sets the accrual to 0 and returns.\n2. It then retrieves the employee's FTE (Full-Time Equivalent) value, job name, and grade name.\n3. The formula iterates through band change dates and rates to calculate the accrual for each period.\n4. It also checks for absence records within the accrual period and adjusts the accrual accordingly.\n5. The formula logs various details, including band change dates, accrual rates, and absence records, for debugging purposes.\n6. It calculates the total absence days before and after band changes and adjusts the accrual accordingly.\n7. Finally, the formula returns the calculated accrual value along with adjustment values, dates, and types.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated annual leave accrual for employees in Malaysia based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and rounds to the nearest half-day. Returns the final accrual value and adjustments.\n\n***Instruction for the fastformula***: ### Summary of the FastFormula\n\n#### DBI Values Used:\n- `PER_ASG_PERSON_NUMBER`\n- `ANC_ABS_TYP_NAME`\n- `ANC_ABS_PLN_NAME`\n- `PER_ASG_REL_DATE_START`\n- `ANC_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n- `ANC_ABS_ENTRS_DURATION`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n- `ANC_ABS_ENTRS_START_DATE`\n- `ANC_ABS_ENTRS_END_DATE`\n- `PER_ASG_REL_ACTUAL_TERMINATION_DATE`\n- `PER_PERSON_ENTERPRISE_HIRE_DATE`\n- `PER_ASG_GRADE_NAME`\n- `PER_ASG_ACTION_CODE`\n- `PER_ASG_JOB_NAME`\n- `PER_ASG_FTE_VALUE`\n- `PER_HIST_ASG_EFFECTIVE_START_DATE`\n\n#### Input Values:\n- `IV_ACCRUAL`\n- `IV_ACCRUALPERIODENDDATE`\n- `IV_ACCRUALPERIODSTARTDATE`\n- `IV_PLANENROLLMENTSTARTDATE`\n- `IV_PLANENROLLMENTENDDATE`\n- `IV_CALEDARENDDATE`\n- `IV_CALEDARSTARTDATE`\n- `IV_EVENT_DATES`\n- `IV_BAND_CHG_DT1`\n- `IV_BAND_CHG_BEFVAL1`\n- `IV_BAND_CHG_AFTVAL1`\n- `IV_BAND_CHG_DT2`\n- `IV_BAND_CHG_BEFVAL2`\n- `IV_BAND_CHG_AFTVAL2`\n- `IV_BAND_CHG_DT3`\n- `IV_BAND_CHG_BEFVAL3`\n- `IV_BAND_CHG_AFTVAL3`\n- `IV_BAND_CHG_DT4`\n- `IV_BAND_CHG_BEFVAL4`\n- `IV_BAND_CHG_AFTVAL4`\n\n#### Return Type:\nThe formula returns an accrual value, along with adjustment values, dates, and types. The primary return is a numeric value representing the calculated accrual.\n\n#### Logic Summary:\n1. **Initialization**: The formula initializes various default values for different database items (DBIs) and input values.\n2. **Date and FTE (Full-Time Equivalent) Determination**: It calculates the start and end dates for the accrual period, plan enrollment, and calendar, considering the employee's hire date and job details.\n3. **Band Change Processing**: The formula checks for any band changes (up to 4 changes) within the accrual period and processes them to adjust accrual rates accordingly.\n4. **Absence Processing**: For each absence entry within the specified plan (e.g., Annual Leave Plan), it calculates the absence duration before and after any band changes, adjusting accruals based on absence types and approval statuses.\n5. **Accrual Calculation**: Based on the processed absences, band changes, and FTE values, the formula calculates the final accrual, considering various conditions and adjustments.\n6. **Logging and Return**: Throughout the process, it logs key information using `ESS_LOG_WRITE` for debugging and tracking purposes. Finally, it returns the calculated accrual value along with any adjustment details.\n\nThis summary encapsulates the core logic and components of the FastFormula, providing a comprehensive overview without delving into the specific code or intricate details.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated brought forward leave accrual for employees in Malaysia with no expiry. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and tracks balance carryover. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n* **DBI Values Used**: PER_ASG_PERSON_NUMBER, ANC_ABS_TYP_NAME, ANC_ABS_PLN_NAME, PER_ASG_REL_DATE_START, PER_PERSON_ENTERPRISE_HIRE_DATE, PER_ASG_GRADE_NAME, LEGISLATIVE_DATA_GROUP_ID, PERSON_ID, HR_ASSIGNMENT_ID\n* **Input Values**: IV_ACCRUAL, IV_ACCRUALPERIODENDDATE, IV_ACCRUALPERIODSTARTDATE, IV_PLANENROLLMENTSTARTDATE, IV_PLANENROLLMENTENDDATE, IV_CALEDARENDDATE, IV_CALEDARSTARTDATE\n* **Return Type**: The formula returns a set of values including ACCRUAL, adjustment values, adjustment dates, and adjustment types, which are likely used to calculate and manage employee leave accruals.\n* **Logic Summary**: \n  1. The formula starts by setting default values for various database items (DBIs) and input values.\n  2. It then retrieves the legislative data group ID, person ID, and HR assignment ID from the context.\n  3. The formula calculates the length of service in months and determines the previous year-end date.\n  4. It changes the context to the previous year-end date and retrieves the plan balances for the annual leave plan and brought forward leave plan.\n  5. Based on the employee's grade, the formula applies different rules to calculate the available leave days and accrual.\n  6. For certain grades, it checks if the accrual is negative and sets it to 0 if so.\n  7. The formula then calculates the carryover limit and available leave days based on the length of service.\n  8. Finally, it calculates the accrual and returns the result along with adjustment values, dates, and types. The logic is designed to manage employee leave accruals based on their grade, length of service, and other factors.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated brought forward leave accrual for employees in Malaysia with 3-year expiry. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and tracks balance across years. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided FastFormula:\n\n**DBI Values Used:** \n- PER_ASG_PERSON_NUMBER\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- LEGISLATIVE_DATA_GROUP_ID\n- PERSON_ID\n- HR_ASSIGNMENT_ID\n\n**Input Values:** \n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n\n**Return Type:** \nThe formula returns multiple values including ACCRUAL (a numeric value representing the calculated accrual), adjustmentvalues (an array of numbers), adjustmentdates (an array of dates), and adjustmenttypes (an array of text values).\n\n**Logic Summary:** \nThis FastFormula calculates employee leave accruals based on their hire date, legislative data group, and specific leave plans. Here's a step-by-step breakdown:\n1. It initializes various variables including default dates, plan names, and a legislative data group ID.\n2. It determines the length of service (LOS) in months and uses this to calculate carryover limits for brought forward leave.\n3. It retrieves the current balance of annual and brought forward leave plans as of the previous year-end date.\n4. For employees with less than 3 years of service, it applies specific carryover limits based on the length of service.\n5. It calculates the accrual by subtracting the carried-over leave from the brought forward leave balance and adds a portion of the annual leave balance based on the length of service.\n6. It then populates adjustment values, types, and dates arrays with the calculated accrual and specific adjustment type.\n7. Finally, it returns the calculated accrual and adjustment details. The logic is designed to handle different scenarios based on the employee's length of service and leave plan balances.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated annual leave accrual for employees in Singapore based on grade and service tenure. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and ensures compliance with local policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***: Here is a structured summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_PERSON_NUMBER\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_END_DATE\n- PER_ASG_REL_ACTUAL_TERMINATION_DATE\n- PER_PERSON_ENTERPRISE_HIRE_DATE\n- HR_ASSIGNMENT_ID\n- LEGISLATIVE_DATA_GROUP_ID\n- PERSON_ID\n\n**Input Values:**\n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n- IV_EVENT_DATES\n- IV_BAND_CHG_DT1\n- IV_BAND_CHG_BEFVAL1\n- IV_BAND_CHG_AFTVAL1\n- IV_BAND_CHG_DT2\n- IV_BAND_CHG_BEFVAL2\n- IV_BAND_CHG_AFTVAL2\n- IV_BAND_CHG_DT3\n- IV_BAND_CHG_BEFVAL3\n- IV_BAND_CHG_AFTVAL3\n- IV_BAND_CHG_DT4\n- IV_BAND_CHG_BEFVAL4\n- IV_BAND_CHG_AFTVAL4\n\n**Return Type:**\nThe formula returns an accrual value, specifically related to annual leave, which is a numeric value.\n\n**Logic Summary:**\n1. The formula first checks if the plan enrollment start date is equal to a specific date ('2019/09/23') and if the accrual period start date is before the plan enrollment start date, and the plan enrollment start date is not equal to the hire date. If this condition is true, it calculates the service months and determines the service band based on the months of service.\n2. It then determines the grade band based on the grade name and calculates the annual leave accrual rate for the employee.\n3. The formula checks for approved absences within the accrual period and calculates the total approved absence days.\n4. It then calculates the reduced accrual based on the approved absence days and the accrual rate.\n5. The formula also checks for band changes within the accrual period and adjusts the accrual calculation accordingly.\n6. Finally, the formula returns the calculated accrual value, which is the reduced accrual amount.\n7. If the plan name is 'Annual Leave Plan', the formula performs additional checks for absences and band changes, and adjusts the accrual calculation accordingly.\n8. The formula uses various dates, such as the seniority date, hire date, and band change dates, to determine the correct accrual calculation.\n9. The formula logs various values and dates for auditing and debugging purposes.\n10. The final accrual value is calculated based on the reduced accrual amount, and any adjustments made for band changes and absences.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated annual leave accrual for contractors in Singapore. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with contractor-specific policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***: Here is a summary of the provided FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_PERSON_NUMBER\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_END_DATE\n- PER_ASG_REL_ACTUAL_TERMINATION_DATE\n- PER_PERSON_ENTERPRISE_HIRE_DATE\n- IV_BAND_CHG_DT1\n- IV_BAND_CHG_BEFVAL1\n- IV_BAND_CHG_AFTVAL1\n- IV_BAND_CHG_DT2\n- IV_BAND_CHG_BEFVAL2\n- IV_BAND_CHG_AFTVAL2\n- IV_BAND_CHG_DT3\n- IV_BAND_CHG_BEFVAL3\n- IV_BAND_CHG_AFTVAL3\n- IV_BAND_CHG_DT4\n- IV_BAND_CHG_BEFVAL4\n- IV_BAND_CHG_AFTVAL4\n- PER_ASG_GRADE_NAME\n- PER_ASG_PROJECTED_ASSIGNMENT_END_DATE\n- PER_ASG_REL_DATE_START\n\n**Input Values:**\n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n- IV_EVENT_DATES\n- IV_BAND_CHG_DT1\n- IV_BAND_CHG_BEFVAL1\n- IV_BAND_CHG_AFTVAL1\n- IV_BAND_CHG_DT2\n- IV_BAND_CHG_BEFVAL2\n- IV_BAND_CHG_AFTVAL2\n- IV_BAND_CHG_DT3\n- IV_BAND_CHG_BEFVAL3\n- IV_BAND_CHG_AFTVAL3\n- IV_BAND_CHG_DT4\n- IV_BAND_CHG_BEFVAL4\n- IV_BAND_CHG_AFTVAL4\n\n**Return Type:**\nThe formula returns a numerical value representing the calculated accrual, which can be positive or negative depending on the input values and conditions.\n\n**Logic Summary:**\n1. The formula initializes various variables with default values and input values.\n2. It checks if the plan enrollment start date matches a specific date and if the accrual period start date is before the plan enrollment start date. If true, it sets the accrual to 0.\n3. It calculates the number of months between the plan enrollment end date and the person's hire date.\n4. It determines the grade band based on the person's grade name.\n5. It retrieves the annual accrual entitlement from a table based on the grade band.\n6. It calculates the accrual rate per duration by dividing the annual accrual by the number of days in the accrual period.\n7. It loops through absence entries and checks if the absence type is 'Unpaid Leave' or other specific types. If true, it calculates the absence duration and updates the approved absence days.\n8. It calculates the reduced days by multiplying the approved absence days by the accrual rate per duration.\n9. It floors the reduced days to the nearest whole number and calculates the decimal part.\n10. If the decimal part is 0, it sets the final accrual to the floored value. If the decimal part is greater than 0 and less than 0.5, it sets the final accrual to the floored value. If the decimal part is greater than or equal to 0.5, it sets the final accrual to the floored value plus 1.\n11. It returns the final accrual value.\n12. If the person's projected assignment end date falls within the accrual period, it adjusts the accrual accordingly.\n13. Finally, it returns the calculated accrual value.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated annual leave accrual for contractors in Singapore. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with contractor-specific policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***: ### FastFormula Summary\n\n**DBI Values Used:**\n- PER_ASG_PERSON_NUMBER\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_END_DATE\n- PER_ASG_REL_ACTUAL_TERMINATION_DATE\n- PER_PERSON_ENTERPRISE_HIRE_DATE\n- PER_ASG_GRADE_NAME\n- PER_ASG_PROJECTED_ASSIGNMENT_END_DATE\n- PER_ASG_REL_DATE_START\n\n**Input Values:**\n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n- IV_EVENT_DATES\n- IV_BAND_CHG_DT1\n- IV_BAND_CHG_BEFVAL1\n- IV_BAND_CHG_AFTVAL1\n- IV_BAND_CHG_DT2\n- IV_BAND_CHG_BEFVAL2\n- IV_BAND_CHG_AFTVAL2\n- IV_BAND_CHG_DT3\n- IV_BAND_CHG_BEFVAL3\n- IV_BAND_CHG_AFTVAL3\n- IV_BAND_CHG_DT4\n- IV_BAND_CHG_BEFVAL4\n- IV_BAND_CHG_AFTVAL4\n- adjustmentvalues\n- adjustmentdates\n- adjustmenttypes\n\n**Return Type:**\nThe formula returns a numeric value representing the calculated accrual, specifically the final accrual amount after considering various factors such as absence periods, band changes, and accrual rates.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by defining default values for various database items (DBIs) and input values, setting the stage for the calculations.\n2. **Date and Grade Band Determination**: It determines the hire date, plan enrollment dates, calendar dates, and grade band based on the provided input values and DBIs.\n3. **Absence and Accrual Calculation**: The formula calculates the absence duration for different types of leaves and determines the accrual rate based on the grade band and absence type.\n4. **Band Change Consideration**: It considers band changes within the accrual period and calculates the accrued amount for each period before and after band changes.\n5. **Accrual Adjustment**: The formula adjusts the accrual based on the approved absence days and the accrued period.\n6. **Final Accrual Calculation**: It calculates the final accrual by rounding the total accrued amount to the nearest whole number, considering any decimal parts.\n7. **Termination Date Adjustment**: If the projected assignment end date falls within the accrual period, the formula adjusts the accrual proportionally.\n8. **Return Accrual**: Finally, the formula returns the calculated accrual amount.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated annual leave accrual for contractors in Malaysia. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with contractor-specific policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***: Here is a concise summary of the provided Oracle FastFormula:\n\n**DBI Values Used:**\n- PER_ASG_PERSON_NUMBER\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- PER_ASG_REL_DATE_START\n- ANC_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- PER_ASG_REL_ACTUAL_TERMINATION_DATE\n- PER_PERSON_ENTERPRISE_HIRE_DATE\n- PER_ASG_GRADE_NAME\n- PER_ASG_ACTION_CODE\n- PER_ASG_PROJECTED_ASSIGNMENT_END_DATE\n- PER_ASG_JOB_NAME\n- PER_ASG_FTE_VALUE\n\n**Input Values:**\n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n- IV_EVENT_DATES\n- IV_BAND_CHG_DT1\n- IV_BAND_CHG_BEFVAL1\n- IV_BAND_CHG_AFTVAL1\n- IV_BAND_CHG_DT2\n- IV_BAND_CHG_AFTVAL2\n- IV_BAND_CHG_BEFVAL2\n- IV_BAND_CHG_DT3\n- IV_BAND_CHG_BEFVAL3\n- IV_BAND_CHG_AFTVAL3\n- IV_BAND_CHG_DT4\n- IV_BAND_CHG_AFTVAL4\n- IV_BAND_CHG_BEFVAL4\n\n**Return Type:**\nThe formula returns an accrual value, which is a numeric value representing the calculated leave accrual for an employee based on their work schedule and absence records.\n\n**Logic Summary:**\n1. The formula starts by setting up default values for various database items (DBIs) and input values.\n2. It then checks if the plan enrollment start date is equal to a specific date (l_dm_date) and if the accrual period start date is before the plan enrollment start date. If true, it calculates the leave accrual based on the employee's grade band and year band.\n3. If the condition in step 2 is not met, it checks for band changes within the accrual period and calculates the leave accrual based on the band changes and absence records.\n4. The formula then loops through the absence entries for the employee and calculates the absence duration within the accrual period.\n5. If the absence type is 'Unpaid Leave' or other specific types, it calculates the absence duration and updates the total absence days.\n6. Finally, the formula returns the calculated accrual value, which is the total absence days multiplied by the accrual rate, with adjustments for band changes and absence records.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated annual leave accrual for contractors in Malaysia. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with contractor-specific policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:**\n\n* PER_ASG_PERSON_NUMBER\n* ANC_ABS_TYP_NAME\n* ANC_ABS_PLN_NAME\n* PER_ASG_REL_DATE_START\n* PER_ASG_REL_ACTUAL_TERMINATION_DATE\n* PER_PERSON_ENTERPRISE_HIRE_DATE\n* PER_ASG_GRADE_NAME\n* PER_ASG_ACTION_CODE\n* PER_ASG_PROJECTED_ASSIGNMENT_END_DATE\n* PER_ASG_JOB_NAME\n* PER_ASG_FTE_VALUE\n* PER_ASG_EMPLOYMENT_CATEGORY\n* ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n* ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n* ANC_ABS_ENTRS_DURATION\n* ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n* ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n* ANC_ABS_ENTRS_START_DATE\n* ANC_ABS_ENTRS_END_DATE\n\n**Input Values:**\n\n* IV_ACCRUAL\n* IV_ACCRUALPERIODENDDATE\n* IV_ACCRUALPERIODSTARTDATE\n* IV_PLANENROLLMENTSTARTDATE\n* IV_PLANENROLLMENTENDDATE\n* IV_CALEDARENDDATE\n* IV_CALEDARSTARTDATE\n* IV_EVENT_DATES\n* IV_BAND_CHG_DT1\n* IV_BAND_CHG_BEFVAL1\n* IV_BAND_CHG_AFTVAL1\n* IV_BAND_CHG_DT2\n* IV_BAND_CHG_AFTVAL2\n* IV_BAND_CHG_BEFVAL2\n* IV_BAND_CHG_DT3\n* IV_BAND_CHG_BEFVAL3\n* IV_BAND_CHG_AFTVAL3\n* IV_BAND_CHG_DT4\n* IV_BAND_CHG_AFTVAL4\n* IV_BAND_CHG_BEFVAL4\n\n**Return Type:**\n\nThe formula returns a numerical value representing the accrual amount.\n\n**Logic Summary:**\n\n1. The formula initializes various default values and input parameters.\n2. It checks if the plan enrollment start date is equal to a specific date (l_dm_date) and if the accrual period start date is less than the plan enrollment start date. If true, it calculates the accrual based on the absence entries and returns the result.\n3. If the condition in step 2 is not met, it calculates the accrual based on the band changes and absence entries.\n4. The formula loops through the absence entries and calculates the absence duration for each entry.\n5. It then calculates the accrual amount based on the absence duration and band changes.\n6. The formula returns the final accrual amount, taking into account any adjustments and rounding.\n7. Throughout the calculation, the formula uses various database items (DBIs) and input values to determine the accrual amount.\n8. The formula also handles different scenarios, such as when there are no band changes or when the absence entry dates overlap with the accrual period.\n9. The final accrual amount is calculated by considering the approved absence days, accrual rate, and band changes.\n10. The formula returns the final accrual amount, which can be positive or negative, depending on the calculation.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated brought forward leave accrual for employees in Malaysia with 3-year expiry, year 1. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and tracks initial year-specific balance. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used**: \n- PER_ASG_PERSON_NUMBER\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- LEGISLATIVE_DATA_GROUP_ID\n- PERSON_ID\n- HR_ASSIGNMENT_ID\n\n**Input Values**: \n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n\n**Return Type**: \nThe formula returns a numerical value representing the accrual amount, along with empty values for adjustment values, dates, and types.\n\n**Logic Summary**: \nThe formula calculates an employee's annual leave accrual based on their length of service (LOS) in months. Here's a step-by-step breakdown:\n1. It initializes various variables, including the legislative data group ID, person ID, hire date, and previous year-end date.\n2. It calculates the length of service in months by comparing the accrual period start date with the hire date.\n3. It retrieves the previous year's leave balance for the 'Annual Leave Plan Employee' plan.\n4. Based on the length of service, it applies different accrual rates:\n   - For LOS up to 24 months, it accrues the least of 7 or the previous year's leave balance.\n   - For LOS between 24 and 48 months, it accrues the least of 5 or the previous year's leave balance.\n   - For LOS between 48 and 180 months, it accrues the least of 8 or the previous year's leave balance.\n   - For LOS above 180 months, it accrues the least of 11 or the previous year's leave balance.\n5. The formula logs key values, including the person ID, previous year-end date, leave balance, and accrual amount, for auditing or debugging purposes.\n6. Finally, it returns the calculated accrual amount, along with empty values for adjustments.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated brought forward leave accrual for employees in Malaysia with 3-year expiry, year 2. Carries over the balance from year 1, restricts accrual during unpaid, maternity, emergency, or Hajj leave. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: PER_ASG_PERSON_NUMBER, ANC_ABS_TYP_NAME, ANC_ABS_PLN_NAME, PER_ASG_REL_DATE_START, PER_ASG_GRADE_NAME, LEGISLATIVE_DATA_GROUP_ID, PERSON_ID, HR_ASSIGNMENT_ID\n* **Input Values**: IV_ACCRUAL, IV_ACCRUALPERIODENDDATE, IV_ACCRUALPERIODSTARTDATE, IV_PLANENROLLMENTSTARTDATE, IV_PLANENROLLMENTENDDATE, IV_CALEDARENDDATE, IV_CALEDARSTARTDATE\n* **Return Type**: The formula returns multiple values: ACCRUAL (a numerical value representing the accrual amount), adjustmentvalues (an array or list of numerical values for adjustments), adjustmentdates (an array or list of date values for adjustments), and adjustmenttypes (an array or list of text values for adjustment types)\n* **Logic Summary**: \n  1. The formula starts by initializing various default values and input parameters.\n  2. It then checks if the plan enrollment start date matches a specific date (September 23, 2019) and if the accrual period start date is before the plan enrollment start date, and the plan enrollment start date is not the same as the hire date.\n  3. If these conditions are met, the accrual amount is set to 0.\n  4. Otherwise, it calculates the previous year-end date based on the accrual period start date and changes the context to this date.\n  5. Within this new context, it retrieves the plan balance for a specific plan name ('Brought Forward Leave Plan 3 Years Expiry - Year 1') and assigns this balance to the accrual amount.\n  6. The formula logs the calculated accrual balance and the previous year-end date for auditing or tracking purposes.\n  7. Finally, the formula returns the calculated accrual amount along with any adjustment values, dates, and types, which are initially set to empty or default values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated brought forward leave accrual for employees in Malaysia with 3-year expiry, year 3. Carries over the balance from year 2, restricts accrual during unpaid, maternity, emergency, or Hajj leave. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used:** \n- PER_ASG_PERSON_NUMBER\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- LEGISLATIVE_DATA_GROUP_ID\n- PERSON_ID\n- HR_ASSIGNMENT_ID\n\n**Input Values:** \n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n\n**Return Type:** \nThe formula returns multiple values including the ACCRUAL value and three additional arrays: adjustmentvalues, adjustmentdates, and adjustmenttypes.\n\n**Logic Summary:** \n1. The formula first checks if the current plan enrollment start date matches a specific date (June 1, 2019) and if the accrual period start date is before the plan enrollment start date, and the plan enrollment start date is not the same as the hire date.\n2. If all these conditions are true, it sets the ACCRUAL to 0.\n3. If the conditions are not met, it changes the context to the previous year-end date and retrieves the legislative data group ID.\n4. It then calculates the balance of a specific leave plan named 'Brought Forward Leave Plan 3 Years Expiry - Year 2' as of the previous year-end date.\n5. This balance is then assigned to the ACCRUAL variable.\n6. The formula also involves calculating the length of service in months from the hire date to the day before the accrual period start date.\n7. Throughout the process, it utilizes defaults for several database items and input values to determine the correct context, dates, and plan balances.\n8. Finally, the formula returns the calculated ACCRUAL along with empty arrays for adjustment values, dates, and types.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated hospital leave accrual for employees in Malaysia based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave days. If the plan enrollment start date matches September 23, 2019, and the accrual period start date is before write a  date, accrual is set to 0; otherwise, it uses the input accrual value. Returns the final accrual value.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used:** PER_ASG_REL_DATE_START\n\n**Input Values:** \n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n- IV_EVENT_DATES\n- IV_BAND_CHG_DT1\n- IV_BAND_CHG_BEFVAL1\n- IV_BAND_CHG_AFTVAL1\n- IV_BAND_CHG_DT2\n- IV_BAND_CHG_BEFVAL2\n- IV_BAND_CHG_AFTVAL2\n- IV_BAND_CHG_DT3\n- IV_BAND_CHG_BEFVAL3\n- IV_BAND_CHG_AFTVAL3\n- IV_BAND_CHG_DT4\n- IV_BAND_CHG_BEFVAL4\n- IV_BAND_CHG_AFTVAL4\n- l_dm_date\n- L_hire_date\n\n**Return Type:** The formula returns an accrual value.\n\n**Logic Summary:**\n1. The formula first checks if the plan enrollment start date matches a specific date ('2019/09/23 00:00:00') and if the accrual period start date is before the plan enrollment start date.\n2. If both conditions are true, it sets the accrual to 0. Otherwise, it sets the accrual to the input accrual value.\n3. Regardless of the accrual value, it logs specific date values (accrual period start and end dates, calendar start and end dates) using the ESS_LOG_WRITE function.\n4. The formula then returns the calculated accrual value. \n\nThis summary provides an overview of how the formula processes input values to determine an accrual value based on specific conditions and logs relevant dates before returning the accrual.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Retrieves compensation data for absence plans in Malaysia. Checks for specific absence types (e.g., annual, sick, Hajj) with block leave reasons within a specified period, determining if compensation limits are exceeded. Returns a status indicating whether compensation data exists.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: \n  - PER_ASG_PERSON_NUMBER\n  - ANC_ABS_TYP_NAME\n  - ANC_ABS_PLN_NAME\n  - PER_ASG_REL_DATE_START\n  - ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  - ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - ANC_ABS_ENTRS_DURATION\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  - ANC_ABS_ENTRS_ABSENCE_REASON_ID\n  - ANC_ABS_ENTRS_END_DATE\n  - ANC_ABS_ENTRS_START_DATE\n  - PER_ASG_GRADE_NAME\n  - PER_ASG_JOB_NAME\n  - PERSON_ID\n  - EFFECTIVE_DATE\n  - LEGISLATIVE_DATA_GROUP_ID\n\n* **Input Values**: \n  - IV_ACCRUAL\n  - IV_ACCRUALPERIODENDDATE\n  - IV_ACCRUALPERIODSTARTDATE\n  - IV_PLANENROLLMENTSTARTDATE\n  - IV_PLANENROLLMENTENDDATE\n  - IV_CALEDARENDDATE\n  - IV_CALEDARSTARTDATE\n  - IV_EVENT_DATES\n  - IV_BAND_CHG_DT1\n  - IV_BAND_CHG_BEFVAL1\n  - IV_BAND_CHG_AFTVAL1\n  - IV_BAND_CHG_DT2\n  - IV_BAND_CHG_AFTVAL2\n  - IV_BAND_CHG_BEFVAL2\n  - IV_BAND_CHG_DT3\n  - IV_BAND_CHG_BEFVAL3\n  - IV_BAND_CHG_AFTVAL3\n  - IV_BAND_CHG_DT4\n  - IV_BAND_CHG_AFTVAL4\n  - IV_BAND_CHG_BEFVAL4\n  - check_start_date\n  - check_end_date\n  - comp_limit\n  - CURR_YR_ST_date\n  - CURR_YR_END_date\n\n* **Return Type**: The formula returns a character value indicating whether a certain condition related to absence entries and their durations is met.\n\n* **Logic Summary**: \n  1. Initialize various variables, including dates, absence types, and limits.\n  2. Set up contexts for absence entries based on the provided input values.\n  3. Loop through each absence entry to check its status, approval status, and dates.\n  4. For each valid absence entry, check its type and duration against specific conditions and limits.\n  5. If an absence entry matches certain criteria (like being of type 'Annual Leave', 'Brought Forward Leave', or other specified types with durations exceeding a certain limit), mark a return variable as 'Y'.\n  6. If the return variable is marked 'Y', exit the loop.\n  7. After checking all absence entries, return the value of the return variable, indicating whether the specified conditions were met.\n  8. The logic involves checking for various leave types, durations, and dates to determine if any absence entries exceed a certain limit or match specific conditions, ultimately determining the return value based on these checks.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated hospital leave accrual for employees in Singapore based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave days. If the plan enrollment start date matches September 23, 2019, the accrual period start date is before write a  date, and the plan enrollment start date is not the hire date, accrual is set to 0; otherwise, it uses the input accrual value. For employees with grade 'INTERN', the accrual is prorated based on the proportion of days in the plan enrollment period to the total calendar period. Returns the final accrual value.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: PER_ASG_REL_DATE_START, PER_ASG_GRADE_NAME\n* **Input Values**: IV_ACCRUAL, IV_ACCRUALPERIODENDDATE, IV_ACCRUALPERIODSTARTDATE, IV_PLANENROLLMENTSTARTDATE, IV_PLANENROLLMENTENDDATE, IV_CALEDARENDDATE, IV_CALEDARSTARTDATE, IV_EVENT_DATES, IV_BAND_CHG_DT1, IV_BAND_CHG_BEFVAL1, IV_BAND_CHG_AFTVAL1, IV_BAND_CHG_DT2, IV_BAND_CHG_AFTVAL2, IV_BAND_CHG_BEFVAL2, IV_BAND_CHG_DT3, IV_BAND_CHG_BEFVAL3, IV_BAND_CHG_AFTVAL3, IV_BAND_CHG_DT4, IV_BAND_CHG_AFTVAL4, IV_BAND_CHG_BEFVAL4\n* **Return Type**: The formula returns a numeric value representing the calculated accrual amount.\n* **Logic Summary**: \n  1. The formula first checks if the plan enrollment start date matches a specific date ('2019/09/23 00:00:00') and if the accrual period start date is before the plan enrollment start date, and the plan enrollment start date is not equal to the hire date. \n  2. If this condition is true, the accrual amount is set to 0; otherwise, it is set to the input accrual value.\n  3. If the grade name is 'INTERN', the accrual amount is then adjusted by a factor that is the ratio of the number of days between the plan enrollment end and start dates to the number of days between the calendar end and start dates.\n  4. Finally, the formula returns the calculated accrual amount.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Retrieves compensation data for absence plans in Singapore. Checks for specific absence types (e.g., annual, sick, Hajj) with block leave reasons within a specified period, determining if compensation limits are exceeded. Returns a status indicating whether compensation data exists.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: \n  - PER_ASG_PERSON_NUMBER\n  - ANC_ABS_TYP_NAME\n  - ANC_ABS_PLN_NAME\n  - PER_ASG_REL_DATE_START\n  - ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  - ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - ANC_ABS_ENTRS_DURATION\n  - ANC_ABS_TYP_NAME\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  - ANC_ABS_ENTRS_ABSENCE_REASON_ID\n  - ANC_ABS_ENTRS_END_DATE\n  - ANC_ABS_ENTRS_START_DATE\n  - PER_ASG_GRADE_NAME\n  - PER_ASG_JOB_NAME\n  - LEGISLATIVE_DATA_GROUP_ID\n  - PERSON_ID\n  - EFFECTIVE_DATE\n\n* **Input Values**:\n  - IV_ACCRUAL\n  - IV_ACCRUALPERIODENDDATE\n  - IV_ACCRUALPERIODSTARTDATE\n  - IV_PLANENROLLMENTSTARTDATE\n  - IV_PLANENROLLMENTENDDATE\n  - IV_CALEDARENDDATE\n  - IV_CALEDARSTARTDATE\n  - IV_EVENT_DATES\n  - IV_BAND_CHG_DT1\n  - IV_BAND_CHG_BEFVAL1\n  - IV_BAND_CHG_AFTVAL1\n  - IV_BAND_CHG_DT2\n  - IV_BAND_CHG_AFTVAL2\n  - IV_BAND_CHG_BEFVAL2\n  - IV_BAND_CHG_DT3\n  - IV_BAND_CHG_BEFVAL3\n  - IV_BAND_CHG_AFTVAL3\n  - IV_BAND_CHG_DT4\n  - IV_BAND_CHG_AFTVAL4\n  - IV_BAND_CHG_BEFVAL4\n  - check_start_date\n  - check_end_date\n  - comp_limit\n  - CURR_YR_ST_date\n  - CURR_YR_END_date\n\n* **Return Type**: \n  The formula returns a character value indicating whether a specific condition related to absence entries and their approval status is met.\n\n* **Logic Summary**: \n  The formula iterates through an array of absence entries for a given person, checking each entry's status, approval status, and start and end dates against certain conditions and date ranges. It specifically looks for absence types such as Annual Leave, Maternity Leave, and others, with a particular reason ID. If it finds an entry that matches these criteria and falls within the specified current year range, it returns 'Y'. Otherwise, it returns 'N'. The formula uses various default values and input parameters to perform these checks, including dates, absence types, and approval statuses. It logs key information during its execution for auditing or debugging purposes. The logic involves looping through each absence entry, changing contexts to assess each entry individually, and applying conditional logic to determine the return value based on the absence entry details and the input parameters provided.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates full-pay maternity leave applications in Malaysia. Ensures the duration does not exceed 60 days, the employee has worked at least 3 months, prohibits leave during probation for contract employees, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:**\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_REASON_ID\n- PER_ASG_GRADE_NAME\n- PER_PER_CONT_REL_CONTACT_TYPE\n- PER_PER_CONT_REL_CONTACT_PERSON_ID\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_EXPECTEDCHILDBIRTHDATE\n- IV_ACTUALCHILDBIRTHDATE\n\n**Return Type:**\nThe formula returns a set of values including a validation flag (VALID), an error message (ERROR_MESSAGE), and potentially token names and values (TOKEN_NAME, TOKEN_VALUE). The primary return is a validation indicator of type character ('Y' or 'N') along with an error message if validation fails.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by setting default values for various database items (DBIs) and input parameters, ensuring all necessary variables are initialized before use.\n2. **Context Setup**: It sets up context for absence entry ID, effective date, and HR assignment ID to access relevant data.\n3. **Validation Checks**: \n   - Checks if the input start date is before a specific cutoff date and returns an error if true.\n   - Verifies the manager's assignment status and returns an error if the manager is inactive.\n   - Validates the actual childbirth date against the expected date and the start date of the absence, returning errors for invalid conditions.\n4. **Grade-Based Limitations**:\n   - Determines the employee's grade and sets limitations (in days) for maternity leave based on the grade.\n5. **Duration Checks**:\n   - Checks if the requested leave duration exceeds the grade-based limitation and returns an error if it does.\n6. **Contact and Child Information**:\n   - Retrieves contact information for the employee, specifically looking for child contacts.\n   - For each child found, it checks the child's date of birth to determine the youngest child and whether the leave start date is sufficiently after the child's birth.\n   - Applies specific rules if more than five children are found or if the youngest child's birthdate does not meet certain criteria.\n7. **Historical Absence Check**:\n   - Iterates through previous absence entries for the employee, checking for maternity leaves within a certain time frame.\n   - Applies rules to prevent repeated maternity leaves within a specified period or if the leave duration exceeds allowed limits when combined with previous leaves.\n8. **Final Validation and Return**:\n   - After performing all checks, the formula returns a validation result ('Y' or 'N') along with an error message if validation fails. It may also return token names and values for additional context on the error.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates full-pay maternity leave applications in Malaysia. Ensures the duration does not exceed 60 days, the employee has worked at least 3 months, prohibits leave during probation for contract employees, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: ### FastFormula Summary\n\n#### DBI Values Used:\n- `ABSENCE_ENTRY_ID`\n- `ANC_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n- `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_ENTRS_DURATION`\n- `ANC_ABS_TYP_NAME`\n- `ANC_ABS_ENTRS_END_DATE`\n- `ANC_ABS_ENTRS_START_DATE`\n- `PER_ASG_GRADE_NAME`\n- `PER_PER_CONT_REL_CONTACT_TYPE`\n- `PER_PER_CONT_REL_CONTACT_PERSON_ID`\n- `HR_ASSIGNMENT_ID`\n- `PERSON_ID`\n- `EFFECTIVE_DATE`\n- `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n- `PER_ABSENCE_ENTRY_ID`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `PER_PER_PERSON_NUMBER`\n\n#### Input Values:\n- `iv_start_date`\n- `iv_end_date`\n- `IV_CALEDARSTARTDATE`\n- `IV_CALEDARENDDATE`\n- `IV_TOTALDURATION`\n- `IV_ABSENCE_REASON`\n- `IV_EXPECTEDCHILDBIRTHDATE`\n- `IV_ACTUALCHILDBIRTHDATE`\n\n#### Return Type:\nThe formula returns multiple values including a validation status (`VALID`), an error message (`ERROR_MESSAGE`), and optionally, token names and values (`TOKEN_NAME`, `TOKEN_VALUE`) used for custom error messages.\n\n#### Logic Summary:\n1. **Initialization**: The formula initializes various default values for absence entries, personnel, and dates.\n2. **Validation Checks**: It performs checks on the input start and end dates, ensuring they do not precede a specific cutoff date (September 23, 2019).\n3. **Manager Status Verification**: For non-admin users, it verifies if the manager's assignment status is active and not null.\n4. **Childbirth Date Validation**: If an actual childbirth date is provided, it checks if this date is more than 30 days after the start date of the absence.\n5. **Duration Limitations**: The formula checks if the total duration of the absence exceeds a predefined limit (98 days), returning an error if exceeded.\n6. **Child Information Retrieval**: It checks for existing child contacts of the person and verifies if there are more than 5 children, returning an error in such cases.\n7. **Youngest Child Validation**: If there are children, it identifies the youngest child and checks if the birth date of this child, combined with a 7-month period, conflicts with the effective date, returning an error if so.\n8. **Absence History Check**: The formula reviews the history of absences to prevent repeated maternity leaves within a certain period and to ensure that the total maternity leave duration does not exceed the allowed limit.\n9. **Return Validation and Error Messages**: Based on the validation checks, the formula returns a validation status along with an appropriate error message and, if necessary, additional token values for customization.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates the duration of half-day absences for employees in Thailand based on work schedules and rosters. Determines if an absence is a full day or half day by comparing entered absence hours to total assigned shift hours, with adjustments for shift patterns. Returns the calculated duration.\n\n***Instruction for the fastformula***: **DBI Values Used:** \n- PERSON_ID\n- HR_ASSIGNMENT_ID\n- ABSENCE_TYPE_ID\n- Defaults for various array and date variables such as ANC_PUBLISHED_SHIFT_DETAILS_ARR, ANC_ASSIGNED_SHIFT_DETAILS_ARR, IV_ACCRUALPERIODENDDATE, IV_ACCRUALPERIODSTARTDATE, etc.\n\n**Input Values:** \n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_TERM_ID\n- IV_START_DATE\n- IV_END_DATE\n- IV_START_TIME\n- IV_TOTALDURATION\n- IV_START_DURATION\n- IV_END_DURATION\n- IV_ABS_START_DURATION\n- IV_ABS_END_DURATION\n- IV_END_TIME\n- IV_ABS_START_DATE\n- IV_ABS_END_DATE\n\n**Return Type:** \nThe formula returns a numeric value representing the calculated duration.\n\n**Logic Summary:** \n1. **Initialization**: The formula starts by initializing various variables with default values, including dates, times, and flags. It also retrieves the person ID, assignment ID, and absence type ID from the context.\n2. **Date and Time Calculations**: It performs date and time calculations to determine the start and end dates, considering the input start and end dates and times. This involves converting between date and character formats and adjusting for time entries.\n3. **Shift Details Processing**: The formula checks if published or assigned shift details are available. If available, it processes these details to calculate the total assigned hours. This involves looping through arrays of shift details, parsing the details to extract start and end dates, and calculating the duration of each shift.\n4. **Duration Calculation**: Based on the processed shift details and the calculated total assigned hours, the formula determines the duration. This involves conditional checks to handle different scenarios, such as when the total assigned hours are less than a certain threshold or when the entry duration is less than a specified fraction of the total assigned hours.\n5. **Return Duration**: The calculated duration is then returned as the result of the formula. This duration is determined based on the conditions met during the processing of shift details and the calculations performed. The formula uses various functions like `FLOOR`, `ROUND`, and `TO_DATE` to ensure accurate date and time calculations.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated hospital leave accrual for contractors in Malaysia. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with contractor-specific policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***: **Summary**\n\n* **DBI Values Used**: PER_ASG_REL_DATE_START\n* **Input Values**: \n  - IV_ACCRUAL\n  - IV_ACCRUALPERIODENDDATE\n  - IV_ACCRUALPERIODSTARTDATE\n  - IV_PLANENROLLMENTSTARTDATE\n  - IV_PLANENROLLMENTENDDATE\n  - IV_CALEDARENDDATE\n  - IV_CALEDARSTARTDATE\n  - IV_EVENT_DATES\n  - IV_BAND_CHG_DT1\n  - IV_BAND_CHG_BEFVAL1\n  - IV_BAND_CHG_AFTVAL1\n  - IV_BAND_CHG_DT2\n  - IV_BAND_CHG_AFTVAL2\n  - IV_BAND_CHG_BEFVAL2\n  - IV_BAND_CHG_DT3\n  - IV_BAND_CHG_BEFVAL3\n  - IV_BAND_CHG_AFTVAL3\n  - IV_BAND_CHG_DT4\n  - IV_BAND_CHG_AFTVAL4\n  - IV_BAND_CHG_BEFVAL4\n* **Return Type**: The formula returns a numeric value representing the accrual amount.\n* **Logic Summary**: \n  1. The formula first checks if the plan enrollment start date matches a specific date ('2019/09/23 00:00:00') and if the accrual period start date is before the plan enrollment start date. It also considers the calendar start date in relation to the plan enrollment start date.\n  2. If these conditions are met, and considering the year of the plan enrollment start date matches the year of a derived hire date (set to '1951/01/01 00:00:00' by default), or if the calendar start date is before the plan enrollment start date, then the accrual amount is set to 0.\n  3. If the conditions are not met, the accrual amount is set to the input accrual value.\n  4. The formula logs specific event details including accrual period start and end dates, and calendar dates, using the ESS_LOG_WRITE function.\n  5. Finally, the formula returns the calculated accrual amount.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates maternity leave applications in China. Ensures the duration complies with local regulations, prohibits leave during probation, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: **Summary**\n\n* **DBI Values Used**: PER_ASG_DATE_PROBATION_END, PER_ASG_REL_DATE_START, PER_ASG_GRADE_NAME, GLOBAL_PAY_INTERFACE_EXTRACTION_DATE, IV_ATTRIBUTE_1, PER_ASG_ACTION_CODE, PER_ASG_JOB_NAME, PER_ASG_USER_PERSON_TYPE, ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR, ANC_ABS_ENTRS_DURATION, ANC_ABS_TYP_NAME, ANC_ABS_ENTRS_ABSENCE_STATUS_CD, ANC_ABS_ENTRS_END_DATE, ANC_ABS_ENTRS_START_DATE, ANC_ABS_ENTRS_ABSENCE_TYPE_ID, ANC_ABS_ENTRS_APPROVAL_STATUS_CD, ANC_ABS_ENTRS_USER_MODE, PER_ASG_MANAGER_USER_PERSON_ID, PER_PER_PERSON_NUMBER, PER_ASG_EMPLOYMENT_CATEGORY\n* **Input Values**: iv_start_date, iv_end_date, IV_CALEDARSTARTDATE, IV_CALEDARENDDATE, IV_TOTALDURATION, IV_ABSENCE_REASON, IV_ATTRIBUTE_1\n* **Return Type**: The formula returns a validation result, which includes a boolean value (VALID), an error message (ERROR_MESSAGE), and token names and values (TOKEN_NAME and TOKEN_VALUE).\n* **Logic Summary**: \n  1. The formula starts by initializing various variables with default values and input values.\n  2. It then checks if the leave duration is a multiple of 0.5 days. If not, it returns an error message.\n  3. Next, it checks if the employee's person number is available. If not, it sets the person number to a default value.\n  4. The formula then retrieves the manager's assignment status and checks if the manager is active. If not, it returns an error message.\n  5. It then checks the absence reason and duration. If the reason is \"Normal Delivery\" or \"Cesarean Section Delivery\" and the duration exceeds the maximum allowed days, it returns an error message.\n  6. Finally, the formula returns the validation result, which includes the boolean value, error message, and token names and values. The validation result is used to determine whether the absence can be recorded or not.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates adoption leave applications in Malaysia. Ensures the employee has worked at least 3 months, the leave start date matches the child\u2019s adoption date, prohibits leave during probation for contract employees, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used:**\n- PER_PER_CONTACT_DATE_OF_BIRTH\n- PER_PER_CONTACT_CONTACT_TYPE\n- PER_PER_CONTACT_PERSON_ID\n- PER_PER_CONT_REL_CONTACT_TYPE\n- PER_PER_CONT_REL_CONTACT_PERSON_ID\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_REL_DATE_START\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_EMPLOYMENT_CATEGORY\n\n**Input Values:**\n- iv_start_date (date)\n- iv_end_date (date)\n- IV_CALEDARSTARTDATE (date)\n- IV_CALEDARENDDATE (date)\n- IV_TOTALDURATION (Number)\n- IV_ABSENCE_REASON (Text)\n- IV_ATTRIBUTE_DATE1 (date)\n- IV_EXPECTEDCHILDBIRTHDATE (DATE)\n- IV_ACTUALCHILDBIRTHDATE (DATE)\n\n**Return Type:**\nThe formula returns a validation result, which includes a validation status (VALID) and, in cases of invalidation, an error message and tokens for further details.\n\n**Logic Summary:**\nThis FastFormula is designed to validate an employee's eligibility for adoption leave. Here's a step-by-step breakdown:\n1. **Initialization**: The formula initializes various variables using default values for dates, employee details, and absence reasons.\n2. **Context Setup**: It sets up the context for the HR assignment ID and effective date to retrieve specific employee details, such as the manager's ID and the employee's assignment category.\n3. **Eligibility Checks**: It performs several checks to determine the employee's eligibility for adoption leave:\n   - **Manager Status Check**: It verifies if the manager is active and if the manager ID matches certain criteria.\n   - **Assignment Category Check**: It checks if the employee's assignment category is 'CONTRACT', in which case the employee is not eligible.\n   - **Probation Period Check**: It ensures the employee is not within their probation period.\n   - **Child Age Check**: It calculates the age of the adopted child and checks if the child is over 7 years old, making the employee ineligible.\n   - **Leave Duration Check**: Depending on the child's age, it checks if the requested leave duration exceeds the maximum allowed (60 days for children 2 years or younger, 30 days for children older than 2 years).\n4. **Validation Result**: If any of the checks fail, the formula returns an invalid status along with a specific error message and tokens for further details. If all checks pass, it returns a valid status.\n5. **Return**: The formula concludes by returning the validation status and any relevant error messages or tokens.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates maternity leave applications in Vietnam. Ensures the duration complies with local regulations, prohibits leave during probation, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:**\n* PER_ASG_DATE_PROBATION_END\n* PER_ASG_REL_DATE_START\n* PER_ASG_GRADE_NAME\n* GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n* IV_ATTRIBUTE_1\n* PER_ASG_ACTION_CODE\n* PER_ASG_JOB_NAME\n* PER_ASG_USER_PERSON_TYPE\n* ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n* ANC_ABS_ENTRS_DURATION\n* ANC_ABS_TYP_NAME\n* ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n* ANC_ABS_ENTRS_END_DATE\n* ANC_ABS_ENTRS_START_DATE\n* ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n* ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n* ANC_ABS_ENTRS_USER_MODE\n* PER_ASG_MANAGER_USER_PERSON_ID\n* PER_PER_PERSON_NUMBER\n* PER_ASG_EMPLOYMENT_CATEGORY\n\n**Input Values:**\n* iv_start_date\n* iv_end_date\n* IV_CALEDARSTARTDATE\n* IV_CALEDARENDDATE\n* IV_TOTALDURATION\n* IV_ABSENCE_REASON\n* IV_ATTRIBUTE_1\n\n**Return Type:**\nThe formula returns multiple values, including:\n* VALID (a flag indicating whether the absence is valid or not)\n* ERROR_MESSAGE (a message describing the error, if any)\n* TOKEN_NAME and TOKEN_VALUE (tokenized error messages)\n\n**Logic Summary:**\nThe formula performs the following steps:\n1. It initializes various variables and retrieves contextual information, such as HR assignment ID, person ID, and legislative data group ID.\n2. It checks the user mode and person number to determine if the absence can be recorded.\n3. It validates the manager's assignment status and returns an error if it is inactive.\n4. It checks the absence reason and duration to determine if it exceeds the maximum entitlement allowed for a specific type of delivery (e.g., singleton, twins, triplets, etc.).\n5. If the absence reason is \"UNPAID\", it loops through existing absence entries to calculate the total duration of previous absences.\n6. Based on the validation results, it sets the VALID flag, ERROR_MESSAGE, and tokenized error messages accordingly.\n7. Finally, it returns the validation results, including the VALID flag, error message, and tokenized error messages.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates day-off applications for Niaga employees. Ensures the duration is valid, complies with local policies, checks the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:   #### DBI Values Used:\nThe formula references several database items (DBIs) including but not limited to:\n- `HR_ASSIGNMENT_ID`\n- `LEGISLATIVE_DATA_GROUP_ID`\n- `PERSON_ID`\n- `ABSENCE_TYPE_ID`\n- `ABSENCE_ENTRY_ID`\n- Various absence entry and assignment details through contextual changes.\n\n#### Input Values:\nThe formula takes the following input values:\n- `IV_END_DATE` (date)\n- `IV_START_DATE` (date)\n- `IV_ATTRIBUTE_1` (text)\n- `IV_TOTALDURATION` (number)\n- `IV_ABSENCE_REASON` (text)\n\n#### Return Type:\nThe formula returns a status (`VALID`) which is a text value indicating whether the validation is successful or not, along with an error message if validation fails.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by defining default values for various DBIs and input parameters, setting up initial conditions and context values necessary for the validation process.\n2. **Context Setup**: It retrieves the current assignment ID, legislative data group ID, person ID, and absence type ID to establish context for subsequent checks.\n3. **Date Calculations**: The formula calculates start and end dates based on input dates and performs necessary date conversions.\n4. **Validation Loop**: It iterates through an array of absence entry IDs, updating the context for each entry to check the absence status and approval status. If an entry is not withdrawn or denied and does not match a specific entry ID, its duration is added to a total absence duration.\n5. **Specific Entry Handling**: If an entry matches a specific ID, its duration is counted separately.\n6. **Department Check**: After looping through all entries, the formula checks if the total absence duration exceeds 12 days and if the department name matches certain criteria. If both conditions are met, it returns an error.\n7. **Return**: Finally, the formula returns a validation status and an error message if applicable, based on the conditions evaluated throughout the process.\n\nThis summary outlines the key steps and logic involved in the FastFormula, from initialization and setup through iterative checks and final validation, highlighting its purpose of validating absence entries under specific conditions.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates the duration of absence types for employees in Hong Kong based on work schedules and rosters. Determines the duration by comparing entered absence hours to total assigned shift hours, with adjustments for shift patterns. Returns the calculated duration.\n\n***Instruction for the fastformula***: Here is a summary of the provided FastFormula:\n\n* **DBI Values Used**: \n  - `PERSON_ID`\n  - `CIMB_GET_PH_HK` (value set)\n* **Input Values**: \n  - `IV_START_DATE` (date)\n  - `IV_END_DATE` (date)\n  - `IV_START_TIME` (text)\n  - `IV_END_TIME` (text)\n  - `IV_START_DURATION` (number)\n  - `IV_END_DURATION` (number)\n* **Return Type**: The formula returns a numeric value representing a duration.\n* **Logic Summary**: \n  1. The formula starts by setting default values for start and end dates, times, and durations if they are not provided.\n  2. It retrieves the person ID from the context and converts it to a character string.\n  3. The formula then calculates the start and end dates by combining the provided dates with the start and end times.\n  4. If an end date is provided, it calculates the duration between the start and end dates; otherwise, it uses the start date as the end date.\n  5. The formula then iterates through each day between the start and end dates, checking for specific conditions using a value set (`CIMB_GET_PH_HK`) for each day.\n  6. For each day that meets the condition, it increments the unrounded duration by 1 day.\n  7. Finally, the formula adjusts the duration based on the start and end durations (if they are half days) and returns the calculated duration.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated absence accrual for employees in Hong Kong based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with local policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: \n  - PER_ASG_PERSON_NUMBER\n  - ANC_ABS_TYP_NAME\n  - ANC_ABS_PLN_NAME\n  - PER_ASG_REL_DATE_START\n  - ANC_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - ANC_ABS_ENTRS_DURATION\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  - ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  - ANC_ABS_ENTRS_START_DATE\n  - ANC_ABS_ENTRS_END_DATE\n  - PER_ASG_REL_ACTUAL_TERMINATION_DATE\n  - PER_PERSON_ENTERPRISE_HIRE_DATE\n  - PER_ASG_GRADE_NAME\n  - PER_ASG_ACTION_CODE\n  - PER_ASG_FTE_VALUE\n  - PER_HIST_ASG_EFFECTIVE_START_DATE\n\n* **Input Values**: \n  - IV_ACCRUAL\n  - IV_ACCRUALPERIODENDDATE\n  - IV_ACCRUALPERIODSTARTDATE\n  - IV_PLANENROLLMENTSTARTDATE\n  - IV_PLANENROLLMENTENDDATE\n  - IV_CALEDARENDDATE\n  - IV_CALEDARSTARTDATE\n  - IV_EVENT_DATES\n  - IV_BAND_CHG_DT1\n  - IV_BAND_CHG_BEFVAL1\n  - IV_BAND_CHG_AFTVAL1\n  - IV_BAND_CHG_DT2\n  - IV_BAND_CHG_BEFVAL2\n  - IV_BAND_CHG_AFTVAL2\n  - IV_BAND_CHG_DT3\n  - IV_BAND_CHG_BEFVAL3\n  - IV_BAND_CHG_AFTVAL3\n  - IV_BAND_CHG_DT4\n  - IV_BAND_CHG_BEFVAL4\n  - IV_BAND_CHG_AFTVAL4\n\n* **Return Type**: The formula returns a number, which represents the calculated accrual value.\n\n* **Logic Summary**: \n  1. The formula first checks if the current date is the same as a specific date and if the accrual period start date is before the plan enrollment start date. If true, it returns an accrual value of 0.\n  2. It then determines the number of band changes within the accrual period and calculates the accrual rates before and after each band change.\n  3. The formula iterates through each absence entry for the person and calculates the absence duration within the accrual period. It checks if the absence is before or after the band change date and updates the accrued period values accordingly.\n  4. The formula then calculates the total accrued period by considering the full-time equivalent (FTE) values and the number of days in the accrual period.\n  5. Finally, the formula returns the calculated accrual value, which is the total accrued period multiplied by the accrual rate, minus any non-accrual absence days.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates annual leave applications in Hong Kong. Ensures the duration aligns with grade-based entitlements, prohibits overlap between calendar years, checks sufficient balance, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Based on the provided FastFormula, here is a structured summary:\n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_POSITION_NAME\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_ATTRIBUTE7\n- PER_ASG_BARGAINING_UNIT_CODE_NAME\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n**Return Type:**\nThe formula returns a set of values including a validation flag (VALID), an error message (ERROR_MESSAGE), and various tokens (TOKEN_NAME and TOKEN_VALUE) to provide feedback on the absence request.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by setting default values for various database items and initializing variables.\n2. **Validation of Input Duration**: It checks if the input duration (IV_TOTALDURATION) is a multiple of 0.5; if not, it returns an error.\n3. **Determining Employment Status and Manager**: It retrieves the employee's HR assignment ID, legislative data group ID, person ID, and manager ID to determine their employment status and manager's status.\n4. **Annual Leave Calculation**: Based on the employee's category (permanent or contract), it calculates their annual leave balance and checks if the leave duration exceeds the earned days.\n5. **Probation Check**: If the employee is on probation, it checks if the leave start date is within the probation period and returns an error if the leave duration exceeds the earned days during probation.\n6. **Overlap Check**: It checks if the leave period overlaps with the annual leave year and returns an error if it does for non-contract employees.\n7. **Compulsory Leave Check**: For compulsory leaves, it checks if the duration is less than the minimum required and returns an error if it is.\n8. **Final Validation**: After all checks, it returns a validation flag indicating whether the absence request is valid or not, along with an error message if it's not valid.\n\nThis summary should allow someone to understand the logic and potentially recreate the FastFormula based on the steps and variables involved.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates volunteer leave applications in Singapore. Ensures the duration complies with local policies, prohibits overlap between calendar years, checks the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the provided FastFormula:\n\n**DBI Values Used:** \n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_RSN_NAME\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- IV_START_DATE\n- IV_END_DATE\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- ANC_ABS_ENTRS_ABSENCE_REASON_ID\n- IV_ABSENCE_REASON\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_GRADE_NAME\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n- PER_PER_PERSON_NUMBER\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PERSON_ID\n- LEGISLATIVE_DATA_GROUP_ID\n- ABSENCE_ENTRY_ID\n- EFFECTIVE_DATE\n- HR_ASSIGNMENT_ID\n\n**Input Values:** \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type:** \nThe formula returns a validation result, which includes a valid flag (VALID), an error message (ERROR_MESSAGE), and token values (TOKEN_NAME and TOKEN_VALUE). It essentially returns whether the input is valid or not and provides additional information in case of an error.\n\n**Logic Summary:** \nThis FastFormula checks the validity of an absence request based on various rules. The process can be broken down into the following steps:\n1. **Initialization**: The formula starts by initializing various default values and obtaining required context values such as person ID, legislative data group ID, absence entry ID, and effective date.\n2. **Year Validation**: It checks if the start and end dates of the absence request span across two different calendar years. If they do, it returns an error message instructing the user to apply for leave separately for each calendar year.\n3. **User Mode and Manager Validation**: The formula checks the user mode (whether the request is being made by the employee or an administrator) and the manager's assignment status. It also verifies if the person making the request is the manager or the employee themselves.\n4. **Leave Duration Validation**: For non-admin users, it checks if the requested leave duration exceeds the entitlement. If it does, it returns an error.\n5. **Volunteer Leave Validation**: The formula then checks for any existing volunteer leave entries within the same calendar year that have not been withdrawn, denied, or saved. It calculates the total days of volunteer leave already taken and checks if adding the new request would exceed the entitlement.\n6. **Overlap Validation**: Finally, it checks for any overlap between the requested leave period and the calendar year boundaries for employees who are not on contract, ensuring that leave cannot be applied across year boundaries for such employees.\n7. **Return Validation Result**: Based on these checks, the formula returns a validation result indicating whether the absence request is valid or not, along with any relevant error messages or token values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Duplicate entry (assumed to be the same as above, possibly a versioning or typo). Validates volunteer leave applications in Singapore. Ensures the duration complies with local policies, prohibits overlap between calendar years, checks the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the provided FastFormula:\n\n**DBI Values Used:** \n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR \n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD \n- ANC_PER_ABS_ENTRS_ABSENCE_TYPE_ID \n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID \n- ANC_ABS_TYP_NAME \n- ANC_ABS_RSN_NAME \n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD \n- ANC_ABS_ENTRS_END_DATE \n- ANC_ABS_ENTRS_START_DATE \n- IV_START_DATE \n- IV_END_DATE \n- IV_CALEDARSTARTDATE \n- IV_CALEDARENDDATE \n- IV_TOTALDURATION \n- IV_ABSENCE_REASON \n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE \n- PER_ASG_USER_PERSON_TYPE \n- PER_ASG_GRADE_NAME \n- PER_ASG_EMPLOYMENT_CATEGORY \n- ANC_ABS_ENTRS_USER_MODE \n- PER_PER_PERSON_NUMBER \n- PER_ASG_MANAGER_USER_PERSON_ID \n- ANC_ABS_ENTRS_DURATION \n\n**Input Values:** \n- iv_start_date \n- iv_end_date \n- IV_CALEDARSTARTDATE \n- IV_CALEDARENDDATE \n- IV_TOTALDURATION \n- IV_ABSENCE_REASON \n\n**Return Type:** \nThe formula returns a validation result, which includes a status (VALID), an error message (ERROR_MESSAGE), and token values (TOKEN_NAME and TOKEN_VALUE).\n\n**Logic Summary:** \nThe formula starts by initializing various variables and default values. It checks if the leave application is for a single calendar year. If not, it returns an error. It then retrieves the person's assignment details, including their manager and employment category. \nIf the user is applying for leave on behalf of someone else and is not an admin, it checks if the leave duration exceeds the entitlement. \nIt then iterates through existing absence entries for the person to check for any overlapping leaves or if the volunteer leave entitlement has been exceeded. \nIf the leave application spans across two calendar years and the person is not a contract employee, it returns an error. \nFinally, the formula returns a validation result based on these checks.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates the duration of absence types for employees in Vietnam based on work schedules and rosters. Determines the duration by comparing entered absence hours to total assigned shift hours, with adjustments for shift patterns. Returns the calculated duration.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: None explicitly referenced, but the formula utilizes the `GET_PAY_AVAILABILITY` function which may indirectly use database items.\n* **Input Values**: \n  + `IV_START_DATE` (date)\n  + `IV_END_DATE` (date)\n  + `IV_START_TIME` (text)\n  + `IV_END_TIME` (text)\n  + `PER_ASG_FTE_VALUE` (number with a default value of 1)\n* **Return Type**: The formula returns a numeric value representing a duration in days.\n* **Logic Summary**: \n  1. The formula starts by setting default values for the start and end dates, times, and a percentage value if they are not provided.\n  2. It then constructs a start and end date by combining the provided date and time values into a single date and time format.\n  3. Using these constructed dates, it calculates the duration of a pay availability period by calling the `GET_PAY_AVAILABILITY` function.\n  4. This duration is then adjusted by multiplying it with a provided percentage value (representing an assignment's Full-Time Equivalent value).\n  5. The adjusted duration is then evaluated to determine if it has any fractional part. If the fractional part is not zero or half, it rounds the duration to the nearest half day.\n  6. Finally, the formula returns this calculated and possibly rounded duration as the result.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated annual leave accrual for GEXCO employees in Malaysia. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with GEXCO-specific policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***: **Summary**\n\n* **DBI Values Used**: None explicitly mentioned, but defaults provided for `IV_CALEDARSTARTDATE`, `IV_CALEDARENDDATE`, `IV_EVENT_DATES`, `IV_ACCRUAL_VALUES`, and `PER_ASG_FTE_VALUE`.\n* **Input Values**: `IV_ACCRUAL`, `IV_EVENT_DATES`, `IV_ACCRUAL_VALUES`, `IV_CALEDARSTARTDATE`, `IV_CALEDARENDDATE`, `IV_PLANENROLLMENTSTARTDATE`, and `IV_PLANENROLLMENTENDDATE`.\n* **Return Type**: The formula returns two numeric values: `accrual` and `carryover`.\n* **Logic Summary**: \n  1. The formula first checks if the calendar start date is before the plan enrollment start date. If so, it adjusts the accrual amount proportionally based on the number of days between the plan enrollment start date and the calendar end date.\n  2. It then checks if the calendar end date is after the plan enrollment end date. If so, it adjusts the accrual amount proportionally based on the number of days between the plan enrollment end date and the calendar start date.\n  3. The formula calculates the floored accrual (basic accrual without decimal part), the decimal part of the accrual, and based on the decimal part, determines the final accrual.\n  4. If the decimal part is 0 or less than 0.5, the final accrual remains the floored accrual; if the decimal part is greater than 0.5, the final accrual is the floored accrual plus 1.\n  5. The final accrual is then adjusted by multiplying it with the `PER_ASG_FTE_VALUE`.\n  6. The formula returns the adjusted accrual and the carryover value, which remains constant at 7 throughout the formula's execution.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates severe illness leave applications in Vietnam. Ensures the duration complies with local regulations, prohibits leave during probation, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: ### Summary of the Provided Oracle FastFormula\n\n#### DBI Values Used:\n- `PER_ASG_DATE_PROBATION_END`\n- `PER_ASG_REL_DATE_START`\n- `PER_ASG_GRADE_NAME`\n- `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n- `IV_ATTRIBUTE_1`\n- `PER_ASG_ACTION_CODE`\n- `PER_ASG_JOB_NAME`\n- `PER_ASG_USER_PERSON_TYPE`\n- `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_ABS_ENTRS_DURATION`\n- `ANC_ABS_TYP_NAME`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_ENTRS_END_DATE`\n- `ANC_ABS_ENTRS_START_DATE`\n- `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n- `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n- `ANC_ABS_ENTRS_USER_MODE`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `PER_PER_PERSON_NUMBER`\n- `PER_ASG_EMPLOYMENT_CATEGORY`\n\n#### Input Values:\n- `iv_start_date`\n- `iv_end_date`\n- `IV_CALEDARSTARTDATE`\n- `IV_CALEDARENDDATE`\n- `IV_TOTALDURATION`\n- `IV_ABSENCE_REASON`\n- `IV_ATTRIBUTE_1`\n\n#### Return Type:\nThe formula returns a validation result, indicated by the `VALID` variable, along with an error message if validation fails. The return type is essentially a boolean (Y/N) validity indicator plus an error message, suggesting the formula is designed to validate certain conditions related to employee absences.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by setting default values for various database items (DBIs) and input parameters if they are not provided. This includes dates, names, numbers, and status codes related to employee assignments, absences, and pay details.\n2. **Input Validation**: It checks if the duration of an absence (leave) is in increments of 0.5 days. If not, it returns an error message indicating that the leave duration is incorrect.\n3. **Person Number Verification**: It checks if a specific person number (`l_fnd_person_number`) exists. If it does not, it sets the person number to a default value.\n4. **Manager Status Check**: It retrieves the manager's assignment status and checks if the manager is active. If the manager is not active or does not exist, it returns an error message.\n5. **Absence Balance Check**: It checks the employee's annual accrual balance for a specific leave plan (Sick Leave Full Paid Plan). If the balance is greater than 0, it prevents the recording of the absence, suggesting the employee should use the available sick leave instead.\n6. **Date Overlap Check**: It verifies if the absence dates overlap with the current year's start and end dates. If there's an overlap or the absence extends beyond the year-end, it returns an error message to prevent invalid absences.\n7. **Final Validation**: If all checks pass, the formula returns a validation result indicating success or failure (`VALID = 'Y'` or `VALID = 'N'`) along with an appropriate error message if validation fails.\n\nThis logic ensures that employee absences are correctly validated against various rules, including duration, manager approval, leave balances, and date overlaps, before they can be recorded in the system.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates the expiry of brought forward leave (BFL) applications in the UK. Ensures the balance is within expiry limits (e.g., 3 years), checks the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n  - PER_ASG_DATE_PROBATION_END\n  - PER_ASG_REL_DATE_START\n  - IV_EXPECTEDCHILDBIRTHDATE\n  - IV_ACTUALCHILDBIRTHDATE\n  - GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n  - PER_PER_CONT_REL_CONTACT_TYPE\n  - PER_PER_CONT_REL_CONTACT_PERSON_ID\n  - ANC_ABS_ENTRS_USER_MODE\n  - PER_ASG_MANAGER_USER_PERSON_ID\n  - PER_PER_PERSON_NUMBER\n\n* **Input Values**: \n  - IV_START_DATE\n  - IV_END_DATE\n  - IV_CALEDARSTARTDATE\n  - IV_CALEDARENDDATE\n  - IV_TOTALDURATION\n  - IV_ABSENCE_REASON\n  - IV_EXPECTEDCHILDBIRTHDATE\n  - IV_ACTUALCHILDBIRTHDATE\n\n* **Return Type**: \n  The formula returns multiple values including a validity flag (VALID), an error message (ERROR_MESSAGE), and token values (TOKEN_NAME and TOKEN_VALUE).\n\n* **Logic Summary**: \n  The formula starts by initializing various default values and input parameters. It then calculates specific dates such as the start and end of the year based on the input start date. It checks for the absence entry ID and retrieves the effective date, HR assignment ID, and person ID from the context. \n  - It checks if the input start date is within a specific period (after 2024-01-01) and verifies if it is before or after an expiry date (May 1st of the input start date's year).\n  - If the input start or end date exceeds the expiry date, it returns an error indicating that the \"Brought Forward Leave Plan\" has expired and provides guidance on the next steps.\n  - The formula also checks the user mode and person number to determine whether it's an admin user or if the person number matches a specific value, influencing the validation process.\n  - Throughout the process, it populates error messages and token values as necessary and returns these along with a validity flag to indicate the outcome of the validation. \n  - The logic is structured to handle different scenarios related to absence leave planning, ensuring compliance with specific rules regarding leave expiration and user permissions.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates paternity leave applications in Vietnam. Ensures the employee has worked at least 3 months, the leave start date is within a specified period after the child\u2019s birth, prohibits leave during probation, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the FastFormula:\n\n**DBI Values Used:**\n* PER_ASG_DATE_PROBATION_END\n* PER_ASG_REL_DATE_START\n* PER_ASG_GRADE_NAME\n* GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n* IV_ATTRIBUTE_1\n* PER_ASG_ACTION_CODE\n* PER_ASG_JOB_NAME\n* PER_ASG_USER_PERSON_TYPE\n* ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n* ANC_ABS_ENTRS_DURATION\n* ANC_ABS_TYP_NAME\n* ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n* ANC_ABS_ENTRS_END_DATE\n* ANC_ABS_ENTRS_START_DATE\n* ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n* ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n* ANC_ABS_ENTRS_USER_MODE\n* PER_ASG_MANAGER_USER_PERSON_ID\n* PER_PER_PERSON_NUMBER\n* PER_ASG_EMPLOYMENT_CATEGORY\n\n**Input Values:**\n* iv_start_date\n* iv_end_date\n* IV_CALEDARSTARTDATE\n* IV_CALEDARENDDATE\n* IV_TOTALDURATION\n* IV_ABSENCE_REASON\n* IV_ATTRIBUTE_1\n* IV_ACTUALCHILDBIRTHDATE\n\n**Return Type:**\nThe formula returns a validity flag (VALID) along with an error message and token values if the input values do not meet certain conditions.\n\n**Logic Summary:**\nThe formula performs the following steps:\n1. Initializes various variables with default values and input values.\n2. Checks if the leave duration is in increments of 0.5 days, and returns an error if not.\n3. Retrieves the person number and manager ID based on the current assignment and effective date.\n4. Checks the manager's assignment status and returns an error if it is not active.\n5. Validates the absence reason and duration against predefined rules, returning an error if the duration exceeds the maximum entitlement for a specific reason.\n6. Checks for various absence reasons (e.g. normal labor and delivery, premature birth, surgical cesarean section) and returns an error if the duration exceeds the maximum allowed for that reason.\n7. Returns the validity flag, error message, and token values if any errors occur during the validation process.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates personal leave applications in Vietnam. Ensures the duration complies with local policies, prohibits overlap between calendar years, checks the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_USER_PERSON_TYPE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_EMPLOYMENT_CATEGORY\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n- IV_ACTUALCHILDBIRTHDATE\n\n**Return Type:**\nThe formula returns several parameters including a validity flag (VALID), an error message (ERROR_MESSAGE), and token names and values (TOKEN_NAME, TOKEN_VALUE) which indicate the outcome of the validation process, specifically whether the input values meet the criteria defined within the formula and any relevant error messages or tokens associated with those outcomes.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by initializing various default values and input parameters that are used throughout the logic.\n2. **Duration Validation**: It checks if the total duration of absence (IV_TOTALDURATION) is in increments of 0.5 days, returning an error if it's not.\n3. **Person Number Validation**: It retrieves the found person number and checks if it's null, adjusting the logic flow accordingly.\n4. **Context Setup**: The formula sets up necessary contexts such as HR assignment ID, effective date, and absence entry ID to access and manipulate relevant data.\n5. **Manager Status Check**: It checks the status of the manager associated with the absence entry, ensuring the manager is active and has a valid assignment.\n6. **Absence Reason Validation**: Based on the absence reason, the formula checks if the duration exceeds the maximum allowed entitlement. For specific reasons like marriage, child birth, or death of an immediate family member, it validates the duration against predefined limits.\n7. **Error Handling and Return**: If any validation fails, it sets the validity flag to 'N', assigns an appropriate error message, and returns these values. If all validations pass, it implies a successful validation process without specifying a 'VALID' return explicitly in this summary.\n\nThis summary outlines the key steps and logic flows within the provided FastFormula, emphasizing input validation, contextual setup, and conditional checks based on specific business rules related to absence reasons and durations.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Determines the enrollment end date for sick leave plans for employees in Malaysia. Uses the employee\u2019s actual termination date if available, otherwise defaults to the context end date or a specific policy date. Returns the calculated enrollment end date.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: PER_ASG_USER_PERSON_TYPE, PER_ASG_REL_ACTUAL_TERMINATION_DATE, PER_ASG_EMPLOYMENT_CATEGORY, PERSON_ID, EFFECTIVE_DATE, END_DATE, GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n* **Input Values**: None (all values are derived from DBI or formula calculations)\n* **Return Type**: Date (specifically, the enrollment end date)\n* **Logic Summary**: \n  1. First, the formula retrieves necessary database item values and sets default values where required.\n  2. It then checks if an actual termination date has been provided; if so, it uses this date for calculations.\n  3. The formula calculates the start date of the year based on the person's ID, assignment category, and effective date by calling a value set (CIMB_GET_MY_ENROL_START_DATE).\n  4. It ensures this start date does not exceed the end date specified.\n  5. The formula then calculates the enrollment end date by taking the day before the start date of the next year or the termination date, whichever is earlier.\n  6. Finally, it returns this calculated enrollment end date.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated annual leave accrual for employees in Vietnam based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with local policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: \n  - `PER_ASG_PERSON_NUMBER`\n  - `ANC_ABS_TYP_NAME`\n  - `ANC_ABS_PLN_NAME`\n  - `PER_ASG_REL_DATE_START`\n  - `PER_ASG_REL_ACTUAL_TERMINATION_DATE`\n  - `PER_PERSON_ENTERPRISE_HIRE_DATE`\n  - `PER_ASG_GRADE_NAME`\n  - `PER_ASG_ACTION_CODE`\n  - `PER_ASG_JOB_NAME`\n  - `PER_ASG_FTE_VALUE`\n  - `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n  - `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n  - `ANC_ABS_ENTRS_DURATION`\n  - `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n  - `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n  - `ANC_ABS_ENTRS_START_DATE`\n  - `ANC_ABS_ENTRS_END_DATE`\n  - `PER_HIST_ASG_EFFECTIVE_START_DATE`\n\n* **Input Values**:\n  - `IV_ACCRUAL`\n  - `IV_ACCRUALPERIODENDDATE`\n  - `IV_ACCRUALPERIODSTARTDATE`\n  - `IV_PLANENROLLMENTSTARTDATE`\n  - `IV_PLANENROLLMENTENDDATE`\n  - `IV_CALEDARENDDATE`\n  - `IV_CALEDARSTARTDATE`\n  - `IV_EVENT_DATES`\n  - `IV_BAND_CHG_DT1`\n  - `IV_BAND_CHG_BEFVAL1`\n  - `IV_BAND_CHG_AFTVAL1`\n  - `IV_BAND_CHG_DT2`\n  - `IV_BAND_CHG_BEFVAL2`\n  - `IV_BAND_CHG_AFTVAL2`\n  - `IV_BAND_CHG_DT3`\n  - `IV_BAND_CHG_BEFVAL3`\n  - `IV_BAND_CHG_AFTVAL3`\n  - `IV_BAND_CHG_DT4`\n  - `IV_BAND_CHG_BEFVAL4`\n  - `IV_BAND_CHG_AFTVAL4`\n\n* **Return Type**: The formula returns an accrual value, likely of numeric type, along with adjustment values, adjustment dates, and adjustment types.\n\n* **Logic Summary**: \n  The formula calculates an employee's accrual based on their job assignment and absence entries. \n  1. It first checks if the plan enrollment start date matches a specific date and if the accrual period start date is before the plan enrollment start date. If both conditions are true, it sets the accrual to 0 and returns.\n  2. It then initializes various variables, including those related to band changes, FTE (Full-Time Equivalent) values, and absence types.\n  3. It iterates through absence entries to calculate the total approved absence days before and after band changes.\n  4. It applies rules to calculate the accrual periods based on the band change dates and absence entries.\n  5. It calculates the total number of working days before and after band changes by considering FTE values and absence days.\n  6. Finally, it calculates the accrual by applying the accrual rate to the total working days, considering the absence days and band changes. The formula returns the calculated accrual along with adjustment values, dates, and types.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates prenatal leave applications in Vietnam. Ensures the duration complies with local regulations, prohibits leave during probation, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_USER_PERSON_TYPE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_EMPLOYMENT_CATEGORY\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n- IV_ACTUALCHILDBIRTHDATE\n\n**Return Type:**\nThe formula returns a validation result indicating whether the provided input values are valid or not, along with an error message if the validation fails.\n\n**Logic Summary:**\n1. The formula starts by initializing various default values for dates, codes, and IDs. It sets up the context for the formula execution by retrieving the current effective date and HR assignment details.\n2. It checks if the provided leave duration is in increments of 0.5 days and returns an error if it is not.\n3. The formula then checks for the existence of a specific person number and handles cases where it is missing.\n4. It proceeds to validate the manager's assignment status, ensuring it is active, and checks for the user's mode (admin or not).\n5. Based on the absence reason and user mode, it applies specific rules to determine if the absence can be recorded. For instance, it checks the duration of the absence against maximum entitlements for different types of conditions (e.g., \"NORMAL CONDITION\", \"SPECIAL CONDITION\").\n6. If any of the validation checks fail, the formula returns an error message with a specific token value describing the reason for the failure.\n7. The final step is to return the validation result, which includes a validity flag and an error message if any checks failed during the execution of the formula.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates unpaid leave applications in Vietnam. Ensures the duration complies with local policies, requires other leave balances (e.g., annual, sick) to be exhausted, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_USER_PERSON_TYPE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_EMPLOYMENT_CATEGORY\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n**Return Type:**\nThe formula returns multiple values including a validation flag (VALID), an error message (ERROR_MESSAGE), and potentially tokens for messages (TOKEN_NAME and TOKEN_VALUE). The primary return type is a boolean indicating validation success or failure, accompanied by descriptive error messages when applicable.\n\n**Logic Summary:**\n1. The formula starts by initializing various variables with default values from database items (DBIs) or input values.\n2. It checks if the total duration of an absence request is a multiple of 0.5 days. If not, it returns an error indicating that the leave duration is incorrect.\n3. It verifies if a specific person number (l_fnd_person_number) exists. If it does, it proceeds with further checks; otherwise, it assigns a default value.\n4. The formula changes contexts to retrieve a manager's assignment ID and checks the manager's status. If the manager's status is not active or if the manager ID is 0, it returns an error.\n5. It checks the balance of an employee's annual leave plan. If the balance is 0.5 days or more, it prevents the recording of the absence, suggesting the use of annual leave instead.\n6. The formula checks for overlap of the absence period with the start and end of the year. If there's an overlap, it returns an error indicating that the absence overlaps with the year boundaries.\n7. Throughout these checks, the formula returns validation results and error messages as necessary, ensuring that all conditions for a valid absence request are met before proceeding.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates unpaid maternity leave applications in Vietnam. Ensures the duration complies with local regulations, requires full-pay maternity leave to be exhausted, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used**: \n- ANC_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- PER_ASG_REL_DATE_START\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_EMPLOYMENT_CATEGORY\n- PER_ASG_BARGAINING_UNIT_CODE_NAME\n- PER_ASG_GRADE_NAME\n- PER_ASG_ATTRIBUTE7\n- PER_PER_PERSON_NUMBER\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n\n**Input Values**: \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n- IV_ATTRIBUTE_2\n\n**Return Type**: \nThe formula returns a validation result, which includes a VALID flag (indicating whether the input is valid or not), an ERROR_MESSAGE (if the input is invalid), and TOKEN_NAME and TOKEN_VALUE (for error messages).\n\n**Logic Summary**: \n1. The formula first checks if the leave duration is in increments of 0.5 days. If not, it returns an error message.\n2. It then retrieves various context values, including the effective date, absence entry ID, legislative data group ID, and HR assignment ID.\n3. The formula checks if the user mode is 'ADMIN' or if the person number matches the FND person number. If not, it checks the manager's assignment status.\n4. If the manager's assignment status is not 'ACTIVE' or if the manager ID is 0, it returns an error message.\n5. The formula then loops through an array of absence entry IDs and checks for specific conditions related to maternity leave.\n6. If any of these conditions are not met, it returns an error message.\n7. If all checks pass, the formula returns a valid result. \n\nNote that this summary provides a high-level overview of the formula's logic, without including code details.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates unpaid injury compensation leave (UICL) applications in Singapore. Ensures the duration complies with local policies, prohibits overlap between calendar years, checks the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: ### FastFormula Summary\n\n#### DBI Values Used:\n- `PER_PER_CONTACT_DATE_OF_BIRTH`\n- `PER_PER_CONTACT_CONTACT_TYPE`\n- `PER_PER_CONTACT_PERSON_ID`\n- `PER_EXT_PERSON_CITIZENSHIP_NATIONALITY`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `PER_PER_PERSON_NUMBER`\n- `PER_ASG_REL_DATE_START`\n- `PER_PER_CONT_REL_CONTACT_TYPE`\n- `PER_PER_CONT_REL_CONTACT_PERSON_ID`\n- `ANC_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n- `ANC_ABS_ENTRS_DURATION`\n- `ANC_ABS_TYP_NAME`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n- `ANC_ABS_ENTRS_END_DATE`\n- `ANC_ABS_ENTRS_START_DATE`\n- `ANC_ABS_ENTRS_USER_MODE`\n\n#### Input Values:\n- `iv_start_date`\n- `iv_end_date`\n- `IV_CALEDARSTARTDATE`\n- `IV_CALEDARENDDATE`\n- `IV_TOTALDURATION`\n- `IV_ABSENCE_REASON`\n\n#### Return Type:\nThe formula returns validation results, including a `VALID` flag indicating whether the input is valid, an `ERROR_MESSAGE` describing any errors encountered, and optional `TOKEN_NAME` and `TOKEN_VALUE` pairs for additional error details.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by setting default values for various database items (DBIs) and input values. It also declares and initializes several local variables to track different aspects of the validation process, such as contact person IDs, citizenship, dates of birth, and absence entry details.\n\n2. **Context Setting**: It sets contexts for HR assignment IDs, effective dates, and absence entry IDs to correctly retrieve and manipulate relevant data.\n\n3. **Manager and Person Validation**: The formula checks if the user mode is not 'ADMIN' and if the person number matches the found person number or if the manager ID matches the person ID. It then verifies if the assignment start date is within three months of the start date and checks the manager's assignment status, ensuring it is active.\n\n4. **Child Contact Retrieval**: It iterates through contact persons related to the employee, focusing on child contacts. For each child, it retrieves the date of birth and citizenship, storing this information in arrays.\n\n5. **Eligibility Check**: The formula determines if there is at least one child and identifies the youngest child based on the date of birth. It checks if the youngest child's citizenship is 'Singapore' and if the age of the child is less than 24 months, as these are eligibility criteria for unpaid infant child leave.\n\n6. **Leave Balance Check**: The formula calculates the total duration of previous leaves taken by iterating through absence entry IDs for the year and checks if adding the current leave request exceeds the eligible leave days.\n\n7. **Validation and Error Handling**: Based on the checks, the formula sets the `VALID` flag to 'N' if any condition is not met, along with an appropriate error message and token values if necessary. If all conditions are met, the `VALID` flag remains 'Y', indicating that the leave request is valid.\n\n8. **Return**: The formula returns the validation result, including the `VALID` flag, `ERROR_MESSAGE`, and any `TOKEN_NAME` and `TOKEN_VALUE` pairs, to inform the user about the status of their leave request.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates unpaid training/union (TU) leave applications in Malaysia. Ensures the duration complies with local policies, requires other leave balances (e.g., annual, sick) to be exhausted, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:   \n\n### DBI Values Used\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_USER_PERSON_TYPE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_EMPLOYMENT_CATEGORY\n\n### Input Values\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n### Return Type\nThe formula returns a validation result, including a boolean value indicating validity (VALID), an error message (ERROR_MESSAGE), and token values (TOKEN_NAME, TOKEN_VALUE) for specific error conditions.\n\n### Logic Summary\n1. **Initialization**: The formula starts by setting default values for various database items (DBIs) and input parameters. It initializes several variables with these defaults, including dates, names, and IDs related to employee assignments, absence entries, and pay interface extractions.\n2. **Validation of Leave Duration**: The formula checks if the leave duration is a multiple of 0.5 days. If not, it returns an error indicating that the leave duration is incorrect, suggesting that the start and end times should align with working hours.\n3. **Employee and Manager Validation**: If the person number associated with the formula's context is not null, it proceeds to validate the employee and manager assignments. This includes checking the employment category, the manager's assignment status, and ensuring the manager is correctly associated with the employee.\n4. **Date and Absence Validation**: The formula then checks if the leave start date is before a specific cutoff date (September 23, 2019) and returns an error if so. It also verifies that the manager's assignment status is active and that the manager ID is valid.\n5. **Absence Period Validation**: It checks for overlapping absences by comparing the leave start and end dates with the current year's start and end dates. If an overlap is detected, it returns an error.\n6. **Final Validation and Return**: If all checks pass, the formula returns a valid status. Otherwise, it returns an appropriate error message and token values for the specific error condition encountered. The logic is designed to ensure that leave requests are valid, properly formatted, and do not conflict with existing absences or employment/managerial statuses.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates paternity/calculating days leave applications in Malaysia. Ensures the employee has worked at least 3 months, the leave start date is within a specified period after the child\u2019s birth, prohibits leave during probation for contract employees, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:   #### DBI Values Used\n- `ANC_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n- `ANC_ABS_ENTRS_DURATION`\n- `ANC_ABS_TYP_NAME`\n- `ANC_ABS_ENTRS_END_DATE`\n- `ANC_ABS_ENTRS_START_DATE`\n- `ANC_PER_PERSON_NUMBER`\n- `PER_ASG_REL_DATE_START`\n- `PER_ASG_REL_ACTUAL_TERMINATION_DATE`\n- `PER_ASG_GRADE_NAME`\n- `PER_ASG_EMPLOYMENT_CATEGORY`\n- `PER_ASG_USER_PERSON_TYPE`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `PER_ASG_BARGAINING_UNIT_CODE_NAME`\n- `PER_ASG_ATTRIBUTE7`\n\n#### Input Values\n- `iv_start_date`\n- `iv_end_date`\n- `IV_CALEDARSTARTDATE`\n- `IV_CALEDARENDDATE`\n- `IV_TOTALDURATION`\n- `IV_ABSENCE_REASON`\n- `IV_ATTRIBUTE_1`\n- `IV_ATTRIBUTE_2`\n\n#### Return Type\nThe formula returns a validation result, indicated by the `VALID` variable, which is of type text ('Y' for valid, 'N' for not valid), along with an error message and potentially other tokens.\n\n#### Logic Summary\n1. **Initialization**: The formula initializes various variables with default values, including dates, absence types, and employee details. It retrieves the person ID, legislative data group ID, and absence entry ID from the context.\n2. **Checks and Validations**: The formula performs several checks based on the employee's grade, union membership, shift type, and manager's status to determine if the leave request is valid. It checks for specific conditions such as the type of leave, duration, and if the manager is active.\n3. **Loop Through Absence Entries**: It loops through existing absence entries for the employee within a specific year to check for overlapping leaves or previously taken paternity leaves.\n4. **Paternity Leave Entitlement**: The formula checks the employee's grade to determine the entitlement for paternity leave (7 days for certain grades and 10 days for others) and ensures the requested leave does not exceed this entitlement.\n5. **Overlap and Limit Checks**: It verifies if the requested leave overlaps with existing leaves or if the employee has already utilized the maximum allowed days of paternity leave within the year.\n6. **Final Validation**: Based on these checks, the formula returns a validation result ('Y' or 'N') along with an appropriate error message if the request is invalid.\n\nThis summary outlines the main steps and logic of the FastFormula, which essentially validates an employee's request for paternity leave based on various rules and entitlements.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Determines the enrollment end date for absence plans for contractors in Malaysia (version 2). Uses the employee\u2019s actual termination date if available, otherwise defaults to the context end date or a specific policy date. Returns the calculated enrollment end date.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: PER_ASG_USER_PERSON_TYPE, PER_ASG_REL_ACTUAL_TERMINATION_DATE\n* **Input Values**: PERSON_ID, EFFECTIVE_DATE, END_DATE\n* **Return Type**: Date\n* **Logic Summary**: \n  1. The formula starts by setting default values for certain database items if they are not provided.\n  2. It then retrieves the person ID, effective date, and end date from the context.\n  3. The formula calculates the year start date for a specific person based on a value set.\n  4. If the actual termination date is provided, it uses that as the enrollment end date. \n  5. If the actual termination date is not provided, it calculates the enrollment end date by subtracting one day from the year start date.\n  6. The formula returns the calculated enrollment end date.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates the period dates for sick leave plans for employees in Malaysia. Determines the start and end dates based on employment tenure, termination dates, or policy rules, ensuring alignment with local regulations. Returns the calculated period dates.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used**: \n- PER_ASG_REL_DATE_START \n- PER_ASG_REL_ACTUAL_TERMINATION_DATE \n- PER_ASG_EFFECTIVE_START_DATE \n- PER_PER_PERSON_NUMBER \n- PER_ASG_EMPLOYMENT_CATEGORY \n- HR_ASSIGNMENT_ID \n- PERSON_ID \n- EFFECTIVE_DATE \n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n\n**Input Values**: \n- IV_PLANENROLLMENTSTARTDATE (date)\n\n**Return Type**: \nThe formula returns a date value, specifically the anniversary date based on certain conditions related to employment category and dates.\n\n**Logic Summary**: \n1. The formula starts by setting default and input values for various dates and identifiers, including employment category and person ID.\n2. It then determines key dates such as the hire date, effective date, and year beginning date.\n3. Based on the employment category, it calculates a specific anniversary date.\n4. If the employment category is not 'CONTRACT', the anniversary date is the greatest of the year's beginning date and the hire date.\n5. If the employment category is 'CONTRACT', it retrieves a contract renewal date and sets the anniversary date as the greatest of the hire date and this renewal date.\n6. Finally, the formula returns the calculated anniversary date, taking into account the employee's hire date, employment category, and relevant contractual or year-start dates.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Determines the enrollment start date for sick leave plans for employees in Malaysia. Uses the employee\u2019s hire date, plan enrollment date, or a specific policy date, ensuring compliance with local regulations. Returns the calculated enrollment start date.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: PERSON_ID, EFFECTIVE_DATE, GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n* **Input Values**: PER_ASG_REL_DATE_START, PER_ASG_EMPLOYMENT_CATEGORY\n* **Return Type**: Date\n* **Logic Summary**: \n  1. The formula starts by retrieving the person ID and employment category.\n  2. It then determines the effective date and the start date of a specific period.\n  3. The formula also defines two specific dates: September 23, 2019, and September 1, 2022.\n  4. It calculates the year start date based on the person ID and employment category by referencing a value set.\n  5. If the employment category is 'CONTRACT', the enrollment start date is set to the year start date.\n  6. For other employment categories, the formula compares the year start date with the effective date.\n  7. If the year start date is later than the effective date, the enrollment start date is set to the year start date; otherwise, it is set to the effective date.\n  8. The formula finally returns the determined enrollment start date.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates birthday leave applications in the UK. Ensures the duration complies with local policies (e.g., typically 1 day), prohibits overlap between calendar years, checks the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:**\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_PER_DATE_OF_BIRTH\n\n**Input Values:**\n- IV_START_DATE (date)\n- IV_END_DATE (date)\n- IV_CALEDARSTARTDATE (date)\n- IV_CALEDARENDDATE (date)\n- IV_TOTALDURATION (Number)\n- IV_ABSENCE_REASON (Text)\n\n**Return Type:**\nThe formula returns a validation status (VALID) which is a text value indicating whether the input parameters are valid or not, along with an error message if the validation fails.\n\n**Logic Summary:**\n1. The formula starts by initializing various variables with default values from database items (DBIs) and input values.\n2. It checks if the person's ID (from a value set) is not null, and if so, sets up contexts for HR assignment and effective date to get the manager's ID and assignment status.\n3. Based on the user mode and whether the user is the same as the person or the manager, it checks the manager's assignment status and returns an error if it's inactive.\n4. The formula then checks if the start date of an absence is within a certain range (5 days before and after the person's birthday) and returns an error if it's not.\n5. If all checks pass, the formula returns a valid status; otherwise, it returns an error message with a specific token value for display.\n6. The overall logic is designed to validate absence entry dates based on employee birthday and manager assignment status, ensuring that leaves are taken within allowed dates relative to the employee's birthday and that the approving manager is active.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates the duration of absence types for employees in Cambodia based on work schedules and rosters. Determines the duration by comparing entered absence hours to total assigned shift hours, with adjustments for shift patterns. Returns the calculated duration.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n  + PERSON_ID\n  + CIMB_GET_PH_KH (value set)\n\n* **Input Values**: \n  + IV_START_DATE (date)\n  + IV_END_DATE (date)\n  + IV_START_TIME (text)\n  + IV_END_TIME (text)\n  + IV_START_DURATION (number)\n  + IV_END_DURATION (number)\n\n* **Return Type**: \n  The formula returns a numeric value representing a duration.\n\n* **Logic Summary**: \n  This formula calculates a duration based on a series of dates and times. It starts by setting default values for start and end dates, times, and durations if they are not provided. It then determines the person ID from the context and converts the start and end dates to a standard format, incorporating the provided start and end times. \n  The formula then checks each day within the specified period to see if a specific condition (related to 'CIMB_GET_PH_KH' value set) is met for the person on that day. If the condition is met, it increments a counter representing the unrounded duration by one day. \n  Adjustments are made to the duration based on the start and end duration values (if they are half days). Finally, the formula returns the calculated duration. The logic iterates through each day in the specified period, evaluating the condition and adjusting the duration accordingly.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates marriage leave applications in the UK. Ensures the duration does not exceed a specified limit (e.g., 3\u20135 days), the leave is applied within a certain period after the marriage date, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: ### Summary of the Provided Oracle FastFormula\n\n#### DBI Values Used:\n- `PER_ASG_DATE_PROBATION_END`\n- `IV_ATTRIBUTE_DATE1`\n- `IV_ATTRIBUTE_DATE2`\n- `PER_ASG_GRADE_NAME`\n- `ANC_ABS_ENTRS_USER_MODE`\n- `PER_ASG_MARITAL_STATUS`\n- `PER_PER_MARITAL_STATUS`\n- `PER_PER_MARITAL_STATUS_DATE`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `PER_PER_PERSON_NUMBER`\n- `ABSENCE_ENTRY_ID`\n- `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n- `EFFECTIVE_DATE`\n- `HR_ASSIGNMENT_ID`\n- `PERSON_ID`\n\n#### Input Values:\n- `iv_start_date`\n- `iv_end_date`\n- `IV_CALEDARSTARTDATE`\n- `IV_CALEDARENDDATE`\n- `IV_TOTALDURATION`\n- `IV_ABSENCE_REASON`\n- `IV_ATTRIBUTE_DATE1`\n- `IV_ATTRIBUTE_DATE2`\n\n#### Return Type:\nThe formula returns a validation result (`VALID`), an error message (`ERROR_MESSAGE`), and token values (`TOKEN_NAME`, `TOKEN_VALUE`) indicating the outcome of the validation process, including any error messages or entitlement checks.\n\n#### Logic Summary:\n1. **Initialization**: The formula initializes various parameters, including dates, grades, and absence entry IDs, using default values or context values.\n2. **Validation Checks**: It checks if the user is entitled to apply for leave based on several conditions:\n   - **User Mode and Person Number**: Verifies if the user mode is not 'ADMIN' and the person number matches, or if the manager ID matches the logged-in user's manager ID.\n   - **Marital Status**: Checks if the employee's marital status is not single and the marital status date is recent enough to qualify for marriage leave.\n   - **Manager Status**: Ensures the manager is active.\n   - **Probation Period**: Checks if the employee is still under probation.\n   - **Leave Duration**: Validates the duration of the leave based on the employee's grade (e.g., 'U%' or '3%').\n3. **Context and Value Set Retrieval**: The formula interacts with various value sets and contexts to retrieve necessary information, such as absence entry IDs, HR assignment IDs, and manager details.\n4. **Conditional Error Handling**: Based on the validation checks, the formula returns specific error messages or tokens, indicating the reason for rejecting the leave application, such as exceeding the maximum allowed leave days or not meeting the marital status criteria.\n5. **Final Validation Outcome**: If all checks pass, the formula returns a validation result indicating success or failure, along with any accompanying error messages or tokens.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates annual leave applications in Vietnam. Ensures the duration aligns with grade-based entitlements, prohibits overlap between calendar years, checks sufficient balance, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the provided FastFormula:\n\n**DBI Values Used**: \n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_ATTRIBUTE7\n- PER_ASG_BARGAINING_UNIT_CODE_NAME\n\n**Input Values**: \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n**Return Type**: The formula returns validation results, including a validation indicator (VALID), an error message (ERROR_MESSAGE), and token values (TOKEN_NAME, TOKEN_VALUE) if the input values fail certain checks.\n\n**Logic Summary**: \n1. The formula starts by validating the input duration to ensure it is correct according to the specified working hours.\n2. It checks if the person number is valid and, if so, retrieves various details such as the manager's ID, assignment status, and legislative data group ID.\n3. Based on the user mode and person number, it checks for certain conditions such as whether the manager's assignment status is active and if the absence start date is before a specific date.\n4. The formula calculates the annual leave balance for the employee and checks if there are any overlaps with existing absences or if the balance is sufficient for the requested leave duration.\n5. It applies different compulsory leave limits based on the employee's grade and checks if the requested leave duration meets these limits.\n6. If any of the checks fail, the formula returns an error message indicating the specific issue; otherwise, it returns a validation indicator confirming that the input values are valid.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated brought forward leave accrual for employees in Malaysia with 6-month expiry. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and tracks balance within the 6-month expiry period. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***: Here is the summary of the provided FastFormula:\n\n**DBI Values Used:** \n- PER_ASG_PERSON_NUMBER \n- ANC_ABS_TYP_NAME \n- ANC_ABS_PLN_NAME \n- PER_ASG_REL_DATE_START \n- PER_ASG_GRADE_NAME \n- LEGISLATIVE_DATA_GROUP_ID \n- PERSON_ID \n- HR_ASSIGNMENT_ID \n\n**Input Values:** \n- IV_ACCRUAL \n- IV_CARRYOVER_VALUES \n- IV_ACCRUALPERIODENDDATE \n- IV_ACCRUALPERIODSTARTDATE \n- IV_PLANENROLLMENTSTARTDATE \n- IV_PLANENROLLMENTENDDATE \n- IV_CALEDARENDDATE \n- IV_CALEDARSTARTDATE \n\n**Return Type:** \nThe formula returns a numerical value representing the accrual amount.\n\n**Logic Summary:** \nThis FastFormula calculates the accrual amount for an employee's leave plan. Here's a step-by-step breakdown of the logic:\n1. It initializes various default values and input parameters related to employee details, accrual periods, and plan enrollment dates.\n2. It retrieves the legislative data group ID and person ID from the context.\n3. It calculates the months of service since the hire date.\n4. It determines the previous year-end date based on the accrual period start date.\n5. It changes the context to the previous year-end date and retrieves the plan balances for the annual leave and brought forward leave plans.\n6. It determines the carryover limit and calculates the accrual amount based on the annual leave balance.\n7. If the annual leave balance is zero, the accrual is set to zero. Otherwise, the accrual is capped at the carryover limit (7 days) or set to the annual leave balance, whichever is smaller.\n8. The formula logs data using ESS_LOG_WRITE and returns the calculated accrual amount.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates the duration of absence plan types for employees in Hong Kong based on work schedules and rosters. Determines the duration by comparing entered absence hours to total assigned shift hours, with adjustments for shift patterns. Returns the calculated duration.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used**: PERSON_ID, CIMB_GET_PH_HK\n\n**Input Values**: IV_START_DATE, IV_END_DATE, IV_START_TIME, IV_END_TIME, IV_START_DURATION, IV_END_DURATION\n\n**Return Type**: The formula returns a numeric value representing the duration.\n\n**Logic Summary**: \n1. The formula starts by initializing variables with input values and defaults, including dates, times, and durations.\n2. It calculates the start and end dates of a period by combining the input dates with the input times.\n3. If an end date is not provided, it defaults to the start date.\n4. The formula then iterates over each day in the calculated period.\n5. For each day, it checks if a specific condition (related to 'CIMB_GET_PH_HK') is met for the person with the given ID. If the condition is met, it increments a counter representing the unrounded duration.\n6. After iterating over all days, the formula adjusts the duration based on the start and end durations provided as input.\n7. Finally, it returns the calculated duration. \n\nThis summary outlines the main steps and logic of the FastFormula without delving into the specifics of the code, allowing someone to understand the overall flow and potentially recreate the formula based on this description.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates compassionate leave applications in Malaysia (version 2). Ensures the duration does not exceed 3\u20135 days (based on grade and reason), prohibits overlap between calendar years for non-contract employees, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: **Summary**\n\n* **DBI Values Used**: \n  - ANC_ABS_ENTRS_DURATION\n  - IV_TOTALDURATION\n  - ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  - ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - ANC_ABS_TYP_NAME\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  - ANC_ABS_ENTRS_END_DATE\n  - ANC_ABS_ENTRS_START_DATE\n  - IV_START_DATE\n  - IV_END_DATE\n  - IV_CALEDARSTARTDATE\n  - IV_CALEDARENDDATE\n  - ANC_ABS_ENTRS_ABSENCE_REASON_ID\n  - PER_ASG_GRADE_NAME\n  - IV_ABSENCE_REASON\n  - PER_ASG_REL_DATE_START\n  - PER_ASG_PROJECTED_ASSIGNMENT_END_DATE\n  - GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n  - PER_ASG_USER_PERSON_TYPE\n  - PER_ASG_SEX\n  - PER_ASG_EMPLOYMENT_CATEGORY\n  - ANC_ABS_ENTRS_USER_MODE\n  - PER_ASG_MANAGER_USER_PERSON_ID\n  - PER_PER_PERSON_NUMBER\n  - LEGISLATIVE_DATA_GROUP_ID\n  - HR_ASSIGNMENT_ID\n  - EFFECTIVE_DATE\n  - PERSON_ID\n\n* **Input Values**: \n  - iv_start_date\n  - iv_end_date\n  - IV_CALEDARSTARTDATE\n  - IV_CALEDARENDDATE\n  - IV_TOTALDURATION\n  - IV_ABSENCE_REASON\n\n* **Return Type**: The formula returns a validation status ('Y' or 'N') along with an error message if the validation fails.\n\n* **Logic Summary**: \n  1. The formula starts by initializing various default values for database items (DBIs) and input values. \n  2. It checks if the leave duration is a multiple of half a day and returns an error if it's not.\n  3. It then retrieves various context values, such as the absence entry ID, legislative data group ID, HR assignment ID, and person ID.\n  4. Based on the user mode, it checks if the user is admin or not, and performs different validation checks accordingly.\n  5. It checks for various conditions such as the start date being prior to a specific date, manager assignment status, grade name, and absence reason.\n  6. It also checks for the maximum allowed leave days based on the grade name and absence reason.\n  7. If the employment category is 'CONTRACT', it applies specific rules for contract employees, including calculating the year start and end dates based on the hire date.\n  8. It then loops through an array of absence entry IDs and checks for compassionate leave entries, calculating the total duration and comparing it to the limit.\n  9. Finally, it returns the validation status and an error message if the validation fails.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Determines the enrollment start date for absence plans for employees in Malaysia. Uses the employee\u2019s hire date, plan enrollment date, or a specific policy date, ensuring compliance with local regulations for permanent employees. Returns the calculated enrollment start date.\n\n***Instruction for the fastformula***:   #### DBI Values Used:\n- `PER_ASG_REL_DATE_START`\n- `PER_ASG_EMPLOYMENT_CATEGORY`\n- `PERSON_ID`\n- `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n- `GET_VALUE_SET` with the value set name `CIMB_GET_MY_ENROL_START_DATE`\n\n#### Input Values:\n- `l_person_id` derived from the context of `PERSON_ID`\n- `l_hire_date` set to `PER_ASG_REL_DATE_START`\n- `l_asg_category` set to `PER_ASG_EMPLOYMENT_CATEGORY`\n- `l_start_date` set to a fixed date of `2019-09-23`\n- `l_new_date` set to a fixed date of `2022-09-01` (though not used in the logic)\n- `EffDate` derived from `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n- `l_eff_date` derived from the context of `EFFECTIVE_DATE`\n\n#### Return Type:\nThe formula returns a date value representing the enrollment start date.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by initializing several variables with specific dates and values, including a person's ID, employment category, and certain fixed dates.\n2. **Context Retrieval**: It retrieves the person's ID and an effective date from the context.\n3. **Date Calculation**: It calculates a year start date by comparing the result of a value set `CIMB_GET_MY_ENROL_START_DATE` (which depends on the person's ID, employment category, and effective date) with the fixed start date (`2019-09-23`). The `GREATEST` function ensures that the latest of these two dates is selected as the `l_year_start_date`.\n4. **Conditional Logic**: The formula then checks if the calculated `l_year_start_date` is later than the fixed `l_start_date`. If it is, the `enrollmentStartDate` is set to `l_year_start_date`; otherwise, it is set to `l_start_date`.\n5. **Return**: Finally, the formula returns the determined `enrollmentStartDate`. This logic essentially ensures that the enrollment start date is the latest of a pre-defined start date or a dynamically calculated start date based on specific conditions.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Determines the enrollment start date for absence plans for contractors in Malaysia (version 2). Uses the contractor\u2019s start date, plan enrollment date, or a specific policy date, ensuring compliance with local regulations for contract employees. Returns the calculated enrollment start date.\n\n***Instruction for the fastformula***:   #### DBI Values Used:\n- PER_ASG_REL_DATE_START\n- PER_ASG_REL_ACTUAL_TERMINATION_DATE\n- PER_ASG_EFFECTIVE_START_DATE\n- PER_PER_PERSON_NUMBER\n- PERSON_ID\n- HR_ASSIGNMENT_ID\n- EFFECTIVE_DATE\n\n#### Input Values:\n- '4712/12/31 00:00:00' (default date for PER_ASG_REL_DATE_START, PER_ASG_REL_ACTUAL_TERMINATION_DATE, and PER_ASG_EFFECTIVE_START_DATE)\n- 'X' (default for PER_PER_PERSON_NUMBER)\n- '2019-09-23' (for l_start_date and l_asg_eff_st_date)\n- l_person_id (derived from context)\n- l_attrition_date (derived from PER_ASG_REL_ACTUAL_TERMINATION_DATE)\n- l_hr_assignment_id (derived from context)\n- l_eff_date (derived from context)\n\n#### Return Type:\nThe formula returns a date value representing the enrollment start date.\n\n#### Logic Summary:\n1. **Initialize Defaults**: The formula starts by setting default dates for assignment-related fields and a default value for the person number.\n2. **Retrieve Context Values**: It then retrieves the person ID, hire date, attrition date, HR assignment ID, and an effective date from the context or input values.\n3. **Calculate Year Start Date**: The formula calculates a year start date based on a value set called 'CIMB_GET_CONTRACT_RENEWAL_DATE', which depends on the person ID and the attrition date.\n4. **Set Effective Date and HR Assignment**: It sets the effective date and HR assignment ID in the context.\n5. **Determine Enrollment Start Date**: The formula then compares the calculated year start date with a predefined start date ('2019-09-23'). If the year start date is later than or equal to the predefined start date, it sets the enrollment start date to the year start date; otherwise, it sets the enrollment start date to the predefined start date.\n6. **Return Enrollment Start Date**: Finally, the formula returns the determined enrollment start date.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated brought forward leave accrual for employees in the UK with 2-year expiry. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and tracks balance within the 2-year expiry period. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used**: \n- PER_ASG_PERSON_NUMBER\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- LEGISLATIVE_DATA_GROUP_ID\n- PERSON_ID\n- HR_ASSIGNMENT_ID\n\n**Input Values**: \n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n\n**Return Type**: \nThe formula returns multiple values including the calculated ACCRUAL value (numeric), and three empty variables: adjustmentvalues (number), adjustmentdates (date), and adjustmenttypes (text).\n\n**Logic Summary**: \nThe formula calculates an employee's annual leave accrual based on their previous year's balance. Here's a step-by-step breakdown:\n1. It sets default values for various database items and initializes variables.\n2. It retrieves the legislative data group ID, person ID, and hire date (start date of the person's assignment).\n3. It calculates the number of months between the accrual period start date and the hire date.\n4. It determines the previous year's end date based on the accrual period start date.\n5. It changes the context to the previous year's end date and retrieves the balances for the 'Annual Leave Plan Employee' and 'Brought Forward Leave 2 Years Expiry' plans.\n6. It calculates the total accrual by adding the previous year's balances for both plans, taking the greatest value if the result is negative.\n7. If the total accrual exceeds 20, it caps the accrual at 20.\n8. Finally, it logs the calculation details and returns the calculated accrual value along with empty adjustment values, dates, and types.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Duplicate entry (assumed to be the same as above, possibly a versioning or typo). Calculates prorated brought forward leave accrual for employees in the UK with 2-year expiry. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and tracks balance within the 2-year expiry period. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used**: \n- PER_ASG_PERSON_NUMBER\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- PERSON_ID\n- HR_ASSIGNMENT_ID\n- LEGISLATIVE_DATA_GROUP_ID\n\n**Input Values**: \n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n\n**Return Type**: The formula returns multiple values including an accrual amount (a numeric value), and potentially empty values for adjustment values, dates, and types.\n\n**Logic Summary**: \n1. The formula starts by setting default values for various database items (DBIs) and inputting several critical dates and identifiers.\n2. It calculates the months between the accrual period start date (adjusted by one day) and the person's hire date, which is derived from a database item.\n3. It then retrieves the person's ID and HR assignment ID from context.\n4. The formula determines the previous year-end date by subtracting one day from the accrual period start date.\n5. Using this previous year-end date and a specific legislative data group ID, it changes the context to calculate the annual leave balance and brought forward leave balance as of the previous year-end date.\n6. It logs certain identifiers and balances for auditing or tracking purposes.\n7. The accrual amount is then set to the greatest of the annual leave balance or zero, capping it at 14 if it exceeds this value.\n8. Further logging is performed to track the accrual calculation.\n9. Finally, the formula returns the calculated accrual amount along with adjustment values, dates, and types (which are set to empty in this formula).",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates unpaid parental leave applications in the UK. Ensures the duration complies with local policies, requires other leave balances (e.g., annual, sick) to be exhausted, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: ### Summary of the Provided Oracle FastFormula\n\n* **DBI Values Used**: \n  - `PER_ASG_DATE_PROBATION_END`\n  - `PER_ASG_REL_DATE_START`\n  - `PER_ASG_REL_ACTUAL_TERMINATION_DATE`\n  - `PER_ASG_GRADE_NAME`\n  - `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n  - `IV_ATTRIBUTE_1`\n  - `PER_ASG_ACTION_CODE`\n  - `PER_ASG_JOB_NAME`\n  - `PER_ASG_POSITION_NAME`\n  - `PER_ASG_USER_PERSON_TYPE`\n  - `PER_ASG_EMPLOYMENT_CATEGORY`\n  - `ANC_ABS_ENTRS_USER_MODE`\n  - `PER_ASG_MANAGER_USER_PERSON_ID`\n  - `PER_PER_PERSON_NUMBER`\n  - `PER_ASG_ATTRIBUTE7`\n  - `PER_ASG_BARGAINING_UNIT_CODE_NAME`\n  - `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n  - `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n  - `ANC_ABS_TYP_NAME`\n  - `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n  - `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n  - `ANC_ABS_ENTRS_DURATION`\n\n* **Input Values**:\n  - `IV_START_DATE`\n  - `IV_END_DATE`\n  - `IV_CALEDARSTARTDATE`\n  - `IV_CALEDARENDDATE`\n  - `IV_TOTALDURATION`\n  - `IV_ABSENCE_REASON`\n  - `IV_ATTRIBUTE_1`\n\n* **Return Type**: \n  The formula returns a validation result, including a boolean (`VALID`), an error message (`ERROR_MESSAGE`), and token values (`TOKEN_NAME` and `TOKEN_VALUE`) if the validation fails.\n\n* **Logic Summary**:\n  1. **Initialization**: The formula starts by initializing various default values for database items and input parameters, which are used throughout the logic.\n  2. **Date Calculations**: It calculates specific dates such as the current year's start and end dates based on a given start date.\n  3. **User and Manager Checks**: The formula checks the user's mode and the manager's assignment status, ensuring the manager is active. If not, it returns an error indicating an inactive manager.\n  4. **Pay Availability Check**: It then checks for pay availability for the next working day, ensuring there is at least one day of pay available. If not, it continues to check subsequent days.\n  5. **Late Submission Check**: The formula verifies if the submission is late by comparing the next working day with the start date of the leave. If it's late (less than 3 days from the current date), it returns an error message.\n  6. **Absence Entry Loop**: It iterates through an array of absence entry IDs, checking for specific absence types (like 'Unpaid Parental Leave') and their statuses. It accumulates the duration of such absences and checks against a limit (2 years). If the limit is exceeded, it returns an error message regarding utilized entitlement.\n  7. **Return Validation Result**: Finally, the formula returns the validation result, which includes a boolean indicating whether the validation was successful, along with an error message and token values if the validation failed.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates unpaid personal leave applications in Vietnam. Ensures the duration complies with local policies, requires other leave balances (e.g., annual, sick) to be exhausted, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_USER_PERSON_TYPE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_EMPLOYMENT_CATEGORY\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n- IV_ACTUALCHILDBIRTHDATE\n\n**Return Type:**\nThe formula returns a validation result, indicated by the `VALID` variable, along with an error message and token values when validation fails. The return type can be considered as a collection of validation outcome and associated error details.\n\n**Logic Summary:**\nThis FastFormula validates the input parameters for absence recording, specifically checking for correct duration (in increments of 0.5 days), manager assignment status, and absence reason-specific duration limits. Here\u2019s a step-by-step breakdown:\n1. **Initialization**: The formula initializes various variables with either default values or input values and retrieves context values for HR assignment, legislative data group, and person ID.\n2. **Duration Validation**: It checks if the total duration of the absence is in increments of 0.5 days. If not, it sets the validation flag to 'N' (not valid) and provides an appropriate error message.\n3. **Manager Assignment Validation**: For non-admin users, it verifies the manager's assignment status. If the manager is not active or the manager ID is invalid, it sets the validation flag to 'N' and returns an error message.\n4. **Absence Reason Validation**: Based on the absence reason, it checks if the duration exceeds the maximum allowed (e.g., for death of a biological brother or sister, marriage of parents or siblings, etc.). If exceeded, it sets the validation flag to 'N', provides an error message detailing the maximum entitlement, and returns.\n5. **Return Validation Outcome**: Finally, it returns the validation outcome (valid or not), along with any error messages or token values for further processing or display.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated medical leave accrual for employees in India based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with local policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***: **DBI Values Used**: PER_ASG_GRADE_NAME, PER_ASG_FTE_VALUE\n\n**Input Values**: accrual, carryover\n\n**Return Type**: The formula returns two values: accrual and carryover, both of which are numeric.\n\n**Logic Summary**: \nThe formula calculates the final accrual and carryover values based on the input accrual and carryover. \n1. It first adjusts the carryover and accrual by the full-time equivalent (FTE) value.\n2. Then, it calculates the floored accrual, which is the integer part of the accrual.\n3. The formula then determines the decimal part of the accrual.\n4. Based on the decimal part, it rounds the accrual to the nearest half (0.5) or whole number.\n5. Finally, it returns the final accrual and the adjusted carryover value, taking into account the FTE value for the carryover.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates paternity leave applications in China. Ensures the employee has worked at least 3 months, the leave start date is within a specified period after the child\u2019s birth, prohibits leave during probation, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used:** \n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_USER_PERSON_TYPE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_EMPLOYMENT_CATEGORY\n\n**Input Values:** \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n**Return Type:** \nThe formula returns a validation status ('Y' or 'N') along with an error message and tokens if validation fails.\n\n**Logic Summary:** \nThis FastFormula validates an absence request based on various conditions. Here's a step-by-step breakdown:\n1. **Data Initialization**: The formula starts by initializing various data elements with default values or values from the database, including dates, employee details, and absence-related information.\n2. **Input Validation**: It checks if the total duration of the absence is in increments of 0.5 days. If not, it returns an error.\n3. **Employee Details Retrieval**: It retrieves the employee's person number and checks if it's valid. If not, it sets the person number to a default value.\n4. **Manager Validation**: It checks the status of the employee's manager. If the manager's status is not active or if the manager ID is 0, it returns an error.\n5. **Absence Duration Validation**: It checks if the duration of the absence exceeds 10 days. If so, it returns an error.\n6. **User Mode Check**: It checks the user mode of the absence entry. If the user mode is not 'ADMIN' and certain conditions related to the employee and manager are met, it proceeds with further validation.\n7. **Context Setting**: Throughout the formula, it sets various contexts (like effective dates, HR assignment IDs, and absence entry IDs) to retrieve or validate specific data.\n8. **Error Handling**: If any validation fails, it returns an error message along with tokens for further processing. If all validations pass, it returns a success status.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates unpaid leave applications in China. Ensures the duration complies with local policies, requires other leave balances (e.g., annual, sick) to be exhausted, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used**: \n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_USER_PERSON_TYPE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_EMPLOYMENT_CATEGORY\n\n**Input Values**: \n- iv_start_date (date)\n- iv_end_date (date)\n- IV_CALEDARSTARTDATE (date)\n- IV_CALEDARENDDATE (date)\n- IV_TOTALDURATION (Number)\n- IV_ABSENCE_REASON (Text)\n- IV_ATTRIBUTE_1 (Text)\n\n**Return Type**: \nThe formula returns a validation result, including a validity flag (VALID), an error message (ERROR_MESSAGE), and optionally, token names and values.\n\n**Logic Summary**: \n1. The formula initializes various default values and checks for valid input.\n2. It then checks if the leave duration is in increments of 0.5 days. If not, it returns an error.\n3. The formula retrieves the HR assignment ID, legislative data group ID, and person ID from context.\n4. It checks the employee's manager assignment status and the employee's employment category.\n5. If the user mode is not 'ADMIN' and the person number matches, or if the manager ID matches the employee's manager, it proceeds with further checks.\n6. It checks the manager's assignment status and returns an error if the manager is inactive.\n7. The formula then retrieves the annual leave balance for the employee and checks if the balance is greater than or equal to 0. If so, it returns an error suggesting the employee should change their leave type to annual leave.\n8. Finally, it checks for overlapping absences and returns an error if the leave dates overlap with the current year's leave period.\n9. If all checks pass, it returns a validation result indicating success or failure, along with any error messages.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated absence accrual for employees in China based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with local policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***: **Summary of FastFormula**\n\n* **DBI Values Used**: \n  - PER_ASG_PERSON_NUMBER\n  - ANC_ABS_TYP_NAME\n  - ANC_ABS_PLN_NAME\n  - PER_ASG_REL_DATE_START\n  - PER_ASG_REL_ACTUAL_TERMINATION_DATE\n  - PER_PERSON_ENTERPRISE_HIRE_DATE\n  - PER_ASG_GRADE_NAME\n  - PER_ASG_ACTION_CODE\n  - PER_ASG_JOB_NAME\n  - PER_HIST_ASG_EFFECTIVE_START_DATE\n  - PER_ASG_FTE_VALUE\n  - ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - ANC_ABS_ENTRS_DURATION\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  - ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  - ANC_ABS_ENTRS_START_DATE\n  - ANC_ABS_ENTRS_END_DATE\n\n* **Input Values**: \n  - IV_ACCRUAL\n  - IV_ACCRUALPERIODENDDATE\n  - IV_ACCRUALPERIODSTARTDATE\n  - IV_PLANENROLLMENTSTARTDATE\n  - IV_PLANENROLLMENTENDDATE\n  - IV_CALEDARENDDATE\n  - IV_CALEDARSTARTDATE\n  - IV_EVENT_DATES\n  - IV_BAND_CHG_DT1\n  - IV_BAND_CHG_BEFVAL1\n  - IV_BAND_CHG_AFTVAL1\n  - IV_BAND_CHG_DT2\n  - IV_BAND_CHG_AFTVAL2\n  - IV_BAND_CHG_BEFVAL2\n  - IV_BAND_CHG_DT3\n  - IV_BAND_CHG_BEFVAL3\n  - IV_BAND_CHG_AFTVAL3\n  - IV_BAND_CHG_DT4\n  - IV_BAND_CHG_AFTVAL4\n  - IV_BAND_CHG_BEFVAL4\n\n* **Return Type**: The formula returns an accrual value along with adjustment values, adjustment dates, and adjustment types.\n\n* **Logic Summary**:\n  1. **Initialization**: The formula starts by setting default values for various database items and input values. It then initializes several local variables to track different dates, accrual rates, and absence details.\n  2. **Checking Enrollment Dates**: It checks if the plan enrollment start date is the same as a specific date ('2019/09/23') and if the accrual period start date is before the plan enrollment start date. If these conditions are met and the plan enrollment start date is not the same as the hire date, the formula sets the accrual to 0 and returns.\n  3. **Band Change Detection**: The formula then detects if there are any band changes within the accrual period by comparing the accrual period start and end dates with the band change dates (IV_BAND_CHG_DT1 and IV_BAND_CHG_DT2).\n  4. **Absence Calculation**: If there are band changes, the formula calculates the absence duration before and after each band change by iterating through each absence entry. It considers only absences that are not withdrawn, denied, or saved.\n  5. **Accrual Rate Adjustment**: Based on the band changes and absence durations, the formula adjusts the accrual rates for the periods before and after each band change.\n  6. **FTE Calculation**: The formula calculates the full-time equivalent (FTE) for each period by considering the FTE changes within the accrual period.\n  7. **Accrual Calculation**: Finally, the formula calculates the accrual by applying the adjusted accrual rates to the FTE periods, considering the absence durations and band changes. The result is then returned along with adjustment values, adjustment dates, and adjustment types.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated ancillary parental leave accrual for employees in India based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with local policies for parental leave. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: PER_ASG_REL_ORIGINAL_DATE_OF_HIRE, PER_ASG_REL_ACTUAL_TERMINATION_DATE, ANC_ABS_PLN_NAME, ANC_ABS_PLN_PLAN_UOM\n* **Input Values**: IV_ACCRUAL, IV_ACCRUALPERIODSTARTDATE, IV_ACCRUALPERIODENDDATE, IV_CALEDARSTARTDATE, IV_CALEDARENDDATE, IV_PLANENROLLMENTSTARTDATE, IV_PLANENROLLMENTENDDATE\n* **Return Type**: The formula returns a numeric value representing the calculated accrual amount, rounded to two decimal places.\n* **Logic Summary**: \n    1. The formula calculates the participation duration by determining the overlap between the calendar period and the plan enrollment period.\n    2. It then calculates the term duration by determining the total number of months in the calendar period.\n    3. The formula calculates the first month's accrual by multiplying the input accrual value by the ratio of participation duration to term duration.\n    4. The result is then rounded to two decimal places and subsequently adjusted to the nearest half or whole number based on the decimal portion.\n    5. The final accrual amount is calculated and returned as the result of the formula. The logic involves conditional checks to determine whether to round up or down to the nearest half or whole number.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated annual leave accrual for employees in India based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with local policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: IV_CALEDARSTARTDATE, IV_CALEDARENDDATE, IV_EVENT_DATES, IV_ACCRUAL_VALUES, PER_ASG_FTE_VALUE\n* **Input Values**: IV_ACCRUAL, IV_EVENT_DATES, IV_ACCRUAL_VALUES, IV_CALEDARSTARTDATE, IV_CALEDARENDDATE\n* **Return Type**: The formula returns a numeric value representing the accrual amount, rounded to two decimal places.\n* **Logic Summary**: \n  1. The formula initializes variables to track the total accrual and iterates through a list of event dates.\n  2. For each pair of consecutive event dates, it calculates the accrual for that period by multiplying the number of days between the dates (plus one) by the accrual value for that period.\n  3. The formula accumulates these accruals to find the total accrual over all periods.\n  4. It then calculates the total duration of the calendar period.\n  5. The formula computes the average accrual per day by dividing the total accrual by the total duration.\n  6. This average accrual is then multiplied by a full-time equivalent (FTE) value to find the final accrual.\n  7. The result is rounded to two decimal places before being returned as the final accrual amount.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated ancillary leave accrual for employees in India based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with local policies for ancillary leave types. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: PER_ASG_GRADE_NAME, PER_ASG_FTE_VALUE\n* **Input Values**: accrual, carryover, prorationFactor, carryOverProration\n* **Return Type**: The formula returns two numeric values: accrual and carryover.\n* **Logic Summary**: \n    1. The formula starts by applying the employee's full-time equivalent (FTE) value to the accrual and carryover amounts.\n    2. It calculates the floored accrual by rounding down the accrual to the nearest whole number.\n    3. The decimal part of the accrual is then calculated and used to determine the final accrual amount.\n    4. Based on the decimal part, the final accrual is either rounded down to the nearest whole number, rounded up to the next half, or rounded up to the next whole number.\n    5. The formula then returns the final accrual and the adjusted carryover amounts, taking into account the employee's FTE value.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates annual leave applications in India. Ensures the duration aligns with grade-based entitlements, prohibits overlap between calendar years, checks sufficient balance, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is the summary of the provided FastFormula:\n\n**DBI Values Used:** \n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n**Input Values:** \n- IV_START_DATE\n- IV_END_DATE\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type:** \nThe formula returns a validation result, indicated by the variable `VALID`, which can be either 'Y' (valid) or 'N' (not valid). It also returns an `ERROR_MESSAGE` and possible `TOKEN_NAME` and `TOKEN_VALUE` if the validation fails.\n\n**Logic Summary:**\n1. The formula initializes various default values and input parameters.\n2. It checks if the total duration of the leave is a multiple of 0.5 (half days). If not, it returns an error message.\n3. It retrieves the person number of the current user and their manager's assignment status.\n4. Based on the user mode (admin or not), it checks if the manager's assignment status is active. If not, it returns an error message.\n5. The formula then applies different leave approval rules based on the total duration of the leave and the number of days in advance the application is submitted.\n   - For 1-2 days leave, the application must be submitted at least 5 days in advance.\n   - For 3-5 days leave, the application must be submitted at least 15 days in advance.\n   - For 6-10 days leave, the application must be submitted at least 30 days in advance.\n   - Leaves exceeding 10 continuous working days are not allowed.\n6. If any of these rules are not met, the formula returns an error message indicating the specific rule that was not met.\n7. If all checks pass, the formula returns a valid result.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated medical parental leave accrual for employees in India based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with local policies for medical parental leave. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used:** \nNone, as there are no direct database item references in the formula, but several input parameters have default values.\n\n**Input Values:** \n- IV_ACCRUAL\n- IV_ACCRUALPERIODSTARTDATE\n- IV_ACCRUALPERIODENDDATE\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n\n**Return Type:** \nThe formula returns a numeric value representing the calculated accrual amount, rounded and adjusted according to specific rules.\n\n**Logic Summary:** \n1. The formula starts by calculating the total duration of a calendar period and a participation period based on given start and end dates.\n2. It then determines the overlap between these two periods to find out how long the participation actually lasted within the calendar period.\n3. Based on the overlap, it calculates a prorated accrual amount by dividing the participation duration by the total calendar term duration and multiplying by the given accrual amount.\n4. It checks for specific conditions such as if the participation ends on the same month and year as the calendar start, which affects the accrual calculation.\n5. The formula then applies rounding rules to the calculated accrual, first rounding it to two decimal places, then applying a flooring logic to handle decimal parts less than 0.5 and greater than or equal to 0.5 separately, effectively rounding to the nearest half.\n6. Finally, it returns the adjusted accrual value. \n\nThis summary should allow someone to understand the high-level logic and components involved in the FastFormula without needing to delve into the specific code details.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates sick leave applications in India. Ensures the duration does not exceed a specified limit (e.g., 10\u201330 days based on grade), requires a medical certificate for durations over 2 days, checks the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used**: \n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n**Input Values**: \n- IV_START_DATE\n- IV_END_DATE\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type**: \nThe formula returns a validation status (VALID) along with an error message if any validation fails.\n\n**Logic Summary**: \n1. The formula starts by initializing various default values for items such as start date, grade name, absence type, and manager details.\n2. It then retrieves the absence entry ID and checks if the total duration of absence is a multiple of 0.5. If not, it sets the validation status to 'N' (not valid) and returns an error message.\n3. If the duration is valid, it checks if the person number is not null. If it is null, it sets the person number to a default value.\n4. The formula then changes the context to retrieve the manager's assignment ID based on the effective date and checks the manager's assignment status.\n5. It verifies if the user mode is 'ADMIN' or if the person number matches the manager's person ID. If the manager's status is not 'ACTIVE' or the manager ID is 0, it sets the validation status to 'N' and returns an error message.\n6. If all checks pass, the formula returns a validation status of 'Y' (valid). The logic overall seems to validate absence requests based on duration, user mode, and manager's assignment status, ensuring that all necessary conditions are met before approving an absence request.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates parental leave applications in Malaysia. Ensures the employee has worked at least 3 months, the leave start date is within a specified period after the child\u2019s birth, prohibits leave during probation for contract employees, verifies the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:   #### DBI Values Used\nThe following database items (DBIs) are referenced in the formula:\n- `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n- `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_TYP_NAME`\n- `PER_ASG_REL_DATE_START`\n- `PER_ASG_REL_ACTUAL_TERMINATION_DATE`\n- `PER_ASG_EMPLOYMENT_CATEGORY`\n- `PER_ASG_BARGAINING_UNIT_CODE_NAME`\n- `PER_ASG_USER_PERSON_TYPE`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `PER_ASG_GRADE_NAME`\n- `PER_ASG_ATTRIBUTE7`\n- `PER_PER_PERSON_NUMBER`\n- `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n\n#### Input Values\nThe formula accepts the following input values:\n- `iv_start_date` (date)\n- `iv_end_date` (date)\n- `IV_CALEDARSTARTDATE` (date)\n- `IV_CALEDARENDDATE` (date)\n- `IV_TOTALDURATION` (Number)\n- `IV_ABSENCE_REASON` (Text)\n- `IV_ATTRIBUTE_1` (Text)\n- `IV_ATTRIBUTE_2` (Text)\n\n#### Return Type\nThe formula returns a validation result (`VALID`) and an error message (`ERROR_MESSAGE`), along with token names and values when applicable. The return type is thus a combination of a boolean (`VALID`) and strings (`ERROR_MESSAGE`, `TOKEN_NAME`, `TOKEN_VALUE`).\n\n#### Logic Summary\n1. **Initialization**: The formula starts by initializing various variables with default or derived values, including dates, absence types, and employee details.\n2. **Validation Checks**: It then performs several validation checks to ensure the input data is correct and within certain limits. This includes checks on absence duration, shift types, and whether the manager's assignment status is active.\n3. **Absence Entitlement Calculation**: The formula calculates the employee's absence entitlement based on their employment category, shift, and absence type. It also considers the number of days already utilized for a specific type of leave.\n4. **Overlap Checks**: It checks for overlaps between the current absence request and any existing absences within the same year, ensuring that the employee does not exceed their entitlement.\n5. **Final Validation and Return**: After performing these checks, the formula returns a validation result (`VALID` or `NOT VALID`) along with an appropriate error message if the validation fails. The return also includes token names and values for specific error messages.\n6. **Context and Assignment Considerations**: Throughout the formula, it considers the employee's assignment details, manager's status, and the specific rules for paternity leave, compassionate leave, and other types of absences, demonstrating a complex interplay between employee data, absence policies, and managerial approvals.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates the anniversary date for employees in Malaysia to determine eligibility or adjustments for absence plans (e.g., annual leave, bonuses). Uses the employee\u2019s hire date or service tenure, ensuring alignment with local policies. Returns the calculated anniversary date.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: PER_ASG_REL_DATE_START, PER_ASG_REL_ACTUAL_TERMINATION_DATE, PER_ASG_EFFECTIVE_START_DATE, PER_PER_PERSON_NUMBER\n* **Input Values**: IV_PLANENROLLMENTSTARTDATE\n* **Return Type**: Date\n* **Logic Summary**: \n    1. The formula starts by setting default values for various dates, including assignment start and termination dates, and a person's hire date.\n    2. It then retrieves a person's ID and HR assignment ID from the context.\n    3. Next, it calculates the start of the year based on the effective date of the pay interface extraction and the assignment start date.\n    4. The formula then determines the period start date by retrieving the contract renewal date for the person from a value set, using the person's ID and attrition date as parameters.\n    5. The period start date is then used to calculate the anniversary date, which is the return value of the formula.\n    6. The anniversary date is ultimately determined based on the contract renewal date, taking into account the person's hire date and attrition date.\n    7. The formula returns the calculated anniversary date as a date value.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Determines the enrollment end date for absence plans for employees in Malaysia. Uses the employee\u2019s actual termination date if available, otherwise defaults to the context end date or a specific policy date for permanent employees. Returns the calculated enrollment end date.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: PER_ASG_USER_PERSON_TYPE, PER_ASG_REL_ACTUAL_TERMINATION_DATE, PERSON_ID, EFFECTIVE_DATE, END_DATE\n* **Input Values**: PER_ASG_REL_ACTUAL_TERMINATION_DATE, l_person_id, EffDt, l_End_Date\n* **Return Type**: Date\n* **Logic Summary**: \n  1. The formula first checks if a termination date has been provided. \n  2. If a termination date is provided, it proceeds to calculate the earliest start date of enrollment based on a specific contract for the given person ID. \n  3. It then determines the earliest end date between the calculated termination date (if provided) and the given end date. \n  4. Finally, the formula returns this calculated end date as a result, effectively determining the enrollment end date based on the provided termination date and other contextual information.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates the anniversary event date for absence plans in Hong Kong to determine eligibility or adjustments (e.g., annual leave, bonuses). Uses the employee\u2019s hire date or service tenure, ensuring alignment with local policies. Returns the calculated anniversary date.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: PER_ASG_REL_DATE_START, PER_ASG_REL_ACTUAL_TERMINATION_DATE, PER_ASG_EFFECTIVE_START_DATE, PER_PER_PERSON_NUMBER, PERSON_ID, HR_ASSIGNMENT_ID, EFFECTIVE_DATE, GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n* **Input Values**: IV_PLANENROLLMENTSTARTDATE\n* **Return Type**: Date\n* **Logic Summary**: \n  1. The formula starts by setting default values for various database items, including dates and a person number.\n  2. It then retrieves the person ID and HR assignment ID from the context.\n  3. The formula calculates the start date of the year based on the effective date and the assignment start date.\n  4. It then changes the context to use the effective date and retrieves the person number.\n  5. The formula then changes the context again to use the effective date and HR assignment ID, and retrieves the contract start date for the person.\n  6. If the contract start date is later than a predefined start date, the formula sets the anniversary date to the contract start date; otherwise, it sets the anniversary date to the assignment start date.\n  7. Finally, the formula returns the calculated anniversary date.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated sick leave accrual for employees in Malaysia based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with local policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: PER_ASG_FTE_VALUE, PER_ASG_GRADE_NAME, PER_ASG_EMPLOYMENT_CATEGORY, HR_ASSIGNMENT_ID, EFFECTIVE_DATE\n* **Input Values**: None (all values are derived from DBI values or defaults)\n* **Return Type**: The formula returns two numeric values: `accrual` and `carryover`.\n* **Logic Summary**: \n  1. The formula starts by setting default values for certain database items (DBIs) if they are not already set.\n  2. It then retrieves specific values from the database items, such as the assignment ID, employment category, grade name, and effective date.\n  3. The formula logs some initial values for auditing or debugging purposes.\n  4. It checks the grade name against certain conditions (e.g., containing '.D', '.DE', starting with 'C', or being 'SLIM').\n  5. If the grade name matches any of these conditions, the formula adjusts the accrual value from a default of 30 to 14.\n  6. Finally, the formula returns the calculated accrual and carryover values. The carryover value remains at its default of 0 throughout the formula. \n\nThis summary should allow someone familiar with Oracle FastFormula to understand the logic and possibly recreate the formula based on the description.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates sick leave applications in Cambodia. Ensures the duration does not exceed a specified limit (e.g., 10\u201330 days based on grade), requires a medical certificate for durations over 2 days, checks the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used:**\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_REASON_ID\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_GRADE_NAME\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_ASG_BARGAINING_UNIT_CODE_NAME\n- PER_PER_PERSON_NUMBER\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n- IV_ATTRIBUTE_2\n\n**Return Type:**\nThe formula returns a Boolean value (VALID) along with an error message and token values if the validation fails.\n\n**Logic Summary:**\n1. The formula initializes various variables with default values and input values provided.\n2. It checks the user mode and manager status to determine the validation path.\n3. If the user is not an admin and is applying for leave on a date prior to a specified cutoff date, the formula returns an error.\n4. The formula then checks for inactive manager assignments and returns an error if the manager is inactive.\n5. Based on the employee's grade, it sets a limit for sick leave (SL) days.\n6. The formula validates the absence duration against the SL limit and checks for half-day and future absence rules.\n7. It calculates the total SL days taken in the current year and checks against the SL limit.\n8. If the SL limit is exceeded, it returns an error with a message indicating the utilization and the additional days applied for.\n9. The formula also checks for medical leave without a certificate and validates against a limit of consecutive days.\n10. If the absence reason is medical leave without a certificate and the total duration exceeds the limit, it returns an error.\n11. Finally, if the absence reason is not medical leave without a certificate and the duration is less than or equal to one day, it checks for attachments and returns an error if no attachment is found.\n12. The formula returns a validation result (VALID) along with any error messages or token values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates maternity leave applications in India. Ensures the duration complies with local regulations (e.g., 180 days), prohibits leave during probation, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: **Summary**\n================\n\n### DBI Values Used\nThe following database items (DBIs) are referenced in the formula:\n- `PER_ASG_REL_DATE_START`\n- `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n- `PER_ASG_GRADE_NAME`\n- `PER_ASG_EMPLOYMENT_CATEGORY`\n- `PER_ASG_BARGAINING_UNIT_CODE_NAME`\n- `PER_ASG_USER_PERSON_TYPE`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n- `ANC_ABS_TYP_NAME`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n- `PER_ASG_ATTRIBUTE7`\n- `PER_PER_PERSON_NUMBER`\n\n### Input Values\nThe formula accepts the following input values:\n- `iv_start_date` (date)\n- `iv_end_date` (date)\n- `IV_CALEDARSTARTDATE` (date)\n- `IV_CALEDARENDDATE` (date)\n- `IV_TOTALDURATION` (Number)\n- `IV_ABSENCE_REASON` (Text)\n- `IV_ATTRIBUTE_1` (Text)\n- `IV_ATTRIBUTE_2` (Text)\n\n### Return Type\nThe formula returns a set of variables including a validation flag (`VALID`), an error message (`ERROR_MESSAGE`), and potentially token names and values for specific error messages. The primary return type is a validation flag indicating whether the logic executed successfully or encountered errors.\n\n### Logic Summary\nThe formula performs the following steps:\n1. **Initialization**: It initializes various variables with default or context-specific values.\n2. **Validation Checks**: It performs several validation checks on the input and derived data, including:\n   - Verifying the duration is a multiple of 0.5.\n   - Checking the manager's assignment status if the user is not an admin and is either the person themselves or their manager.\n3. **Absence Entry Iteration**: It iterates through an array of absence entry IDs to calculate specific leave-related metrics, such as the number of certain types of leaves (e.g., 'Maternity Leave').\n4. **Logical Evaluations**: Based on the absence reason, duration, and other factors, it evaluates whether the submission exceeds certain limits (e.g., more than a month of leave duration or specific day limits for certain leave types).\n5. **Error Handling**: If any validation checks or logical evaluations fail, it sets an error message and returns with a validation failure indicator.\n6. **Return**: Finally, it returns the validation status along with any relevant error messages or tokens for further processing.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates casual leave applications in India. Ensures the duration does not exceed a specified limit (e.g., 3\u20135 days based on grade), prohibits overlap between calendar years, checks the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used**: \n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n**Input Values**: \n- IV_START_DATE\n- IV_END_DATE\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n\n**Return Type**: \nThe formula returns a validation result, which is a combination of a boolean value (VALID) and an error message (ERROR_MESSAGE) along with specific token names and values when the validation fails.\n\n**Logic Summary**: \n1. The formula starts by initializing various default values and input parameters.\n2. It checks if the total duration of an absence entry is valid, ensuring it follows specific rules related to working hours. If the duration is not valid, it returns an error message.\n3. If the person number (l_fnd_person_number) is not null, it then retrieves the manager's assignment status based on the manager's ID.\n4. It checks the user mode to determine the current user's role and the relationship between the user and the manager.\n5. Based on the user mode, manager's assignment status, and other conditions, it validates whether the manager is active or not. If the manager is not active or if there are issues with the manager's ID, it returns an error.\n6. The formula uses various functions like GET_VALUE_SET, GET_CONTEXT, and CHANGE_CONTEXTS to interact with the database and manage session contexts.\n7. The logic ensures that certain conditions are met before proceeding, such as checking for the existence of a person number, the status of the manager, and ensuring that the duration of absence is correctly formatted according to working hours.\n8. The formula handles different scenarios based on the user mode ('ADMIN' or not) and the relationship between the user and the manager, adjusting its validation logic accordingly.\n9. It returns a validation result, indicating whether the input is valid or not, along with an appropriate error message if validation fails.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates outstation leave applications in Singapore. Ensures the duration complies with local policies, prohibits overlap between calendar years, checks the manager\u2019s active status, and restricts applications before September 23, 2019. Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:** \n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- PER_ASG_DATE_PROBATION_END\n- ANC_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- ABSENCE_ENTRY_ID\n- HR_ASSIGNMENT_ID\n- EFFECTIVE_DATE\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_DATE1\n\n**Return Type:** \nThe formula returns a set of values including a validation flag (VALID), an error message, and token names and values.\n\n**Logic Summary:**\n1. The formula starts by initializing various variables with default or input values and retrieves specific database item values.\n2. It checks if the input start and end dates span across two different calendar years. If so, it returns an error indicating that leave applications cannot overlap between two years.\n3. It then verifies the manager's assignment status by fetching the manager's ID and checking if the manager is active. If the manager is not active or if there's no manager ID, it returns an error.\n4. If both checks pass, the formula continues with further processing but the provided code snippet concludes with returning the validation status.\n5. Throughout the formula, context values such as effective dates and assignment IDs are used to fetch or set necessary information.\n6. The formula utilizes value sets to retrieve specific information about the manager's status and person ID.\n7. It maintains a validation flag (VALID) that is set to 'N' if any checks fail, along with corresponding error messages and token values for notification purposes.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates annual leave applications in China. Ensures the duration aligns with grade-based entitlements, prohibits overlap between calendar years, checks sufficient balance, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:**\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_POSITION_NAME\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_ATTRIBUTE7\n- PER_ASG_BARGAINING_UNIT_CODE_NAME\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n**Return Type:**\nThe formula returns a set of values including a validation flag (VALID), an error message (ERROR_MESSAGE), and potentially error codes and tokens, depending on the validation outcomes. The primary return variable (VALID) is a text value indicating whether the validation process is successful ('Y') or not ('N'), accompanied by additional information when validation fails.\n\n**Logic Summary:**\n1. **Initialization**: The formula initializes various variables using inputs and database items (DBIs), including dates, employment details, and absence reasons.\n2. **Validation Checks**: It performs several validation checks in sequence:\n   - **Duration Validation**: Checks if the leave duration (IV_TOTALDURATION) is in increments of 0.5 days. If not, it returns an error.\n   - **Manager Status Validation**: For non-admin users, it checks if the manager is active. If the manager is not active, it returns an error.\n   - **Earned Leave Days Calculation**: Calculates the earned leave days based on the duration of service and initial balance. It checks if the requested leave exceeds the earned days or if the earned days are zero, returning an error in such cases.\n   - **Probation Period Check**: Validates if the leave start date is within a probation period, applying different rules based on this condition.\n   - **Annual Leave Balance Check**: Checks if the annual leave balance is sufficient for the requested leave period, considering different scenarios such as overlapping leave periods and leave carried over to the next year.\n   - **Compulsory Leave Validation**: Applies specific rules for compulsory leave, including minimum duration requirements.\n3. **Error Handling and Return**: Depending on the outcome of these checks, the formula returns a VALID flag along with an appropriate error message and other relevant details if validation fails. If all checks pass, it indicates successful validation.\n4. **Context Switching**: The formula switches contexts to retrieve and update various employment and leave details, ensuring that the correct data is considered for each validation step.\n\nThis summary outlines the key steps and logic of the FastFormula, focusing on the main validation checks and return values without delving into the specific code details.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates child care time-off applications in Vietnam. Ensures the duration complies with local policies, prohibits overlap between calendar years, checks the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:   **DBI Values Used:**\n- `PER_PER_CONTACT_DATE_OF_BIRTH`\n- `PER_PER_CONTACT_CONTACT_TYPE`\n- `PER_PER_CONTACT_PERSON_ID`\n- `PER_EXT_PERSON_CITIZENSHIP_NATIONALITY`\n- `ANC_ABS_ENTRS_APPROVAL_STATUS_CD`\n- `ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR`\n- `ANC_ABS_ENTRS_ABSENCE_TYPE_ID`\n- `ANC_ABSENTRS_DURATION`\n- `ANC_ABS_TYP_NAME`\n- `ANC_ABS_ENTRS_ABSENCE_STATUS_CD`\n- `ANC_ABS_ENTRS_END_DATE`\n- `ANC_ABS_ENTRS_START_DATE`\n- `PER_ASG_REL_DATE_START`\n- `PER_PER_CONT_REL_CONTACT_TYPE`\n- `PER_PER_CONT_REL_CONTACT_PERSON_ID`\n- `ANC_ABS_ENTRS_USER_MODE`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `PER_PER_PERSON_NUMBER`\n- `PER_EXT_PERSON_CITIZENSHIP_STATUS`\n- `HR_ASSIGNMENT_ID`\n- `EFFECTIVE_DATE`\n- `PERSON_ID`\n- `PER_ASG_MANAGER_USER_PERSON_ID`\n- `PER_PER_CONT_REL_CONTACT_PERSON_ID`\n- `PER_EXT_PERSON_CITIZENSHIP_NATIONALITY`\n- `PER_EXT_PERSON_CITIZENSHIP_STATUS`\n\n**Input Values:**\n- `iv_start_date` (date)\n- `iv_end_date` (date)\n- `IV_CALEDARSTARTDATE` (date)\n- `IV_CALEDARENDDATE` (date)\n- `IV_TOTALDURATION` (Number)\n- `IV_ABSENCE_REASON` (Text)\n\n**Return Type:**\nThis formula returns a validation status (`VALID`) along with an error message if any conditions are not met.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by initializing various variables, including dates, IDs, and flags, with default or context-specific values.\n2. **Context Setup**: It sets up the Oracle HRMS context using the `CHANGE_CONTEXTS` function for HR assignment and effective dates.\n3. **Manager Validation**: It checks if the manager's assignment status is active and if the manager ID is valid. If not, it returns an error.\n4. **Contact Person Retrieval**: It retrieves contact persons related to the employee, specifically focusing on child contacts.\n5. **Child Eligibility Check**: For each child contact, it checks the child's age, citizenship, and whether the child exists. It keeps track of the youngest child.\n6. **Absence Eligibility**: Based on the information gathered, it checks if the employee is eligible for child care time off. This includes verifying if the youngest child is under a certain age threshold.\n7. **Validation and Error Handling**: If any conditions are not met (e.g., the youngest child is older than 12 months, or the employee is not eligible), it returns a specific error message.\n8. **Final Validation Return**: The formula concludes by returning a validation status indicating whether the employee is eligible for the absence based on the child care time off policy, along with any applicable error messages or tokens for further processing.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates the anniversary event date for absence plans in Malaysia to determine eligibility or adjustments (e.g., annual leave, bonuses). Uses the employee\u2019s hire date or service tenure, ensuring alignment with local policies. Returns the calculated anniversary date.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n  + PER_ASG_REL_DATE_START\n  + PER_ASG_REL_ACTUAL_TERMINATION_DATE\n  + PER_ASG_EFFECTIVE_START_DATE\n  + PER_PERSON_NUMBER\n  + HR_ASSIGNMENT_ID\n  + GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n  + EFFECTIVE_DATE\n* **Input Values**: \n  + IV_PLANENROLLMENTSTARTDATE (date)\n* **Return Type**: Date\n* **Logic Summary**: \n  1. The formula starts by retrieving various default dates and a person's ID, including their hire date, attrition date, and HR assignment ID.\n  2. It then determines the start of the year based on the greatest of two dates: the assignment start date and the start of the current year.\n  3. The formula sets a specific effective date, which is used for calculations.\n  4. It retrieves a contract renewal date for the person, based on their ID and the attrition date, from a value set named 'CIMB_GET_CONTRACT_RENEWAL_DATE'.\n  5. This contract renewal date is then set as the anniversary date.\n  6. Finally, the formula returns the anniversary date as the result.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates full-paid sick leave applications in Vietnam. Ensures the duration does not exceed a specified limit (e.g., 10\u201330 days based on grade), requires a medical certificate for durations over 2 days, checks the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: **DBI Values Used:**\nThe following database items (DBIs) are referenced in the formula:\n- PER_ASG_DATE_PROBATION_END\n- PER_ASG_REL_DATE_START\n- PER_ASG_GRADE_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- IV_ATTRIBUTE_1\n- PER_ASG_ACTION_CODE\n- PER_ASG_JOB_NAME\n- PER_ASG_USER_PERSON_TYPE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_EMPLOYMENT_CATEGORY\n- HR_ASSIGNMENT_ID\n- LEGISLATIVE_DATA_GROUP_ID\n- PERSON_ID\n- ABSENCE_ENTRY_ID\n- EFFECTIVE_DATE\n\n**Input Values:**\nThe formula uses the following input values:\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n**Return Type:**\nThe formula returns a validation result, which includes a validation flag (VALID), an error message (ERROR_MESSAGE), and potentially additional token names and values (TOKEN_NAME, TOKEN_VALUE) if validation fails.\n\n**Logic Summary:**\nThe formula performs the following steps:\n1. **Initialization**: It initializes various default values and retrieves context values such as HR assignment ID, legislative data group ID, and person ID.\n2. **Input Validation**: It checks if the input duration is a multiple of 0.5 days and returns an error if not.\n3. **Person Number Validation**: It checks if a person number is provided and set by a value set; otherwise, it defaults to 'N'.\n4. **Manager Validation**: It retrieves the manager ID and checks their assignment status to ensure it's active. If not, or if the manager ID is 0, it returns an error.\n5. **Absence Balance Check**: It calculates the annual accrual balance for a specific leave plan and checks if the balance is 0. If so, it returns an error because the employee cannot record an absence without available balance.\n6. **Date Validation**: It checks if the absence start and end dates overlap with the start and end of the year. If they do in a manner that's not allowed, it returns an error.\n7. **Final Validation**: If all checks pass, the formula returns a validation success; otherwise, it returns an appropriate error message based on the validation that failed.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Retrieves compensation data for absence plans in the UK. Checks for specific absence types (e.g., annual, sick, Hajj) with block leave reasons within a specified period, determining if compensation limits are exceeded. Returns a status indicating whether compensation data exists.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:**\n- PER_ASG_PERSON_NUMBER\n- ANC_ABS_TYP_NAME\n- ANC_ABS_PLN_NAME\n- PER_ASG_REL_DATE_START\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_ABSENCE_REASON_ID\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- PER_ASG_GRADE_NAME\n- PER_ASG_JOB_NAME\n- EFFECTIVE_DATE\n- PERSON_ID\n- LEGISLATIVE_DATA_GROUP_ID\n\n**Input Values:**\n- IV_ACCRUAL\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n- IV_CALEDARENDDATE\n- IV_CALEDARSTARTDATE\n- IV_EVENT_DATES\n- IV_BAND_CHG_DT1\n- IV_BAND_CHG_BEFVAL1\n- IV_BAND_CHG_AFTVAL1\n- IV_BAND_CHG_DT2\n- IV_BAND_CHG_AFTVAL2\n- IV_BAND_CHG_BEFVAL2\n- IV_BAND_CHG_DT3\n- IV_BAND_CHG_BEFVAL3\n- IV_BAND_CHG_AFTVAL3\n- IV_BAND_CHG_DT4\n- IV_BAND_CHG_AFTVAL4\n- IV_BAND_CHG_BEFVAL4\n- check_start_date\n- check_end_date\n- comp_limit\n- CURR_YR_ST_date\n- CURR_YR_END_date\n\n**Return Type:**\nThe formula returns a character value indicating whether a certain condition related to absence entries and their durations is met.\n\n**Logic Summary:**\n1. The formula starts by setting default values for various database items (DBIs) and initializing input values.\n2. It retrieves the person ID, job name, and other context values.\n3. The formula then loops through each absence entry for the person, checking the absence type, approval status, and dates.\n4. For each absence entry, it checks if the entry's status and approval status meet certain conditions and if the entry's dates fall within a specified period.\n5. Based on the absence type, the formula checks if the duration exceeds a certain limit (comp_limit) and updates the return value accordingly.\n6. For specific absence types like 'Annual Leave' or 'Brought Forward Leave', it performs additional checks considering the duration and the next working day.\n7. The formula continues to loop through absence entries, updating the return value and logging messages until it finds a condition that sets the return value to 'Y' or it has checked all entries.\n8. Finally, the formula returns the value indicating whether the condition was met.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated sick leave accrual for employees in Malaysia based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with local policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used:** PER_ASG_REL_DATE_START\n\n**Input Values:** \n- IV_ACCRUAL \n- IV_ACCRUALPERIODENDDATE \n- IV_ACCRUALPERIODSTARTDATE \n- IV_PLANENROLLMENTSTARTDATE \n- IV_PLANENROLLMENTENDDATE \n- IV_CALEDARENDDATE \n- IV_CALEDARSTARTDATE \n- IV_EVENT_DATES \n- IV_BAND_CHG_DT1 \n- IV_BAND_CHG_BEFVAL1 \n- IV_BAND_CHG_AFTVAL1 \n- IV_BAND_CHG_DT2 \n- IV_BAND_CHG_AFTVAL2 \n- IV_BAND_CHG_BEFVAL2 \n- IV_BAND_CHG_DT3 \n- IV_BAND_CHG_BEFVAL3 \n- IV_BAND_CHG_AFTVAL3 \n- IV_BAND_CHG_DT4 \n- IV_BAND_CHG_AFTVAL4 \n- IV_BAND_CHG_BEFVAL4 \n- l_dm_date \n\n**Return Type:** The formula returns a numeric value representing the accrual amount.\n\n**Logic Summary:** \n1. The formula first checks if the plan enrollment start date matches a specific date (l_dm_date) and if the accrual period start date is before the plan enrollment start date, and also ensures the plan enrollment start date is not the same as the hire date (which defaults to a specific start date if not provided).\n2. If all these conditions are met, the formula sets the accrual to 0.\n3. If the conditions are not met, the formula sets the accrual to the input accrual value (IV_ACCRUAL).\n4. The formula then returns the calculated accrual value. \n\nThis logic essentially determines the accrual amount based on the relationship between key dates related to plan enrollment and accrual periods, with a specific condition setting accrual to 0 under certain circumstances.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates marriage leave applications in Hong Kong. Ensures the duration does not exceed a specified limit (e.g., 3\u20135 days), the leave is applied within a certain period after the marriage date, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:** \n- PER_ASG_DATE_PROBATION_END\n- IV_ATTRIBUTE_DATE1\n- IV_ATTRIBUTE_DATE2\n- PER_ASG_GRADE_NAME\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MARITAL_STATUS\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- PER_ASG_MARITAL_STATUS_DATE\n\n**Input Values:** \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_DATE1\n- IV_ATTRIBUTE_DATE2\n\n**Return Type:** \nThe formula returns a validation status indicated by the variable `VALID`, which can be either 'Y' (valid) or 'N' (not valid), along with an error message and token values when validation fails.\n\n**Logic Summary:** \n1. The formula starts by initializing variables with default or input values, including dates, numbers, and texts.\n2. It checks if the total duration of an absence (leave) is a multiple of 0.5 (half a day); if not, it returns an error message indicating that the leave duration is incorrect.\n3. It retrieves various context values, including an absence entry ID, an HR assignment ID, and a person ID.\n4. Based on the person's ID and manager's ID, it checks the manager's assignment status and ensures it is active.\n5. If the manager's status is not active or if the manager ID is 0, it returns an error related to an inactive manager.\n6. It then checks the marital status of the person and ensures that if the person is married, their marriage registration date is valid and not exceeding one year from the leave start date.\n7. If any of these checks fail, it returns an appropriate error message with a token value explaining the error.\n8. If all checks pass, the formula returns a validation status of 'Y', indicating the input values are valid according to the specified rules.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates the duration of absence plan types for employees in Vietnam based on work schedules and rosters. Determines the duration by comparing entered absence hours to total assigned shift hours, with adjustments for shift patterns. Returns the calculated duration.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: None explicitly mentioned, but the formula uses default values for IV_START_DATE, IV_END_DATE, IV_START_TIME, IV_END_TIME, and PER_ASG_FTE_VALUE.\n* **Input Values**: IV_START_DATE (date), IV_END_DATE (date), IV_START_TIME (text), IV_END_TIME (text), PER_ASG_FTE_VALUE (number).\n* **Return Type**: The formula returns a numeric value representing a duration.\n* **Logic Summary**: \n  1. The formula starts by defining default values for the input parameters, including start and end dates, start and end times, and an FTE (Full-Time Equivalent) value.\n  2. It then constructs a period start and end date by combining the input dates with the input times.\n  3. The formula calculates the entry duration for a given period using the GET_PAY_AVAILABILITY function.\n  4. This duration is then multiplied by the FTE value to get an unrounded duration.\n  5. If the unrounded duration has a fractional part that is not zero or 0.5, the formula rounds it to the nearest half; otherwise, it leaves the value unchanged.\n  6. Finally, the formula returns the resulting duration value, which represents the calculated pay availability for the specified period, adjusted for the FTE value.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated sick leave accrual for employees in China based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with local policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n  - PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n  - PER_ASG_PERSON_NUMBER\n  - EFFECTIVE_DATE\n\n* **Input Values**: \n  - IV_ACCRUAL\n  - IV_BAND_CHG_DT1\n  - IV_BAND_CHG_DT2\n  - IV_BAND_CHG_BEFVAL1\n  - IV_BAND_CHG_AFTVAL1\n  - IV_BAND_CHG_AFTVAL2\n  - IV_BAND_CHG_BEFVAL2\n  - IV_CARRYOVER\n  - IV_CEILING\n  - IV_ACCRUALPERIODSTARTDATE\n  - IV_ACCRUALPERIODENDDATE\n\n* **Return Type**: \n  The formula returns a numeric value representing the final accrual amount after applying certain rules and calculations.\n\n* **Logic Summary**: \n  The formula starts by determining the effective date and calculating term start and end dates based on this effective date. It then calculates two band end dates based on the original date of hire. The formula logs various key values for auditing purposes. \n  It checks if the effective date falls within specific bands (years) after the original date of hire. Depending on the band, it calculates the accrual by considering the number of days within each band and applying different accrual rates. \n  The accrual is then adjusted by applying a floor function to round down to the nearest whole number if the decimal part is less than 0.5, or rounding up if the decimal part is 0.5 or greater. \n  Finally, the formula returns the adjusted accrual amount, which can be used for further processing or decision-making within the system.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates compassionate leave applications in China. Ensures the duration does not exceed 3\u20135 days (based on grade and reason), prohibits overlap between calendar years for non-contract employees, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n  + PER_ASG_DATE_PROBATION_END\n  + PER_ASG_REL_DATE_START\n  + PER_ASG_GRADE_NAME\n  + GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n  + IV_ATTRIBUTE_1\n  + PER_ASG_ACTION_CODE\n  + PER_ASG_JOB_NAME\n  + PER_ASG_USER_PERSON_TYPE\n  + ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  + ANC_ABS_ENTRS_DURATION\n  + ANC_ABS_TYP_NAME\n  + ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  + ANC_ABS_ENTRS_END_DATE\n  + ANC_ABS_ENTRS_START_DATE\n  + ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  + ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  + ANC_ABS_ENTRS_USER_MODE\n  + PER_ASG_MANAGER_USER_PERSON_ID\n  + PER_PER_PERSON_NUMBER\n  + PER_ASG_EMPLOYMENT_CATEGORY\n* **Input Values**: \n  + iv_start_date\n  + iv_end_date\n  + IV_CALEDARSTARTDATE\n  + IV_CALEDARENDDATE\n  + IV_TOTALDURATION\n  + IV_ABSENCE_REASON\n  + IV_ATTRIBUTE_1\n* **Return Type**: The formula returns a validation result, with indicators of validity, error messages, and token values.\n* **Logic Summary**: \n  The formula validates an absence request. Here's a step-by-step breakdown:\n  1. It checks if the duration is a multiple of 0.5 days; if not, it returns an error message.\n  2. It retrieves the foundation person number and checks if it's valid. If not, it sets a default value.\n  3. The formula then checks the manager's assignment status and retrieves their ID. If the manager's status is inactive, it returns an error message.\n  4. Based on the user mode (admin or not), it checks if the absence reason is valid for the corresponding duration. If the duration exceeds the allowed limit for a specific reason, it returns an error message.\n  5. Finally, it checks for overlap between the requested absence period and the calendar year. If there's an overlap, it returns an error message. If all checks pass, it returns a valid response.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates unpaid leave applications in India. Ensures the duration complies with local policies, requires other leave balances (e.g., annual, sick) to be exhausted, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the FastFormula:\n\n**DBI Values Used:** \n- per_asg_date_probation_end\n- per_asg_rel_date_start\n- per_asg_grade_name\n- per_asg_sex\n- global_pay_interface_extraction_date\n- iv_attribute_1\n- per_asg_action_code\n- per_asg_job_name\n- per_asg_user_person_type\n- anc_per_abs_entrs_absence_entry_id_arr\n- anc_abs_entrs_duration\n- anc_abs_typ_name\n- anc_abs_entrs_absence_status_cd\n- anc_abs_entrs_end_date\n- anc_abs_entrs_start_date\n- anc_abs_entrs_absence_type_id\n- anc_abs_entrs_approval_status_cd\n- anc_abs_entrs_user_mode\n- per_asg_manager_user_person_id\n- per_per_person_number\n- per_asg_employment_category\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- iv_caledarstartdate\n- iv_caledarenddate\n- iv_totalduration\n- iv_absence_reason\n- iv_attribute_1\n\n**Return Type:** \nThe formula returns a set of variables including a validity flag (VALID), an error message (ERROR_MESSAGE), and potentially other token names and values depending on the flow of the logic. The main return type of interest is the validity flag which determines if the input or the processed data meets certain criteria.\n\n**Logic Summary:**\nThis FastFormula is designed to validate various conditions related to employee assignments and absences within an organization. The steps can be broadly outlined as follows:\n1. **Initialization**: The formula starts by setting default values for numerous database items (DBIs) and input parameters, which are used throughout the logic.\n2. **Input Validation**: It checks if the duration of absence (iv_totalduration) is in 0.5 incremental units. If not, it sets the validity flag to 'N' (indicating failure) and returns an appropriate error message.\n3. **Person Number Retrieval**: It attempts to retrieve a person number (l_fnd_person_number) and handles cases where this value might be null.\n4. **Manager Assignment and Status**: The formula retrieves the manager's assignment ID and checks their assignment status. It verifies if the manager is active and handles cases where the manager's status is inactive or the manager ID is missing.\n5. **Absence Entry Validation**: Based on the user mode (anc_abs_entrs_user_mode), it checks if the absence start date overlaps with existing absence records within the same year or if the absence request predates a certain cutoff date ('2019/09/23').\n6. **Probation and Leave Balance Check**: For employees still within their probation period, it ensures there are no unpaid leave balances. It also checks for absence overlaps with the current year's leave period.\n7. **Return**: Depending on the outcome of these checks, the formula returns a validity flag along with any relevant error messages. The primary goal is to ensure that absence requests adhere to specific organizational rules and policies.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the accrual and carryover limits for workers enrolled in a vacation plan, adjusting based on their full-time equivalent (FTE) value. Here's the precise business logic:\n\n1. The initial accrual is set to 5 and carryover to 0.\n2. Both accrual and carryover are multiplied by the employee's FTE value.\n3. The accrual is then rounded to the nearest 0.5 increment:\n   - If the decimal part of the accrual is 0, it remains unchanged.\n   - If the decimal part is greater than 0 and less than 0.5, it is rounded up to 0.5.\n   - If the decimal part is 0.5 or more, it is rounded up to the next whole number.\n\nThe formula returns the adjusted accrual and carryover values.\n\n***Instruction for the fastformula***:   * **DBI Values Used**: PER_ASG_GRADE_NAME, PER_ASG_FTE_VALUE\n* **Input Values**: accrual, carryover, prorationFactor, carryOverProration\n* **Return Type**: The formula returns two values: accrual and carryover, both of which are numeric.\n* **Logic Summary**: \n  1. The formula first sets default values for an employee's grade and FTE (Full-Time Equivalent) if they are not provided.\n  2. It then initializes several variables related to accrual and carryover, including a proration factor.\n  3. Next, it adjusts the accrual and carryover based on the employee's FTE value.\n  4. The formula then determines the final accrual amount by evaluating the decimal part of the accrual.\n    - If the decimal part is 0, the final accrual is the whole number part.\n    - If the decimal part is greater than 0 but less than 0.5, the final accrual is rounded up to the next half.\n    - If the decimal part is 0.5 or greater, the final accrual is rounded up to the next whole number.\n  5. Finally, the formula returns the calculated accrual and carryover values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated casual leave accrual for employees in India based on band changes. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with local policies for casual leave. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n    - IV_ACCRUAL \n    - IV_ACCRUALPERIODSTARTDATE \n    - IV_ACCRUALPERIODENDDATE \n    - IV_CALEDARSTARTDATE \n    - IV_CALEDARENDDATE \n    - IV_PLANENROLLMENTSTARTDATE \n    - IV_PLANENROLLMENTENDDATE\n\n* **Input Values**: \n    - IV_ACCRUAL \n    - IV_ACCRUALPERIODSTARTDATE \n    - IV_ACCRUALPERIODENDDATE \n    - IV_CALEDARSTARTDATE \n    - IV_CALEDARENDDATE \n    - IV_PLANENROLLMENTSTARTDATE \n    - IV_PLANENROLLMENTENDDATE\n\n* **Return Type**: \n    The formula returns a numerical value representing the final accrual amount, rounded and adjusted according to specific rules.\n\n* **Logic Summary**: \n    1. The formula starts by checking and setting default values for input parameters if they are not provided.\n    2. It calculates the term duration and participation duration based on the calendar start and end dates, and plan enrollment start and end dates.\n    3. It determines if the plan enrollment end date falls before the calendar end date and adjusts the participation duration accordingly.\n    4. The formula checks for specific conditions to set a flag for the first month.\n    5. It calculates a prorated accrual based on the participation duration and term duration, and applies adjustments based on the first month flag.\n    6. Finally, it rounds and floors the accrual amount, applying specific rules for decimal portions to determine the final accrual value.\n    7. The formula returns this final accrual value as the result.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates cash disbursement or compensation for absence plans for Niaga employees. Determines payment amounts based on absence type, duration, and local policies, ensuring compliance with financial regulations. Returns the calculated disbursement amount.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: PER_PERSON_ENTERPRISE_HIRE_DATE, PER_REL_ORIGINAL_DATE_OF_HIRE, PER_REL_ACTUAL_TERMINATION_DATE, HR_ASSIGNMENT_ID, PERSON_ID, LEGISLATIVE_DATA_GROUP_ID\n* **Input Values**: None (all values are retrieved from context or DBIs)\n* **Return Type**: The formula returns a set of values that define a range: a minimum value, a maximum value, and an increment value, all of which are numeric.\n* **Logic Summary**: The formula starts by checking if the actual termination date has been provided. If it has, the formula sets up the necessary context for the HR assignment and person. It then retrieves the current balance of annual leave and uses this value to define a range. The range is defined by a minimum value of 1, a maximum value equal to the annual leave balance, and an increment of 1. The formula returns this range. If the actual termination date has not been provided, the formula does not perform any calculations and returns a range with a minimum, maximum, and increment all set to 0. Overall, the formula appears to be designed to determine the range of values that can be used to process annual leave for an employee who is being terminated.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated partial period accrual for employees in Hong Kong based on band changes or partial employment periods. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with local policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:** \n- IV_ACCRUAL\n- IV_ACCRUALPERIODSTARTDATE\n- IV_ACCRUALPERIODENDDATE\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_PLANENROLLMENTSTARTDATE\n- IV_PLANENROLLMENTENDDATE\n\n**Input Values:** \n- IV_ACCRUAL (accrual value)\n- IV_ACCRUALPERIODSTARTDATE (accrual period start date)\n- IV_ACCRUALPERIODENDDATE (accrual period end date)\n- IV_CALEDARSTARTDATE (calendar start date)\n- IV_CALEDARENDDATE (calendar end date)\n- IV_PLANENROLLMENTSTARTDATE (plan enrollment start date)\n- IV_PLANENROLLMENTENDDATE (plan enrollment end date)\n\n**Return Type:** \nThe formula returns a numeric value representing the calculated accrual amount.\n\n**Logic Summary:** \nThe formula calculates the accrual amount based on the provided input values. Here's a step-by-step description:\n1. **Initialization**: The formula starts by initializing variables for accrual, same year duration, first month flag, first month accrual, participation duration, and term duration.\n2. **Term Duration Calculation**: It calculates the term duration by finding the difference between the calendar end and start dates in years and months.\n3. **Participation Duration Calculation**: The participation duration is calculated based on the plan enrollment dates and the calendar dates.\n4. **First Month Accrual Calculation**: The first month accrual is calculated by multiplying the accrual value with the participation duration divided by the term duration.\n5. **Prorated Accrual Calculation**: If the plan enrollment end date is less than the calendar end date, the formula checks for conditions to calculate the prorated accrual.\n6. **Accrual Calculation**: The formula then calculates the final accrual amount based on the prorated accrual, first month accrual, and certain conditions.\n7. **Rounding Accrual**: The accrual amount is rounded based on its decimal value to either the nearest whole number or 0.5.\n8. **Return Accrual**: The final calculated accrual amount is returned as the result of the formula.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates inactive leave applications in Cambodia. Ensures the employee\u2019s status allows for inactive leave, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is the summary of the provided FastFormula:\n\n**DBI Values Used:** \n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n- ABSENCE_ENTRY_ID\n- HR_ASSIGNMENT_ID\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- EFFECTIVE_DATE\n\n**Input Values:** \n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_PER_PERSON_NUMBER\n\n**Return Type:** \nThe formula returns multiple values including VALID (a flag indicating whether the conditions are met), ERROR_MESSAGE (a message to be displayed in case of an error), TOKEN_NAME, and TOKEN_VALUE (related to the error message).\n\n**Logic Summary:** \n1. The formula starts by setting default values for certain input parameters if they are not provided.\n2. It retrieves the effective date and sets it as a context for subsequent operations.\n3. It fetches the absence entry ID, HR assignment ID, and sets these as contexts.\n4. Based on these contexts, it determines the user mode and the person number (employee ID) from predefined value sets.\n5. If the person number is found, it changes contexts to the HR assignment ID and the effective date for the current transaction.\n6. It then retrieves the manager's ID based on the current HR assignment.\n7. The formula checks the manager's assignment status and the person ID.\n8. If the user mode is not 'ADMIN' and the current person or manager matches the person number or manager ID, it sets the validation flag to 'N', indicating failure, and prepares an error message.\n9. The formula returns validation status, an error message if any, along with token names and values for the error message. This logic essentially checks for the validity of the user's access to certain leave types based on their role and the transaction's historical context.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates sick leave applications in Cambodia. Ensures the duration does not exceed a specified limit (e.g., 10\u201330 days based on grade), requires a medical certificate for durations over 2 days, checks the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used:**\n- ANC_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_ABS_TYP_NAME\n- ANC_PER_PERSON_NUMBER\n- PER_ASG_EMPLOYMENT_CATEGORY\n- PER_ASG_GRADE_NAME\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_ASG_BARGAINING_UNIT_CODE_NAME\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_ATTRIBUTE7\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- PERSON_ID\n- LEGISLATIVE_DATA_GROUP_ID\n- ABSENCE_ENTRY_ID\n- HR_ASSIGNMENT_ID\n- EFFECTIVE_DATE\n\n**Input Values:**\n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n- IV_ATTRIBUTE_2\n\n**Return Type:**\nThe formula returns a validation result (VALID) which is a text value indicating whether the operation is valid ('Y') or not ('N'), along with an error message and potentially token names and values for more detailed feedback.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by initializing various variables using default values, input values, and values retrieved from the database or context.\n2. **Basic Validation**: It checks for basic conditions such as the start date being before a specific cutoff date, the manager's assignment status, and whether the start date is in the future.\n3. **Absence Type and Duration Validation**: For specific absence types (like Sick Leave), it validates the duration, ensuring it does not exceed a certain limit (e.g., 14 days for certain grades).\n4. **Shift and Duration Validation**: For certain shifts (e.g., 2 Shift, 3 Shift, 7 Days Banking), it checks if the duration can be fractional (and returns an error if so).\n5. **Historical Absence Check**: It looks back at previous absences within a calendar year to calculate total days taken for similar absence types, ensuring the new request doesn't exceed the allowable limit.\n6. **Consecutive Days and Medical Certificate Requirement**: For absences without a medical certificate, it checks for consecutive days and requires a certificate if the duration exceeds one day.\n7. **Final Validation and Error Handling**: If all checks pass, the formula returns a valid status; otherwise, it returns an error message with specific details about the validation failure, including token names and values for customized messages.\n8. **Attachment Validation**: For certain absence reasons and durations, it checks if a medical certificate has been attached and prompts the user to do so if necessary.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates sick leave applications in Cambodia (variant, possibly long-term sick leave). Ensures the duration does not exceed a specified limit (e.g., extended periods based on grade), requires a medical certificate, checks the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***:   #### DBI Values Used:\n- `PERSON_ID`\n- `LEGISLATIVE_DATA_GROUP_ID`\n- `ABSENCE_ENTRY_ID`\n- `EFFECTIVE_DATE`\n- `PER_ASG_USER_PERSON_TYPE`\n- `PER_ASG_GRADE_NAME`\n- `PER_ASG_EMPLOYMENT_CATEGORY`\n\n#### Input Values:\n- `iv_start_date`\n- `iv_end_date`\n- `IV_CALEDARSTARTDATE`\n- `IV_CALEDARENDDATE`\n- `IV_TOTALDURATION`\n- `IV_ABSENCE_REASON`\n\n#### Return Type:\nThe formula returns a validation result, which includes a boolean value (`VALID`) indicating whether the input parameters are valid, an `ERROR_MESSAGE` if the validation fails, and optionally, `TOKEN_NAME` and `TOKEN_VALUE` for specific error messages.\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by initializing various default values for dates, durations, and flags. It retrieves the person ID, legislative data group ID, absence entry ID, and effective date from the context.\n2. **Input Validation**: It checks the user mode and if it's not 'ADMIN', proceeds with further validations based on the employee's grade, shift, and absence duration.\n3. **Absence Duration Checks**: The formula checks for half-day absences, ensuring they are not allowed for certain shifts, and validates if the duration is a multiple of 0.5 days. It also checks if the requested absence duration exceeds the available sick leave limit.\n4. **Absence Reason Validation**: For 'Medical Leave Without Certificate', it checks if the absence is for more than one day and validates against existing absences within the current year.\n5. **Overlap and Balance Checks**: The formula checks for overlaps with existing absences and ensures that the employee has sufficient sick leave balance.\n6. **Certificate Requirement**: If the absence reason is not 'Medical Leave Without Certificate', it checks if a sick leave certificate is attached.\n7. **Return Validation Result**: Based on the validation checks, the formula returns a boolean indicating whether the input is valid, accompanied by an error message if the input is invalid, and optionally, token details for custom error messages.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Determines the enrollment end date for brought forward leave (BFL) plans for employees in the UK. Uses the employee\u2019s actual termination date if available, otherwise defaults to the context end date or a specific policy date. Returns the calculated enrollment end date.\n\n***Instruction for the fastformula***: ### Summary of the Provided FastFormula\n\n- **DBI Values Used**: \n  - `GET_CURRENT_DATE`\n  - `GLOBAL_PAY_INTERFACE_EXTRACTION_DATE`\n\n- **Input Values**: \n  - No explicit input values are defined within the formula; it utilizes default values for DBIs.\n\n- **Return Type**: \n  - The formula returns a `DATE` value, specifically representing an enrollment end date.\n\n- **Logic Summary**: \n  1. The formula starts by determining the current date and extracts the current year from it.\n  2. It then constructs two key dates based on the current year: a start date (January 1st of the current year) and an end date (April 30th of the current year).\n  3. The formula retrieves a global pay interface extraction date but doesn't directly use it for calculation; instead, it focuses on determining an enrollment end date.\n  4. The enrollment end date is set as the end of April of the current year, disregarding the actual extraction date provided.\n  5. Finally, the formula returns this calculated enrollment end date.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates the total duration of paternity leave based on various conditions. Here is the precise business logic:\n\n1. If the user mode is not 'ADMIN' and the person number matches the found person number or the manager ID matches the found person number ID, the following checks are performed:\n   - If the union is 'Association of Bank Officers, Peninsular Malaysia (ABOM)', 'National Union of Bank Employees (NUBE)', or 'Sabah Banking Employees Union (SABAHBEU)', the validation fails with an error message to select Paternity Leave (Calendar Days).\n   - If the grade is 'EQ.1', 'EQ.2', 'EQ.3', or 'EQ.4', the validation fails with an error message to select Paternity Leave (Calendar Days).\n   - If the manager assignment status is not 'ACTIVE' or the manager ID is 0, the validation fails with an error message indicating an inactive manager.\n   - If the shift is '2 Shift', '3 Shift', or '7 Days Banking' and the duration is not a whole number, the validation fails with an error message indicating that half-day leave is not allowed.\n   - If the duration is not a multiple of 0.5, the validation fails with an error message indicating an error with half-day leave.\n   - If the duration exceeds the sick leave limit of 5 days, the validation fails with an error message indicating the paternity leave entitlement per occasion.\n\n2. The formula iterates through each absence entry within the specified date range and checks if the absence type is 'Paternity Leave - 1st Time Father', 'Paternity Leave', or 'Compassionate Leave' with a specific reason ID. If the absence entry is not withdrawn, saved, or denied, the number of first days is incremented.\n\n3. If the total sick leave days exceed the limit of 5 days, the validation fails with an error message indicating the utilized days of paternity leave.\n\n4. If the start date of the leave is before the start of the year and the end date is on or after the start of the year, or if the start date is on or before the end of the year and the end date is after the end of the year, and the assignment category is not 'CONTRACT', the validation fails with an error message indicating that leave cannot overlap between two calendar years.\n\nThe formula returns a validation flag and an error message if any of these conditions are met.\n\n***Instruction for the fastformula***: Here is a summary of the provided FastFormula:\n\n**DBI Values Used:** \n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- PER_ASG_REL_DATE_START\n- PER_ASG_REL_ACTUAL_TERMINATION_DATE\n- ANC_ABS_ENTRS_ABSENCE_REASON_ID\n- PER_ASG_USER_PERSON_TYPE\n- PER_ASG_GRADE_NAME\n- PER_ASG_EMPLOYMENT_CATEGORY\n- ANC_ABS_ENTRS_USER_MODE\n- PER_ASG_MANAGER_USER_PERSON_ID\n- PER_ASG_BARGAINING_UNIT_CODE_NAME\n- PER_ASG_ATTRIBUTE7\n- PER_PER_PERSON_NUMBER\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n\n**Input Values:** \n- iv_start_date\n- iv_end_date\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n- IV_TOTALDURATION\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n- IV_ATTRIBUTE_2\n\n**Return Type:** \nThe formula returns a validation result, including a validity flag (VALID), an error message (ERROR_MESSAGE), and additional token values (TOKEN_NAME, TOKEN_VALUE) in case of errors.\n\n**Logic Summary:** \nThis FastFormula validates an employee's request for paternity leave. Here's a step-by-step breakdown:\n1. **Initialization**: The formula starts by initializing various variables with default values, including absence entry IDs, dates, employee details, and leave duration.\n2. **Absence Type and Grade Validation**: It checks the employee's grade name and absence type to determine if they are eligible for paternity leave.\n3. **Manager Status Check**: The formula verifies the manager's assignment status to ensure they are active.\n4. **Leave Duration Validation**: It checks if the requested leave duration is valid (whole or half days) and does not exceed the allowed limit.\n5. **Leave History Check**: The formula reviews the employee's leave history to ensure they have not exceeded the allowed number of paternity leave days in the current year.\n6. **Date Overlap Check**: It checks for any overlap between the requested leave dates and existing leaves or contract periods.\n7. **Error Handling**: If any validation checks fail, the formula returns an error message with a corresponding token value.\n8. **Validation Result**: Finally, the formula returns a validation result, indicating whether the leave request is valid or not, along with any applicable error messages or token values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates paternity working days leave applications in the UK. Ensures the duration complies with local policies, prohibits overlap between calendar years, checks the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is the summary of the provided FastFormula:\n\n* **DBI Values Used**: GET_CURRENT_DATE, GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n* **Input Values**: None\n* **Return Type**: Date\n* **Logic Summary**: \n    1. The formula starts by getting the current date and extracting the year from it.\n    2. It then constructs a start date by combining the extracted year with a fixed date of January 1st.\n    3. Additionally, it constructs an effective end date by combining the extracted year with a fixed date of May 1st.\n    4. The formula also converts a globally defined pay interface extraction date to a standard date format.\n    5. However, the converted extraction date is not used in determining the final output.\n    6. The formula ultimately returns the constructed start date, which represents the enrollment start date, as a date value. \n\nThis summary provides an overview of the logic and components involved in the FastFormula without delving into the specific code details.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Determines the enrollment start date for brought forward leave (BFL) plans for employees in the UK. Uses the employee\u2019s hire date, plan enrollment date, or a specific policy date, ensuring compliance with local regulations. Returns the calculated enrollment start date.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: PER_ASG_DATE_PROBATION_END, PER_ASG_REL_DATE_START, PER_ASG_REL_ACTUAL_TERMINATION_DATE, PER_ASG_GRADE_NAME, GLOBAL_PAY_INTERFACE_EXTRACTION_DATE, IV_ATTRIBUTE_1, PER_ASG_ACTION_CODE, PER_ASG_JOB_NAME, PER_ASG_POSITION_NAME, PER_ASG_USER_PERSON_TYPE, PER_ASG_EMPLOYMENT_CATEGORY, ANC_ABS_ENTRS_USER_MODE, PER_ASG_MANAGER_USER_PERSON_ID, PER_PER_PERSON_NUMBER, PER_ASG_ATTRIBUTE7, PER_ASG_BARGAINING_UNIT_CODE_NAME\n* **Input Values**: IV_START_DATE, IV_END_DATE, IV_CALEDARSTARTDATE, IV_CALEDARENDDATE, IV_TOTALDURATION, IV_ABSENCE_REASON, IV_ATTRIBUTE_1\n* **Return Type**: The formula returns a combination of values, including a validation flag (VALID), an error message (ERROR_MESSAGE), and token values (TOKEN_NAME and TOKEN_VALUE) if the validation fails.\n* **Logic Summary**: \n  1. The formula starts by setting default values for various database items (DBIs) and input values.\n  2. It then retrieves the person number and HR assignment ID from the context and checks if the person number is not null.\n  3. Based on the user mode, it checks the manager's assignment status and the person number to determine if the input is valid.\n  4. If the input is invalid, it returns an error message and sets the validation flag to 'N'.\n  5. If the input is valid, it checks the next working day and the pay availability for that day.\n  6. If the pay availability is less than 1, it increments the next working day until it finds a day with pay availability greater than or equal to 1.\n  7. Finally, it checks if the next working day is greater than or equal to the start date, and if so, returns an error message and sets the validation flag to 'N'.\n  8. The formula uses various functions, such as GET_VALUE_SET, GET_CONTEXT, and ADD_DAYS, to perform these checks and calculations.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Calculates prorated annual leave accrual for employees under the NCC MS (National Cash & Carry Management System) in the UK. Restricts accrual during unpaid, maternity, emergency, or Hajj leave, adjusts for absence days, and aligns with local policies. Returns the accrual value and adjustments.\n\n***Instruction for the fastformula***:   \n\n### DBI Values Used\nThe following database items (DBIs) are referenced in the formula:\n- `PER_ASG_REL_ORIGINAL_DATE_OF_HIRE`\n- `ABS_EXT_ACR_END_BAL`\n- `PER_ASG_PERSON_NUMBER`\n- `UDT_Val`\n- `PER_ASG_GRADE_ATTRIBUTE1`\n- `PER_ASG_WORKING_HOURS`\n- `PER_ASG_STANDARD_WORKING_HOURS`\n- `HWP_EMP_WORKING_HOURS`\n- `PER_ASG_ATTRIBUTE_NUMBER1`\n- `PER_ASG_CONTRACT_ATTRIBUTE_DATE1`\n- `PER_PERSON_ENTERPRISE_HIRE_DATE`\n- `ACP_HIRE_DATE`\n- `PER_HIST_ASG_ASSIGNMENT_ID`\n- `PER_ASG_WORK_TERMS_ASSIGNMENT_ID`\n- `PER_ASG_EFFECTIVE_END_DATE`\n- `PER_ASG_EFFECTIVE_START_DATE`\n- `PER_ASG_REL_DATE_START`\n- `PER_ASG_REL_LENGTH_OF_SERVICE_NEW`\n- `PER_HIST_ASG_EFFECTIVE_START_DATE`\n- `PER_ASG_REL_ACTUAL_TERMINATION_DATE`\n- `PER_PER_ENTERPRISE_TERMINATION_DATE`\n- `PER_HIST_ASG_ACT_REASON_CODE`\n- `ANC_ABS_PLN_WS_CATEGORY_CD`\n- `PER_ASG_WORK_SCH_WORKDAY_PATTERN`\n- `PER_ASG_ASSIGNMENT_ID`\n- `PER_ASG_ATTRIBUTE7`\n- `PER_ASG_ATTRIBUTE_NUMBER4`\n- `PER_ASG_ASSIGNMENT_NUMBER`\n- `PER_ASG_GRADE_NAME`\n- `PER_LEGAL_EMPLOYER_NAME`\n- `PER_ASG_ASSIGNMENT_STATUS_TYPE`\n- `PER_GRADE_STEP_NAME`\n- `PER_PER_BASIC_ATTRIBUTE_DATE1`\n- `PER_ASG_REL_ATTRIBUTE_DATE1`\n\n### Input Values\nThe following input values are defined in the formula:\n- `IV_ACCRUALPERIODSTARTDATE` (date)\n- `IV_ACCRUALPERIODENDDATE` (date)\n- `IV_CALEDARSTARTDATE` (date)\n- `IV_CALEDARENDDATE` (date)\n- `IV_PLANENROLLMENTSTARTDATE` (date)\n- `IV_PLANENROLLMENTENDDATE` (date)\n- `IV_CARRYOVER` (number)\n\n### Return Type\nThe formula returns two values: `accrual` and `carryover`, both of which are numeric values representing the calculated accrual and carryover amounts, respectively.\n\n### Logic Summary\nThe formula calculates the annual leave accrual for employees based on their length of service, grade, and other factors. Here's a step-by-step summary of the logic:\n1. **Initialization**: The formula starts by initializing various variables, including default values for database items and input parameters.\n2. **Effective Date Check**: It checks if the calendar start date is before the migration date (April 1, 2020). If true, no calculation is performed, and the accrual is set to 0.\n3. **Accrual Period**: The formula then determines the accrual period based on the input dates (`IV_ACCRUALPERIODSTARTDATE` and `IV_ACCRUALPERIODENDDATE`).\n4. **Length of Service Calculation**: It calculates the length of service for the employee, considering the reckonable service date and continuous service date.\n5. **Accrual Rate Determination**: The formula determines the accrual rate based on the length of service, grade, and other factors using a table (`EMG_NCC_MS_BU_ANNUAL_LEAVE`).\n6. **Accrual Calculation**: It calculates the accrual amount based on the accrual rate, FTE (full-time equivalent), and the number of days in the accrual period.\n7. **Carryover Calculation**: The formula calculates the carryover amount based on the accrual amount, FTE, and the carryover limit.\n8. **Return Values**: Finally, the formula returns the calculated accrual and carryover amounts.\n\nThe logic involves various conditional statements, loops, and calculations to determine the accrual and carryover amounts accurately based on the employee's details and input parameters.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Validates paternity absence applications in the UK with custom rules. Ensures the employee has worked at least 3 months, the leave start date is within a specified period after the child\u2019s birth, prohibits leave during probation, verifies the manager\u2019s active status, and restricts applications before a specific date (e.g., September 2019). Returns a validity status with an error message if invalid.\n\n***Instruction for the fastformula***: Here is a summary of the Oracle FastFormula:\n\n**DBI Values Used:** \nThe formula uses several default values for dates, including PER_ASG_REL_ORIGINAL_DATE_OF_HIRE, PER_ASG_REL_ACTUAL_TERMINATION_DATE, PER_ASG_DATE_OF_DEATH, IV_START_DATE, IV_END_DATE, IV_TOTALDURATION, IV_START_DURATION, IV_END_DURATION, IV_ACTUALCHILDBIRTHDATE, IV_ACTUALSTARTDATE, IV_ACTUALENDDATE, IV_EXPECTEDCHILDBIRTHDATE, IV_PLANNEDSTARTDATE, IV_PLANNEDENDDATE, IV_INFORMATION_DATE1, IV_INFORMATION_DATE2, IV_INFORMATION_DATE3, IV_INFORMATION_DATE4, and IV_MATCHING_DATE. It also uses ANC_ABS_TYP_MAP_EVENT_TYPE_CODE.\n\n**Input Values:** \nThe input values are IV_START_DATE, IV_END_DATE, IV_TOTALDURATION, IV_START_DURATION, IV_END_DURATION, IV_ACTUALCHILDBIRTHDATE, IV_ACTUALSTARTDATE, IV_ACTUALENDDATE, IV_EXPECTEDCHILDBIRTHDATE, IV_PLANNEDSTARTDATE, IV_PLANNEDENDDATE, IV_INFORMATION_DATE1, IV_INFORMATION_DATE2, IV_INFORMATION_DATE3, IV_INFORMATION_DATE4, and IV_MATCHING_DATE.\n\n**Return Type:** \nThe formula returns a validation result, including a validation flag (VALID), an error code (ERROR_CODE), and an error message (ERROR_MESSAGE).\n\n**Logic Summary:** \nThe formula performs the following steps:\n1. It checks the event type (ANC_ABS_TYP_MAP_EVENT_TYPE_CODE) and performs specific validations based on the event type (CHB or PLC).\n2. For the CHB event type, it checks if the expected child birth date is provided and if the planned start date is before the expected child birth date. If so, it returns an error.\n3. For both CHB and PLC event types, it checks if the actual child birth date is provided and if the actual start date is before the actual child birth date. If so, it returns an error.\n4. It then checks if the start date is before the placement date (either expected child birth date or actual child birth date) and returns an error if so.\n5. Next, it calculates the number of days between the end date and start date and checks if the number of days is valid (7, 14, or between 1 and 13). If not, it returns an error.\n6. Finally, the formula returns the validation result, including the validation flag, error code, and error message.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the accrual, ceiling, and carryover of leave based on the employee's length of service and the accrual plan they are enrolled in. The formula first determines the length of service by calculating the number of days between the hire date and the effective date, then converts write a  to years.\n\nThe formula checks if the employee's citizenship code is not 'SA'. If the employee's grade is between 1 and 6 and their length of service is more than 2 years, or if the grade is 7 or 8 and the length of service is more than 1 year, or if the grade is 9A, 9B, 9C, 10, 11, or 12, the formula retrieves the accrual value from a table based on the grade and sets the carryover to 5000.\n\nThe formula then counts the number of dependents (infants, children, and others) and calculates the total accrual based on the number of dependents. It also checks for any dependent exit re-entry tickets and adjusts the accrual accordingly.\n\nFinally, the formula iterates through the employee's absence entries and adjusts the accrual if the absence type is 'Annual Leave' and the absence status is not 'ORA_WITHDRAWN'. If the absence attribute is 'Both', it further adjusts the accrual based on the number of tickets for adults, children, and infants.\n\nThe final accrual and carryover values are returned.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:**\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- ANC_ABS_PLN_NAME\n- ANC_ABS_PLN_PLAN_UOM\n- PER_PER_CITIZENSHIP_LEG_CODE\n- PER_ASG_GRADE_NAME\n- PER_ASG_ATTRIBUTE8\n- PER_ASG_REL_ACCEPTED_TERMINATION_DATE\n- PAY_EARN_PERIOD_END\n- PAY_EARN_PERIOD_START\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_ATTRIBUTE4\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- PER_EXT_CONT_PER_PERSON_ID\n- PER_PER_DOR_DOCUMENT_TYPE_NAME\n- PER_PER_DOR_DEI_ATTRIBUTE_NUMBER1\n- PER_PER_DOR_DEI_ATTRIBUTE_NUMBER2\n- PER_PER_DOR_DEI_ATTRIBUTE_NUMBER3\n- PER_EXT_CONT_DATE_OF_BIRTH\n- PER_EXT_CONT_FIRST_NAME\n- PER_EXT_CONT_CONTACT_TYPE\n- PER_PER_CONTACT_ATTRIBUTE1\n- ANC_ABS_ENTRS_ATTRIBUTE_NUMBER4\n- ANC_ABS_ENTRS_ATTRIBUTE_NUMBER5\n- ANC_ABS_ENTRS_ATTRIBUTE_NUMBER6\n\n**Input Values:**\n- IV_ACCRUAL\n- Effective Date\n\n**Return Type:**\nThe formula returns two values: accrual and carryover, both of which are numeric values.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by initializing various variables with default values, including dates, codes, and numbers. It sets up inputs such as the accrual and effective date.\n2. **Calculating Length of Service**: It calculates the length of service (in years) by subtracting the original date of hire from the effective date.\n3. **Determine Accrual Based on Grade**: Depending on the employee's grade and length of service, it determines the accrual rate and carryover limit.\n4. **Counting Dependents**: The formula loops through the employee's contacts to count the number of dependents, including infants, children, and adults.\n5. **Adjusting Accrual Based on Dependents and Tickets**: It adjusts the accrual based on the number of dependents and any existing tickets (e.g., for annual leave).\n6. **Checking Absence Entries**: The formula then checks absence entries for the employee, specifically looking for annual leave that has not been withdrawn.\n7. **Finalizing Accrual**: Based on the absence entries and other factors, it finalizes the accrual amount, ensuring it does not exceed the carryover limit and adjusting for any used tickets.\n8. **Returning Accrual and Carryover**: Finally, the formula returns the calculated accrual and carryover values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula is designed to validate the total duration of unpaid leave an employee can take within a five-year period. It checks the total duration of unpaid leave, including the current request and any previously approved or submitted unpaid leave within the last five years. If the total duration exceeds 90 days, the formula sets the validation status to 'N' (not valid) and provides an error message indicating that the employee is only eligible for 90 days of unpaid leave in five years. If the total duration is within the 90-day limit, the validation status is set to 'Y' (valid).\n\n***Instruction for the fastformula***: Here is the structured summary of the provided Oracle FastFormula:\n\n* **DBI Values Used**: ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR, ANC_ABS_ENTRS_ABSENCE_TYPE_ID, ANC_ABS_TYP_NAME, ANC_ABS_ENTRS_DURATION, ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n* **Input Values**: IV_START_DATE (date), IV_END_DATE (date), IV_TOTALDURATION (number)\n* **Return Type**: The formula returns two values: VALID (a character indicating whether the absence days are valid or not) and ERROR_MESSAGE (a character string for any potential error messages)\n* **Logic Summary**: \n  1. The formula initializes default values for various absence-related variables.\n  2. It then extracts the start year from the input start date and calculates the previous year's start and end dates.\n  3. Within the calculated date range, it iterates through each absence entry, checking if the absence type is 'Unpaid Leave' and if its status is either 'SUBMITTED' or 'APPROVED'.\n  4. For each valid absence entry found, it adds the duration to a running total of approved absence days.\n  5. The formula then calculates the total applicable absence days by adding the input total duration and the approved absence days.\n  6. Finally, it checks if the total applicable absence days are less than or equal to 90 and returns 'Y' (yes) if valid, along with any potential error messages. The logic is designed to validate the total absence days against a predefined threshold.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula validates the number of days an employee can apply for leave within a year, ensuring compliance with specific rules and restrictions. The formula checks the total duration of leave taken within a five-year period and ensures it does not exceed 90 days. It also verifies that the employee does not have any remaining annual leave balance before approving unpaid leave. Additionally, the formula restricts leave applications if the employee has completed one year of service or if the leave dates fall within a specific restricted period (April to December) and the user is not authorized to make changes during write a  period. The formula returns a validation status and an error message if any of the conditions are not met.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: \n  + PER_PERSON_ENTERPRISE_HIRE_DATE\n  + PER_ASG_LEGAL_ENTITY_ID\n  + PER_ASG_Position_NAME\n  + PER_Position_NAME\n  + PER_Position_FUNCTION_CODE\n  + PER_ASG_GRADE_NAME\n  + ACP_HIRE_DATE\n  + ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  + ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  + ANC_ABS_ENTRS_DURATION\n  + ANC_ABS_ENTRS_START_DATE\n  + ANC_ABS_TYP_NAME\n  + PER_ASG_PEOPLE_GROUP_SEGMENT1\n  + ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  + PER_ASG_DATE_PROBATION_END\n  + ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  + PERSON_ID\n  + HR_ASSIGNMENT_ID\n  + HR_TERM_ID\n  + effective_date\n\n* **Input Values**: \n  + iv_start_date\n  + iv_end_date\n\n* **Return Type**: The formula returns two values: `VALID` (a string indicating whether the process is valid or not) and `ERROR_MESSAGE` (a string containing the error message if any).\n\n* **Logic Summary**: \n  1. The formula initializes various default values and input parameters, including dates and IDs.\n  2. It sets up the context for the absence entries and retrieves necessary information such as absence type ID, people group, and assignment details.\n  3. The formula calculates the first leave date based on the absence entries and the hire date.\n  4. It then determines the start and end dates for the leave period, taking into account the leave duration and the start date.\n  5. The formula calculates the total duration of the leave and logs the eligible duration, previous duration, and total duration.\n  6. It checks if the annual leave balance is greater than 1 and sets the validity accordingly.\n  7. The formula also checks if the start date is within a specific range (between April and December) and if the user is not a specific HR user, it sets the validity to 'N' and provides an error message.\n  8. Finally, the formula returns the validity and error message (if any). The overall logic is designed to validate and process leave requests based on various conditions and rules.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula is designed to calculate the proration factor for leave accrual. The proration factor is set to 1, indicating that there is no proration applied, and the full leave accrual is granted regardless of the employee's hire or termination dates. write a  formula ensures that employees receive their full leave entitlement without any adjustments based on their length of service or other factors.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: PER_ASG_REL_ORIGINAL_DATE_OF_HIRE, PER_ASG_REL_ACTUAL_TERMINATION_DATE, ANC_ABS_PLN_NAME, ANC_ABS_PLN_PLAN_UOM\n* **Input Values**: None\n* **Return Type**: Numeric value representing a proration factor\n* **Logic Summary**: The formula starts by setting default values for certain database items, such as original date of hire and actual termination date, to a specific date, and absence plan name and unit of measure to specific values. Then, it defines a proration factor variable and assigns it a value of 1. The formula returns this proration factor value, indicating that no complex calculations are performed and the proration factor is simply set to 1. Overall, the formula appears to be setting default values and returning a constant proration factor, potentially for use in further calculations or processing.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the accrual, ceiling, and carryover of leave based on the employee's length of service and the accrual plan they are enrolled in. The formula first determines the length of service by calculating the number of days between the hire date and the effective date, then converts write a  to years.\n\nThe formula checks if the employee's citizenship code is not 'SA'. If the employee's grade is between 1 and 6 and their length of service is more than 2 years, or if the grade is 7 or 8 and the length of service is more than 1 year, or if the grade is 9A, 9B, 9C, 10, 11, or 12, the formula retrieves the accrual value from a table based on the grade and sets the carryover to 5000.\n\nThe formula then counts the number of dependents (infants, children, and others) and calculates the total accrual based on the number of dependents. It also checks for any dependent ticket requests and adjusts the accrual accordingly.\n\nFinally, the formula iterates through the employee's absence entries and adjusts the accrual if the absence type is 'Annual Leave' and the absence status is not 'ORA_WITHDRAWN'. If the absence attribute is 'Employee only' or 'Both', it further adjusts the accrual based on the number of tickets for adults, children, and infants.\n\nThe final accrual and carryover values are returned.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n  - PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n  - ANC_ABS_PLN_NAME\n  - ANC_ABS_PLN_PLAN_UOM\n  - PER_PER_CITIZENSHIP_LEG_CODE\n  - PER_ASG_GRADE_NAME\n  - PER_ASG_ATTRIBUTE8\n  - PER_ASG_REL_ACCEPTED_TERMINATION_DATE\n  - PAY_EARN_PERIOD_END\n  - PAY_EARN_PERIOD_START\n  - ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  - ANC_ABS_ENTRS_ATTRIBUTE7\n  - ANC_ABS_TYP_NAME\n  - ANC_ABS_ENTRS_START_DATE\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - PER_EXT_CONT_PER_PERSON_ID\n  - PER_PER_DOR_DOCUMENT_TYPE_NAME\n  - PER_PER_DOR_DEI_ATTRIBUTE_NUMBER1\n  - PER_PER_DOR_DEI_ATTRIBUTE_NUMBER2\n  - PER_PER_DOR_DEI_ATTRIBUTE_NUMBER3\n  - PER_EXT_CONT_DATE_OF_BIRTH\n  - PER_EXT_CONT_FIRST_NAME\n  - PER_EXT_CONT_CONTACT_TYPE\n  - PER_PER_CONTACT_ATTRIBUTE1\n\n* **Input Values**: \n  - IV_ACCRUAL\n  - l_no_of_days\n  - l_length_of_service\n  - l_start_date\n  - l_end_date\n  - effdate\n  - effyear\n  - accrual\n  - carryover\n  - l_count\n  - l_infant_count\n  - l_child_count\n\n* **Return Type**: The formula returns two values: `accrual` and `carryover`, both of which are numeric values representing the calculated accrual and carryover amounts.\n\n* **Logic Summary**: \n  1. The formula starts by calculating the length of service for an employee based on their original date of hire.\n  2. It then checks the employee's citizenship, grade, and length of service to determine if they are eligible for accrual.\n  3. If eligible, the formula retrieves the accrual amount from a table based on the employee's grade and calculates the carryover amount.\n  4. The formula then loops through the employee's contacts to count the number of adults, children, and infants.\n  5. It also checks for dependent ticket requests and retrieves the corresponding ticket amounts.\n  6. The formula then loops through the employee's absence entries to check for annual leave and updates the accrual amount accordingly.\n  7. Finally, the formula returns the calculated accrual and carryover amounts. The logic is based on various conditional checks and loops to determine the correct accrual and carryover amounts for an employee.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the proration factor for leave accrual based on the employee's hire and termination dates within the current month and year. If the employee's hire date falls within the current month and year, the formula prorates the leave based on the number of days worked in that month. Similarly, if the termination date falls within the current month and year, the formula prorates the leave based on the number of days worked up to the termination date. If neither condition is met, the proration factor is set to 1, indicating no proration. write a  ensures that the leave accrual is accurately adjusted based on the employee's hire and termination dates.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: \n  - PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n  - PER_ASG_REL_ACTUAL_TERMINATION_DATE\n  - ANC_ABS_PLN_NAME\n  - ANC_ABS_PLN_PLAN_UOM\n  - EFFECTIVE_DATE\n\n* **Input Values**: \n  - '4712/12/31 00:00:00' (default date value)\n  - 'A' (default value for ANC_ABS_PLN_NAME)\n  - 'D' (default value for ANC_ABS_PLN_PLAN_UOM)\n\n* **Return Type**: \n  The formula returns a numeric value representing a proration factor.\n\n* **Logic Summary**: \n  This formula calculates a proration factor based on an employee's original date of hire, actual termination date, and the current effective date. \n  1. It first determines the length of service in days and extracts the year and month from the original date of hire, actual termination date, and the effective date.\n  2. If the absence plan name is 'Annual Leave Plan', it checks if the hire year and month match the current year and month.\n  3. If they match, it calculates the proration factor based on the days between the last day of the hire month and the original date of hire.\n  4. If the termination year and month match the current year and month, it calculates the proration factor based on the days between the actual termination date and the first day of the terminate month.\n  5. If neither condition is met, it sets the proration factor to 1.0.\n  6. The calculated proration factor is then returned as the result.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula validates the number of days an employee can apply for leave within a year, ensuring compliance with specific rules and restrictions. The formula checks the total duration of leave taken within a year and ensures it meets the following conditions:\n\nIf the leave duration is less than 12 days and the reason is related to salary advance (e.g., \"Local with Salary Advance,\" \"External with Salary Advance,\" etc.), the leave is not eligible for salary advance.\nIf the employee's citizenship is \"Saudi Arabia\" and the reason involves a ticket (e.g., \"External with Ticket,\" \"External with Ticket & Exit Re-entry,\" etc.), the leave is not eligible for a ticket.\nThe formula returns a validation status and an error message if any of the conditions are not met\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n  + PER_PERSON_ENTERPRISE_HIRE_DATE\n  + PER_ASG_LEGAL_ENTITY_ID\n  + PER_ASG_Position_NAME\n  + PER_Position_NAME\n  + PER_Position_FUNCTION_CODE\n  + PER_ASG_GRADE_NAME\n  + ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  + ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  + ANC_ABS_ENTRS_DURATION\n  + ANC_ABS_TYP_NAME\n  + PER_ASG_PEOPLE_GROUP_SEGMENT1\n  + ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  + PER_ASG_DATE_PROBATION_END\n  + ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  + PER_PER_CITIZENSHIP_LEG_NAME\n* **Input Values**: \n  + iv_start_date\n  + iv_end_date\n  + IV_ABSENCE_REASON\n* **Return Type**: The formula returns two values: VALID (a flag indicating whether the leave is valid or not) and ERROR_MESSAGE (a message describing the error if the leave is not valid).\n* **Logic Summary**: \n  1. The formula starts by setting default values for various database items (DBIs) related to employee leave and assignment details.\n  2. It then takes three input values: the start and end dates of the leave and the reason for the leave.\n  3. The formula calculates the duration of the leave and checks if the employee is eligible for the leave based on their citizenship and the type of leave.\n  4. It then checks the leave duration and absence type to determine if the employee is eligible for salary advance or ticket reimbursement.\n  5. If the employee's citizenship is 'Saudi Arabia', the formula checks if they are eligible for tickets.\n  6. Based on these checks, the formula sets the VALID flag to 'Y' (yes) or 'N' (no) and returns an error message if the leave is not valid.\n  7. The formula uses various Oracle functions such as TO_DATE, TO_CHAR, DAYS_BETWEEN, and ESS_LOG_WRITE to perform calculations and log messages.\n  8. The formula also uses a WHILE loop to iterate through an array of absence entry IDs and calculate the total duration of previous absences.\n  9. Finally, the formula returns the VALID flag and an error message (if any) to indicate whether the leave is valid or not.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula validates the total duration of unpaid leave an employee can take within a five-year period. It checks the total duration of unpaid leave, including the current request and any previously approved or submitted unpaid leave within the last five years. If the total duration exceeds 90 days, the formula sets the validation status to 'N' (not valid) and provides an error message indicating that the employee is only eligible for 90 days of unpaid leave in five years. If the total duration is within the 90-day limit, the validation status is set to 'Y' (valid). \n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n  + ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  + ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  + ANC_ABS_TYP_NAME\n  + ANC_ABS_ENTRS_DURATION\n  + ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  + ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n  + PER_ASG_WORK_TERMS_ASSIGNMENT_ID\n  + HR_ASSIGNMENT_ID\n  + PERSON_ID\n  + LEGISLATIVE_DATA_GROUP_ID\n  + EFFECTIVE_DATE\n\n* **Input Values**: \n  + IV_START_DATE (date)\n  + IV_END_DATE (date)\n  + IV_TOTALDURATION (number)\n\n* **Return Type**: The formula returns two values: a validation flag (VALID) of type character and an error message (ERROR_MESSAGE) of type string.\n\n* **Logic Summary**: \n  1. Initialize default values for various absence-related database items and input parameters.\n  2. Extract the assignment ID, work term assignment ID, person ID, and legislative data group ID from the context.\n  3. Calculate the start year by subtracting 5 from the start date year and determine the start and end dates of the relevant period.\n  4. Iterate through absence entries for the calculated period, checking if each entry is for 'Unpaid Leave' and if its status is completed, submitted, or approved.\n  5. Accumulate the duration of approved absence days.\n  6. Calculate the total applicable absence days by adding the approved absence days to the total duration.\n  7. Validate if the total applicable absence days exceed 90; if so, set the validation flag to 'N' and return an error message indicating the eligibility limit for unpaid leave.\n  8. Return the validation flag and error message, indicating whether the input data is valid or not.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the accrual, ceiling, and carryover of leave based on the employee's length of service and the accrual plan they are enrolled in. The formula first determines the length of service by calculating the number of days between the hire date and the effective date, then converts write a  to years.\n\nThe formula checks if the employee's citizenship code is not 'SA'. If the employee's grade is between 1 and 6 and their length of service is more than 2 years, or if the grade is 7 or 8 and the length of service is more than 1 year, or if the grade is 9A, 9B, 9C, 10, 11, or 12, the formula retrieves the accrual value from a table based on the grade and sets the carryover to 5000.\n\nAdditionally, if the employee's grade is S2, S1, I2, I1, M4, M3, M2, M1, E2, or E1, the formula retrieves the accrual value from a table based on the grade and sets the carryover to 5000.\n\nThe formula then counts the number of dependents (infants, children, and others) and calculates the total accrual based on the number of dependents. It also checks for any dependent ticket requests and adjusts the accrual accordingly.\n\nThe final accrual and carryover values are returned.\n\n***Instruction for the fastformula***: Here is the summary of the provided FastFormula:\n\n**DBI Values Used:** \n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- ANC_ABS_PLN_NAME\n- ANC_ABS_PLN_PLAN_UOM\n- PER_PER_CITIZENSHIP_LEG_CODE\n- PER_ASG_GRADE_NAME\n- PER_ASG_ATTRIBUTE8\n- PER_ASG_REL_ACCEPTED_TERMINATION_DATE\n- PAY_EARN_PERIOD_END\n- PAY_EARN_PERIOD_START\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_ATTRIBUTE7\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- PER_EXT_CONT_PER_PERSON_ID\n- PER_PER_DOR_DOCUMENT_TYPE_NAME\n- PER_PER_DOR_DEI_ATTRIBUTE_NUMBER1\n- PER_PER_DOR_DEI_ATTRIBUTE_NUMBER2\n- PER_PER_DOR_DEI_ATTRIBUTE_NUMBER3\n- PER_EXT_CONT_DATE_OF_BIRTH\n- PER_EXT_CONT_FIRST_NAME\n- PER_EXT_CONT_CONTACT_TYPE\n- PER_PER_CONTACT_ATTRIBUTE1\n\n**Input Values:** \n- IV_ACCRUAL\n\n**Return Type:** \nThe formula returns two values: accrual and carryover, which are both numeric.\n\n**Logic Summary:** \nThis FastFormula calculates the accrual and carryover values for an employee based on their grade, length of service, and other parameters. The logic involves the following steps:\n1. Calculate the length of service by subtracting the original date of hire from the current effective date.\n2. Determine the employee's grade and check if it falls within specific categories (e.g., '1' to '6', '7' or '8', '9A' to '12', etc.).\n3. Based on the grade and length of service, retrieve the accrual value from a table named 'Ticket' and set the carryover value to 5000.\n4. If the employee has dependents, count the number of adults, children, and infants.\n5. If there are dependent tickets requested, retrieve the ticket values for adults, children, and infants.\n6. Finally, return the calculated accrual and carryover values. Note that the carryover value is reset to 0 before being returned.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the accrual, ceiling, and carryover of leave based on the employee's length of service and the accrual plan they are enrolled in. The formula first determines the length of service by calculating the number of days between the hire date and the effective date, then converts write a  to years.\n\nThe formula checks if the employee's citizenship code is not 'SA'. If the employee's grade is between 1 and 6 and their length of service is more than 2 years, or if the grade is 7 or 8 and the length of service is more than 1 year, or if the grade is 9A, 9B, 9C, 10, 11, or 12, the formula retrieves the accrual value from a table based on the grade and sets the carryover to 0.\n\nAdditionally, if the employee's grade is S2, S1, I2, I1, M4, M3, M2, M1, E2, or E1, the formula retrieves the accrual value from a table based on the grade and sets the carryover to 0.\n\nThe formula then counts the number of dependents (infants, children, and others) and calculates the total accrual based on the number of dependents. It also checks for any dependent ticket requests and adjusts the accrual accordingly.\n\nFinally, the formula iterates through the employee's absence entries and adjusts the accrual if the absence type is 'Annual Leave' and the absence status is not 'ORA_WITHDRAWN'. If the absence attribute is 'Both', it further adjusts the accrual based on the number of tickets for adults, children, and infants.\n\nThe final accrual and carryover values are returned.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n  + PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n  + ANC_ABS_PLN_NAME\n  + ANC_ABS_PLN_PLAN_UOM\n  + PER_PER_CITIZENSHIP_LEG_CODE\n  + PER_ASG_GRADE_NAME\n  + PER_ASG_ATTRIBUTE8\n  + PER_ASG_REL_ACCEPTED_TERMINATION_DATE\n  + PAY_EARN_PERIOD_END\n  + PAY_EARN_PERIOD_START\n  + ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  + ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  + ANC_ABS_ENTRS_ATTRIBUTE7\n  + ANC_ABS_TYP_NAME\n  + ANC_ABS_ENTRS_START_DATE\n  + ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  + PER_EXT_CONT_PER_PERSON_ID\n  + PER_PER_DOR_DOCUMENT_TYPE_NAME\n  + PER_PER_DOR_DEI_ATTRIBUTE_NUMBER1\n  + PER_PER_DOR_DEI_ATTRIBUTE_NUMBER2\n  + PER_PER_DOR_DEI_ATTRIBUTE_NUMBER3\n  + PER_PER_DOR_DEI_ATTRIBUTE_NUMBER4\n  + PER_EXT_CONT_DATE_OF_BIRTH\n  + PER_EXT_CONT_FIRST_NAME\n  + PER_EXT_CONT_CONTACT_TYPE\n  + PER_PER_CONTACT_ATTRIBUTE1\n  + ANC_ABS_ENTRS_ATTRIBUTE_NUMBER1\n  + ANC_ABS_ENTRS_ATTRIBUTE_NUMBER2\n  + ANC_ABS_ENTRS_ATTRIBUTE_NUMBER3\n\n* **Input Values**: \n  + Effective Date\n  + PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n  + PER_PER_CITIZENSHIP_LEG_CODE\n  + PER_ASG_GRADE_NAME\n  + PER_EXT_CONT_PER_PERSON_ID\n  + PER_EXT_CONT_DATE_OF_BIRTH\n  + PER_EXT_CONT_CONTACT_TYPE\n  + PER_PER_DOR_DOCUMENT_TYPE_NAME\n  + PER_PER_DOR_DEI_ATTRIBUTE_NUMBER1\n  + PER_PER_DOR_DEI_ATTRIBUTE_NUMBER2\n  + PER_PER_DOR_DEI_ATTRIBUTE_NUMBER3\n  + ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  + ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  + ANC_ABS_ENTRS_START_DATE\n  + ANC_ABS_TYP_NAME\n  + ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  + ANC_ABS_ENTRS_ATTRIBUTE7\n  + ANC_ABS_ENTRS_ATTRIBUTE_NUMBER1\n  + ANC_ABS_ENTRS_ATTRIBUTE_NUMBER2\n  + ANC_ABS_ENTRS_ATTRIBUTE_NUMBER3\n\n* **Return Type**: The formula returns two values: `accrual` and `carryover`, both of which are numeric.\n\n* **Logic Summary**: \n  1. The formula calculates the length of service based on the effective date and the original date of hire.\n  2. It then checks the citizenship and grade of the employee to determine the accrual rate.\n  3. The formula loops through the employee's contacts to count the number of dependents (infants, children, and adults).\n  4. It retrieves the number of tickets (adult, child, and infant) from the document type 'Dependent Ticket Request'.\n  5. The accrual rate is then adjusted based on the number of dependents and tickets.\n  6. The formula loops through the absence entries to check for annual leave and adjusts the accrual rate accordingly.\n  7. Finally, the formula returns the adjusted accrual rate and carryover value. \n\nThis summary should provide a clear understanding of the formula's logic without including the actual code.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the proration factor for leave accrual based on the employee's hire and termination dates within the current month and year. If the employee's hire date falls within the current month and year, the formula prorates the leave based on the number of days worked in that month. Similarly, if the termination date falls within the current month and year, the formula prorates the leave based on the number of days worked up to the termination date. If neither condition is met, the proration factor is set to 1, indicating no proration. write a  ensures that the leave accrual is accurately adjusted based on the employee's hire and termination dates.\n\n***Instruction for the fastformula***: **Summary of FastFormula**\n\n* **DBI Values Used**: PER_ASG_REL_ORIGINAL_DATE_OF_HIRE, PER_ASG_REL_ACTUAL_TERMINATION_DATE, ANC_ABS_PLN_NAME, ANC_ABS_PLN_PLAN_UOM, EFFECTIVE_DATE\n* **Input Values**: ANC_ABS_PLN_NAME, PER_ASG_REL_ORIGINAL_DATE_OF_HIRE, PER_ASG_REL_ACTUAL_TERMINATION_DATE, EFFECTIVE_DATE\n* **Return Type**: The formula returns a numeric value representing a proration factor.\n* **Logic Summary**: \n  1. The formula calculates the number of days between the effective date and the original date of hire.\n  2. It extracts the year, month, and day from the original date of hire, actual termination date, and effective date.\n  3. If the absence plan name is 'Annual Leave Plan', it checks if the hire year and month match the current year and month.\n  4. If they match, it calculates the proration factor based on the days between the last day of the hire month and the original date of hire.\n  5. If the hire year and month do not match, it checks if the termination year and month match the current year and month.\n  6. If they match, it calculates the proration factor based on the days between the actual termination date and the first day of the termination month.\n  7. If neither condition is met, it sets the proration factor to 1.0.\n  8. The formula returns the calculated proration factor, which represents the proportion of the year or month that the employee has worked.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the accrual, ceiling, and carryover of leave based on the employee's length of service and the accrual plan they are enrolled in. The formula first determines the length of service by calculating the number of days between the hire date and the effective date, then converts write a  to years.\n\nThe formula checks if the employee's citizenship code is not 'SA'. If the employee's grade is between 1 and 6 and their length of service is more than 2 years, or if the grade is 7 or 8 and the length of service is more than 1 year, or if the grade is 9A, 9B, 9C, 10, 11, or 12, the formula retrieves the accrual value from a table based on the grade and sets the carryover to 5000.\n\nAdditionally, if the employee's grade is S2, S1, I2, I1, M4, M3, M2, M1, E2, or E1, the formula retrieves the accrual value from a table based on the grade and sets the carryover to 5000.\n\nThe formula then counts the number of dependents (infants, children, and others) and calculates the total accrual based on the number of dependents. It also checks for any dependent exit re-entry tickets and adjusts the accrual accordingly.\n\nFinally, the formula iterates through the employee's absence entries and adjusts the accrual if the absence type is 'Annual Leave' and the absence status is not 'ORA_WITHDRAWN'. If the absence attribute is 'Employee Only' or 'Both', it further adjusts the accrual based on the number of tickets for adults, children, and infants.\n\nThe final accrual and carryover values are returned.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n  - PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n  - ANC_ABS_PLN_NAME\n  - ANC_ABS_PLN_PLAN_UOM\n  - PER_PER_CITIZENSHIP_LEG_CODE\n  - PER_ASG_GRADE_NAME\n  - PER_ASG_ATTRIBUTE8\n  - PER_ASG_REL_ACCEPTED_TERMINATION_DATE\n  - PAY_EARN_PERIOD_END\n  - PAY_EARN_PERIOD_START\n  - ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  - ANC_ABS_ENTRS_ATTRIBUTE4\n  - ANC_ABS_TYP_NAME\n  - ANC_ABS_ENTRS_START_DATE\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - PER_EXT_CONT_PER_PERSON_ID\n  - PER_PER_DOR_DOCUMENT_TYPE_NAME\n  - PER_PER_DOR_DEI_ATTRIBUTE_NUMBER1\n  - PER_PER_DOR_DEI_ATTRIBUTE_NUMBER2\n  - PER_PER_DOR_DEI_ATTRIBUTE_NUMBER3\n  - PER_EXT_CONT_DATE_OF_BIRTH\n  - PER_EXT_CONT_FIRST_NAME\n  - PER_EXT_CONT_CONTACT_TYPE\n  - PER_PER_CONTACT_ATTRIBUTE1\n\n* **Input Values**: \n  - IV_ACCRUAL\n  - l_no_of_days\n  - l_length_of_service\n  - l_start_date\n  - l_end_date\n  - effdate\n  - effyear\n  - accrual\n  - carryover\n\n* **Return Type**: The formula returns two values: `accrual` of type number and `carryover` of type number.\n\n* **Logic Summary**: \n  1. The formula calculates the number of days between the effective date and the original date of hire to determine the length of service.\n  2. Based on the length of service and the employee's grade, it calculates the accrual and carryover values.\n  3. It checks for certain conditions such as citizenship, grade, and attributes to determine if the employee is eligible for accrual and carryover.\n  4. The formula then loops through the employee's contacts to count the number of infants, children, and adults.\n  5. It also checks for dependent exit re-entry documents to update the ticket values for adults, children, and infants.\n  6. The formula then loops through the absence entries to check for annual leave and updates the accrual value accordingly.\n  7. Finally, it returns the calculated accrual and carryover values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula validates the total duration of sick leave an employee can take within a year. It checks the total duration of sick leave, including the current request and any previously approved or submitted sick leave within the current year. If the total duration exceeds 120 days, the formula sets the validation status to 'N' (not valid) and provides an error message indicating that the employee is only eligible for 120 days of sick leave in a year. If the total duration is within the 120-day limit, the validation status is set to 'Y' (valid).\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used**: \n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR \n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_TYP_NAME\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n\n**Input Values**: \n- IV_START_DATE (date)\n- IV_END_DATE (date)\n- IV_TOTALDURATION (number)\n\n**Return Type**: \nThe formula returns two values: a validation flag (VALID) which is a character, and an error message (ERROR_MESSAGE) which is also a character string.\n\n**Logic Summary**: \n1. The formula initializes several variables with default or input values, including dates and durations.\n2. It calculates the start and end dates of the year based on the input start date.\n3. It then iterates through an array of absence entries for the given year, checking each entry's absence type name.\n4. If the absence type is 'Sick Leave' and its status is either 'SUBMITTED' or 'APPROVED', it accumulates the approved absence days.\n5. After iterating through all entries, it calculates the total applicable absence days by adding the input total duration to the approved absence days found.\n6. If the total applicable absence days exceed 120 days, it sets a validation flag to 'N' (not valid) and generates an error message indicating that only 120 days of Sick Leave are eligible per year.\n7. Finally, the formula returns the validation flag and the error message.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula validates the number of days an employee can apply for leave within a year, ensuring compliance with specific rules and restrictions. The formula includes several key validations:\n\nDuration of Leave: The leave duration must be at least one day.\nSaudi and Non-Saudi Validation: Saudi employees and certain non-Saudi employees cannot apply for annual leave with specific reasons such as \"External with Ticket,\" \"External with Exit Re-entry,\" etc. They must change the leave reason to \"Local\" or \"Local with Salary Advance.\"\nWork Schedule Validation: The formula checks if the leave starts or ends one day before or after a weekend based on the employee's work schedule. If there is already a leave ending or starting on the weekend, the new leave cannot be applied.\nTicket Balance Validation: The formula validates the ticket balance for employees applying for leave with reasons involving tickets. Employees cannot apply for tickets before completing one year in the organization. Additionally, employees cannot apply for tickets for themselves or their dependents more than once in the contractual year.\nThe formula returns a validation status and an error message if any of the conditions are not met.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used:** \n- PER_PERSON_ENTERPRISE_HIRE_DATE\n- PER_ASG_LEGAL_ENTITY_ID\n- PER_ASG_Position_NAME\n- PER_Position_NAME\n- ACP_HIRE_DATE\n- PER_Position_FUNCTION_CODE\n- PER_ASG_GRADE_NAME\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_DURATION\n- ANC_ABS_TYP_NAME\n- PER_ASG_PEOPLE_GROUP_SEGMENT1\n- ANC_ABS_ENTRS_END_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- PER_ASG_DATE_PROBATION_END\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- PER_WORK_SCHEDULE_EXCEPTION_CODE\n- PER_WORK_SCHEDULE_EXCEPTION_MEANING\n- PER_WORK_SCHEDULE_EXCEPTION_LOOKUP_MEANING\n- PER_EXT_CAL_COVERAGE_START_DATE_TIME\n- PER_EXT_CAL_COVERAGE_END_DATE_TIME\n- PER_EXT_CAL_COVERAGE_COVERAGE_NODE\n- IV_ABSENCE_REASON\n- ANC_ABS_ENTRS_ABSENCE_REASON_ID\n- ANC_ABS_ENTRS_ATTRIBUTE1\n- IV_ATTRIBUTE_1\n- PER_ASG_ATTRIBUTE12\n- PER_PER_PERSON_NUMBER\n\n**Input Values:** \n- iv_start_date\n- iv_end_date\n- IV_ABSENCE_REASON\n- IV_ATTRIBUTE_1\n\n**Return Type:** \nThe formula returns a validation result (VALID) which is either 'Y' (valid) or 'N' (not valid) along with an optional error message.\n\n**Logic Summary:** \n1. The formula starts by setting default values for various database items (DBIs) if they are not provided.\n2. It then processes the input start and end dates to determine the duration of the leave.\n3. Based on the leave type and employee's citizenship, the formula checks for specific rules related to leave applications, such as restrictions on applying for certain types of leave.\n4. The formula also checks if the leave start or end dates coincide with existing leaves, ensuring that there are no overlaps.\n5. It then calculates the total duration of leave taken within a specific period and checks if the employee has already applied for a certain type of leave within that period.\n6. Additional checks are performed for specific conditions such as applying for leaves with tickets before completing one year in the organization.\n7. If any of the checks fail, the formula returns 'N' along with a relevant error message; otherwise, it returns 'Y'.\n8. Throughout the process, the formula utilizes various functions to manipulate dates, retrieve data from the database, and perform calculations to determine the validity of the leave application.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the accrual, ceiling, and carryover of leave based on the employee's length of service, grade, and citizenship. The formula first determines the length of service by calculating the number of days between the hire date and the effective date, then converts write a  to years.\n\nThe formula checks the employee's grade and citizenship to determine the accrual rate, ceiling, and carryover. For grades 1 to 6, if the employee is a Saudi citizen with less than 5 years of service, the accrual is 28 days per year. If the service is more than 5 years, the accrual is 30 days per year. For non-Saudi citizens, the accrual is 21 days per year for less than 5 years of service and 30 days per year for more than 5 years of service. The ceiling and carryover are set to 10000 and 5000, respectively, for less than 5 years of service, and 12000 and 6000 for more than 5 years of service.\n\nFor grades 7 and 8, the accrual is 28 days per year for less than 5 years of service and 30 days per year for more than 5 years of service, with the same ceiling and carryover values as above.\n\nFor grades 9A, 9B, and 9C, if the hire date is before March 1, 2010, and the employee is a Saudi citizen, the accrual is 30 days per year plus an additional 5 days for every 10 years of service. For non-Saudi citizens, the accrual is 30 days per year. The ceiling and carryover are set to 12000 and 6000, respectively.\n\nFor grades 10A, 10B, 10C, 11, and 12, if the hire date is before March 1, 2010, and the employee is a Saudi citizen, the accrual is 40 days per year plus an additional 5 days for every 10 years of service. For non-Saudi citizens, the accrual is 40 days per year for grades 10A, 10B, and 10C, and 44 days per year for grades 11 and 12. The ceiling and carryover are set to 12000 and 6000, respectively.\n\nIf the employee has a specific attribute or grade 'RS', the accrual is set to 30 days per year, with a ceiling of 12000 and carryover of 6000.\n\nIf the accrual exceeds 2.5 days per month and the employee does not have an exception flag, the accrual is capped at 2.5 days per month, with a ceiling of 12000 and carryover of 6000.\n\nThe final accrual, ceiling, and carryover values are returned.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: PER_ASG_REL_ORIGINAL_DATE_OF_HIRE, ANC_ABS_PLN_NAME, ANC_ABS_PLN_PLAN_UOM, PER_ASG_PERSON_NUMBER, PER_PER_CITIZENSHIP_LEG_CODE, PER_ASG_GRADE_NAME, PER_ASG_ATTRIBUTE8, PER_ASG_REL_ACCEPTED_TERMINATION_DATE, PAY_EARN_PERIOD_END, PAY_EARN_PERIOD_START\n* **Input Values**: PER_ASG_PERSON_NUMBER, PER_PER_CITIZENSHIP_LEG_CODE, PER_ASG_GRADE_NAME, PER_ASG_ATTRIBUTE8, PER_ASG_REL_ORIGINAL_DATE_OF_HIRE, PER_ASG_REL_ACCEPTED_TERMINATION_DATE\n* **Return Type**: The formula returns three values: accrual, ceiling, and carryover, all of which are numeric.\n* **Logic Summary**: \n  1. Calculate the length of service in years based on the original date of hire.\n  2. Determine the payroll month and year based on the effective date.\n  3. Check if the hire month and year match the payroll month and year, and if so, calculate the number of days between the hire date and the payroll date.\n  4. Check if the termination month and year match the payroll month and year, and if so, use the termination date to calculate the number of days.\n  5. Retrieve an exception flag from a table based on the employee's person number.\n  6. Apply different accrual rules based on the employee's grade, citizenship, and length of service.\n  7. If the employee's grade is between 1 and 6, apply specific accrual rates based on their citizenship and length of service.\n  8. If the employee's grade is 7 or 8, apply a standard accrual rate.\n  9. If the employee's grade is 9A, 9B, or 9C, apply a specific accrual rate based on their hire date and citizenship.\n  10. If the employee's grade is 10A, 10B, 10C, 11, or 12, apply a specific accrual rate based on their hire date and citizenship.\n  11. If the employee has a specific attribute or grade, apply a standard accrual rate.\n  12. If the calculated accrual rate exceeds a certain threshold and no exception flag is set, cap the accrual rate at a maximum value.\n  13. Return the calculated accrual rate, ceiling, and carryover values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the accrual, ceiling, and carryover of leave based on the employee's length of service, grade, and citizenship. The formula first determines the length of service by calculating the number of days between the hire date and the effective date, then converts write a  to years.\n\nThe formula checks the employee's grade and citizenship to determine the accrual rate, ceiling, and carryover. For grades 1 to 6, if the employee is a Saudi citizen with less than 5 years of service, the accrual is 28 days per year. If the service is more than 5 years, the accrual is 30 days per year. For non-Saudi citizens, the accrual is 21 days per year for less than 5 years of service and 30 days per year for more than 5 years of service. The ceiling and carryover are set to 10000 and 5000, respectively, for less than 5 years of service, and 12000 and 6000 for more than 5 years of service.\n\nFor grades 7 and 8, the accrual is 28 days per year for less than 5 years of service and 30 days per year for more than 5 years of service, with the same ceiling and carryover values as above.\n\nFor grades 9A, 9B, and 9C, if the hire date is before March 1, 2010, and the employee is a Saudi citizen, the accrual is 30 days per year plus an additional 5 days for every 10 years of service. For non-Saudi citizens, the accrual is 30 days per year. The ceiling and carryover are set to 12000 and 6000, respectively.\n\nFor grades 10A, 10B, 10C, 11, and 12, if the hire date is before March 1, 2010, and the employee is a Saudi citizen, the accrual is 40 days per year plus an additional 5 days for every 10 years of service. For non-Saudi citizens, the accrual is 40 days per year for grades 10A, 10B, and 10C, and 44 days per year for grades 11 and 12. The ceiling and carryover are set to 12000 and 6000, respectively.\n\nIf the employee has a specific attribute or grade (e.g., PER_ASG_ATTRIBUTE8='Yes' or PER_ASG_GRADE_NAME='RS'), the accrual is set to 30 days per year, with a ceiling of 12000 and carryover of 6000.\n\nIf the employee has an exception flag and a specific exception value, the accrual is set to the exception value, with a ceiling of 12000 and carryover of 6000.\n\nIf the accrual exceeds 2.5 days per month and the employee does not have an exception flag, the accrual is capped at 2.5 days per month, with a ceiling of 12000 and carryover of 6000.\n\nThe formula also adjusts the accrual based on the number of unpaid leave days taken within the accrual period. The final accrual, ceiling, and carryover values are returned.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used**: \n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_ASG_PERSON_NUMBER\n- PER_PER_CITIZENSHIP_LEG_CODE\n- PER_ASG_GRADE_NAME\n- PER_ASG_ATTRIBUTE8\n- PER_ASG_REL_ACCEPTED_TERMINATION_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_END_DATE\n- PAY_EARN_PERIOD_END\n- PAY_EARN_PERIOD_START\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_TYP_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- ACP_HIRE_DATE\n- IV_ACCRUALPERIODENDDATE\n- Exception_Flag\n- Exception_value\n\n**Input Values**:\n- IV_START_DATE\n- IV_END_DATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_ACCRUALPERIODENDDATE\n- IV_CALEDARSTARTDATE\n- IV_CALEDARENDDATE\n\n**Return Type**: The formula returns three values: accrual, ceiling, and carryover, which represent the calculated accrual amount, the maximum allowed accrual (ceiling), and the amount that can be carried over, respectively.\n\n**Logic Summary**:\n1. The formula starts by calculating the length of service based on the original date of hire and the current effective date.\n2. It then checks the grade name and citizenship of the employee to determine the accrual rate, ceiling, and carryover.\n3. The formula applies different accrual rules based on the employee's grade, length of service, and citizenship.\n4. If the employee has an exception flag, the formula uses the exception value to calculate the accrual.\n5. The formula also takes into account any absence days and calculates the accrual provided after deducting the absence days.\n6. Finally, the formula returns the calculated accrual amount, ceiling, and carryover.\n7. Throughout the calculation process, the formula logs various values for auditing and debugging purposes.\n8. The daily accrual rate is calculated by dividing the accrual amount by the total number of days in the accrual period.\n9. The formula ensures that the accrual amount does not exceed the maximum allowed accrual (ceiling) and applies any necessary adjustments.\n10. The final accrual amount is then calculated based on the daily accrual rate and the number of days in the accrual period, taking into account any absence days.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the accrual, ceiling, and carryover of leave based on the employee's length of service, grade, and citizenship. The formula first determines the length of service by calculating the number of days between the hire date and the effective date, then converts write a  to years.\n\nThe formula checks the employee's grade and citizenship to determine the accrual rate, ceiling, and carryover. For grades 1 to 6, if the employee is a Saudi citizen with less than 5 years of service, the accrual is 28 days per year. If the service is more than 5 years, the accrual is 30 days per year. For non-Saudi citizens, the accrual is 21 days per year for less than 5 years of service and 30 days per year for more than 5 years of service. The ceiling and carryover are set to 10000 and 5000, respectively, for less than 5 years of service, and 12000 and 6000 for more than 5 years of service.\n\nFor grades 7 and 8, the accrual is 28 days per year for less than 5 years of service and 30 days per year for more than 5 years of service, with the same ceiling and carryover values as above.\n\nFor grades 9A, 9B, and 9C, if the hire date is before March 1, 2010, and the employee is a Saudi citizen, the accrual is 30 days per year plus an additional 5 days for every 10 years of service. For non-Saudi citizens, the accrual is 30 days per year. The ceiling and carryover are set to 12000 and 6000, respectively.\n\nFor grades 10A, 10B, 10C, 11, and 12, if the hire date is before March 1, 2010, and the employee is a Saudi citizen, the accrual is 40 days per year plus an additional 5 days for every 10 years of service. For non-Saudi citizens, the accrual is 40 days per year for grades 10A, 10B, and 10C, and 44 days per year for grades 11 and 12. The ceiling and carryover are set to 12000 and 6000, respectively.\n\nIf the employee has a specific attribute or grade 'RS', the accrual is set to 30 days per year, with a ceiling of 12000 and carryover of 6000.\n\nThe final accrual, ceiling, and carryover values are returned.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:**\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- ANC_ABS_PLN_NAME\n- ANC_ABS_PLN_PLAN_UOM\n- PER_ASG_PERSON_NUMBER\n- PER_PER_CITIZENSHIP_LEG_CODE\n- PER_ASG_GRADE_NAME\n- PER_ASG_ATTRIBUTE8\n- PER_ASG_REL_ACCEPTED_TERMINATION_DATE\n- PAY_EARN_PERIOD_END\n- PAY_EARN_PERIOD_START\n- EFFECTIVE_DATE\n\n**Input Values:**\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_ASG_PERSON_NUMBER\n- PER_PER_CITIZENSHIP_LEG_CODE\n- PER_ASG_GRADE_NAME\n- PER_ASG_ATTRIBUTE8\n- PER_ASG_REL_ACCEPTED_TERMINATION_DATE\n\n**Return Type:**\nThe formula returns three values: accrual, ceiling, and carryover, all related to leave entitlements, which are numeric in nature.\n\n**Logic Summary:**\nThe formula calculates an employee's leave accrual, ceiling, and carryover based on various conditions. Here\u2019s a step-by-step overview:\n1. **Initial Calculations**: It calculates the number of days between the effective date and the employee's original date of hire, then determines the length of service in years.\n2. **Date Components Extraction**: It extracts day, month, and year components from the effective date, original date of hire, and accepted termination date.\n3. **Hire and Termination Month Validation**: If the hire month and year match the payroll month and year, it calculates the hire month days. Similarly, if the termination month and year match the payroll month and year, it updates the calculation based on termination days.\n4. **Grade-Based Accrual Rules**: The formula applies different accrual rules based on the employee's grade. For grades 1 through 6, it checks citizenship and length of service to determine accrual rates. For grades 7 and 8, it applies another set of rules based on the length of service.\n5. **Special Grade Rules**: For certain grades (9A, 9B, 9C, 10A, 10B, 10C, 11, 12), it checks the hire date against a specific threshold ('2010/03/01') and applies different accrual rules based on citizenship and length of service.\n6. **Attribute-Based Rule**: If a specific attribute (PER_ASG_ATTRIBUTE8) is 'Y' or the grade is 'RS', it applies a standard accrual rule.\n7. **Return Values**: Finally, the formula returns the calculated accrual, ceiling, and carryover values based on the conditions met.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the accrual rate for an employee's absence based on their hire and termination dates within the current month and year. The formula determines the number of days between the employee's hire date and the current effective date to calculate the length of service.\n\nIf the employee's termination date falls within the current month and year, the formula adjusts the accrual rate based on the proportion of days worked in that month. Similarly, if the hire date falls within the current month and year, the formula adjusts the accrual rate based on the proportion of days worked since the hire date. If both the hire and termination dates fall within the current month and year, the formula adjusts the accrual rate based on the number of days worked between the hire and termination dates.\n\nThe final accrual rate is then multiplied by the input accrual value to determine the total accrual for the period.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: PER_ASG_REL_ORIGINAL_DATE_OF_HIRE, PER_ASG_REL_ACTUAL_TERMINATION_DATE, ANC_ABS_PLN_NAME, ANC_ABS_PLN_PLAN_UOM\n* **Input Values**: IV_ACCRUAL, IV_CALEDARSTARTDATE, IV_CALEDARENDDATE\n* **Return Type**: The formula returns a numeric value representing the calculated accrual.\n* **Logic Summary**: \n  1. The formula first calculates the number of days between the employee's original date of hire and the current effective date.\n  2. It then checks if the termination date falls within the same month as the current effective date. If so, it calculates the accrual based on the number of days worked in the month of termination.\n  3. If the hire date falls within the same month as the current effective date, it calculates the accrual based on the number of days worked since hire.\n  4. If both the hire and termination dates fall within the same month as the current effective date, it calculates the accrual based on the number of days worked between hire and termination.\n  5. The formula then multiplies the calculated accrual by the input accrual value (IV_ACCRUAL) to determine the final accrual amount.\n  6. Throughout the calculation process, the formula logs various values and messages to track the logic flow and intermediate calculations.\n  7. Finally, the formula returns the calculated accrual amount as a numeric value.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the duration of an absence, excluding weekends and holidays. It first determines the total number of days between the start and end dates of the absence. Then, it iterates through a predefined list of holidays and subtracts the number of holidays that fall within the absence period from the total duration. The final duration is the total number of days minus the number of holidays. write a  ensures that the absence duration accurately reflects the number of working days the employee is absent.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n  - EFFECTIVE_DATE\n  - HOLIDAYS (an array of dates)\n  - IV_START_DATE\n  - IV_END_DATE\n  - Default dates for demo_date, date_start, and initial values for num1, num2, and l_holiday_days\n\n* **Input Values**: \n  - IV_START_DATE\n  - IV_END_DATE\n  - An array of dates stored in HOLIDAYS\n\n* **Return Type**: \n  - The formula returns a numeric value representing the duration between two dates, adjusted for holidays.\n\n* **Logic Summary**: \n  The formula calculates the number of working days between a start date (IV_START_DATE) and an end date (IV_END_DATE), excluding holidays. Here's a step-by-step breakdown:\n  1. **Initialize Variables**: It starts by getting the current effective date and determining the day of the week.\n  2. **Calculate Initial Duration**: The initial duration is calculated as the total number of days between the start and end dates, plus one.\n  3. **Adjust for Weekends**: Initially, the formula checks for weekends but does not adjust the duration based on the day of the week in the given code. However, it sets up a variable to track holiday days.\n  4. **Loop Through Days**: It iterates through each day in the duration, checking if the day matches any holiday in the provided array of holidays.\n  5. **Count Holidays**: If a match is found, it increments the count of holiday days.\n  6. **Adjust Duration for Holidays**: Finally, it subtracts the total number of holiday days from the initial duration to get the adjusted duration, which is then returned as the result.\n  This process effectively gives the number of working days between two dates, excluding weekends is not considered but holidays are excluded as per the given holiday list.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  fast formula calculates the duration of an absence, excluding holidays. It first determines the total number of days between the start and end dates of the absence. Then, it iterates through a predefined list of holidays and subtracts the number of holidays that fall within the absence period from the total duration. The final duration is the total number of days minus the number of holidays. write a  ensures that the absence duration accurately reflects the number of working days the employee is absent.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: None (all inputs and variables are defined within the formula)\n* **Input Values**: \n  + IV_START_DATE (date)\n  + IV_END_DATE (date)\n  + holidays (array of dates)\n  + l_holiday_days (number)\n  + num1 and num2 are not used in the formula, but are defined as default inputs\n* **Return Type**: The formula returns a number representing the duration between two dates, excluding holidays.\n* **Logic Summary**: \n  1. The formula starts by getting the current effective date from the context and checks if it's a Sunday. However, this check does not affect the outcome as both the if and else conditions set the duration to 0.\n  2. It then calculates the duration between the start and end dates (inclusive) by adding 1 to the difference between the two dates.\n  3. The formula then iterates over each day in the calculated duration, checking if that day matches any holiday in the provided holidays array.\n  4. If a match is found, it increments a counter for holiday days.\n  5. After checking all days, it subtracts the total holiday days from the initial duration.\n  6. Finally, the formula returns the adjusted duration, which is the total number of days between the start and end dates, minus the holidays.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the duration of an absence while excluding the dates July 10, 2022, July 11, 2022, July 12, 2022, and July 13, 2022. It first determines the total number of days between the start and end dates of the absence. Then, it checks if any of these dates fall within the absence period and subtracts those days from the total duration. The final duration is the total number of days minus the excluded dates. write a  ensures that the absence duration accurately reflects the number of working days the employee is absent, excluding the specified dates.\n\n\n***Instruction for the fastformula***: **Summary**\n\n* **DBI Values Used**: No database items (DBIs) are explicitly referenced in this formula. All values are defined within the formula itself or passed as inputs.\n* **Input Values**: \n  - `IV_START_DATE` (date) with a default value of '0001/01/01 00:00:00'\n  - `IV_END_DATE` (date) with a default value of '0001/01/01 00:00:00'\n* **Return Type**: The formula returns a numeric value representing a duration.\n* **Logic Summary**: \n  1. The formula starts by setting default values for the start and end dates if they are not provided.\n  2. It defines specific dates (`l_z`, `l_a`, `l_b`, `l_c`) within the formula.\n  3. It calculates the duration between the start and end dates (inclusive) and stores it in `l_duration`.\n  4. The formula then checks if each of the defined specific dates falls within the range of the start and end dates.\n  5. For each specific date that falls within this range, it subtracts one day from the calculated duration.\n  6. Finally, the adjusted duration is returned as the result, effectively giving the number of days between the start and end dates, excluding any of the specified dates if they are within that range.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the duration of an absence while excluding the dates July 10, 2022, July 11, 2022, July 12, 2022, July 13, 2022, and September 22, 2022. It first determines the total number of days between the start and end dates of the absence. Then, it checks if any of these dates fall within the absence period and subtracts those days from the total duration. The final duration is the total number of days minus the excluded dates\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: None. The formula does not reference any database items (DBIs).\n* **Input Values**: \n  - `IV_START_DATE` (date)\n  - `IV_END_DATE` (date)\n* **Return Type**: The formula returns a numeric value representing a duration.\n* **Logic Summary**: \n  1. The formula calculates the start date by truncating the input start date to remove the time component.\n  2. It then calculates the total duration between the start and end dates (inclusive) in days.\n![](https:// presidency.gov.zw/wp-content/uploads/sites/2,'']]],\n3. The formula checks if five specific dates (`l_z`, `l_a`, `l_b`, `l_c`, `l_d`) fall within the range of the start and end dates.\n4. If any of these dates are within the range, the formula subtracts one day from the total duration for each occurrence.\n5. The final adjusted duration is then returned as the result.\n\nThis summary describes the logic of the FastFormula without including code details, following the requested format.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates whether the leave dates fall within specific holiday periods. It checks if the start and end dates of the leave overlap with any of the predefined holidays. If the leave dates do not fall within the holiday periods, the formula sets the validation status to 'N' (not valid) and provides an error message indicating that the leave cannot be applied as it is not a holiday. If the leave dates fall within the holiday periods, the validation status is set to 'Y' (valid). \n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: HOLIDAY (array of 18 dates)\n* **Input Values**: IV_START_DATE (date), IV_END_DATE (date)\n* **Return Type**: The formula returns two values: VALID (character) and ERROR_MESSAGE (character)\n* **Logic Summary**: \n  1. The formula checks if a leave period (defined by IV_START_DATE and IV_END_DATE) overlaps with a list of predefined holidays.\n  2. It iterates through each pair of holiday dates in the HOLIDAY array, checking if the leave period starts before the first holiday date or ends after the second holiday date in each pair.\n  3. If any overlap is found, the formula sets VALID to 'N' (indicating the leave is not valid) and assigns an error message stating that the leave cannot be applied because it is not a holiday.\n  4. If no overlap is found for any holiday pair, the formula sets VALID to 'Y' (indicating the leave is valid).\n  5. The formula returns both the VALID status and the ERROR_MESSAGE (if applicable). \n\nNote: The formula can be optimized as it has repeated conditions for checking holiday overlaps, which could be simplified into a loop or a more concise conditional statement, but the logic described above captures the essence of how the provided formula operates.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates whether the leave dates fall within a restricted period and if the user has the necessary permissions to make changes during that period. It checks if the start and end dates of the leave overlap with the restricted period from April 1, 2020, to December 31, 2020. If the leave dates fall within write a  period and the user is not authorized (i.e., the user name is not '14013278'), the formula sets the validation status to 'N' (not valid) and provides an error message indicating that any changes during write a  period should go through HR. If the leave dates do not fall within the restricted period or the user is authorized, the validation status is set to 'Y' (valid). write a  ensures that the leave application adheres to the specified business rules and restrictions.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n  + `GET_VALUE_SET('LOGGED_IN_USER')`\n  + `Res_start_date` and `Res_end_date` (which are default date values '2020/04/01 00:00:00' and '2020/12/31 00:00:00' respectively)\n  + `iv_Start_date` and `iv_end_date` (with default values '0001/01/01 00:00:00' and '4712/12/31 00:00:00')\n\n* **Input Values**: \n  + `iv_start_date` (date)\n  + `iv_end_date` (date)\n  + `User_name` (which is set to the value of `GET_VALUE_SET('LOGGED_IN_USER')`)\n\n* **Return Type**: \n  The formula returns two values: `VALID` (a character indicating whether the input is valid or not) and `ERROR_MESSAGE` (a text message in case the input is invalid).\n\n* **Logic Summary**: \n  This FastFormula checks if the provided start and end dates fall within a specific range (from April 1, 2020, to December 31, 2020). \n  1. It first checks if the start date is within this range. \n  2. If the start date is within the range and the user is not '14013278', it sets the `VALID` flag to 'N' (indicating invalid input) and generates an error message stating that changes between April and December should go through HR.\n  3. It performs a similar check for the end date. \n  4. If either date falls within the specified range and the user is not '14013278', the formula returns 'N' for `VALID` along with the appropriate error message. \n  Otherwise, it would implicitly return 'Y' for `VALID` without setting an error message, indicating that the input dates are valid for the given user.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Length of Service:\n\nIf the length of service is less than 5 years:\nAccrual is 28/12 for grades 1 to 6, 7, 8, B3, G2, I2, S1, and N7 (if citizenship is not 'SA').\nAccrual is 21/12 for grades 1 to 6, N7, and S2 (if citizenship is not 'SA').\nIf the length of service is 5 years or more:\nAccrual is 30/12 for grades 1 to 6, 7, 8, B3, G2, I2, S1, and N7 (if citizenship is not 'SA').\nGrade and Citizenship:\n\nFor grades 9A, 9B, 9C:\nIf the hire date is before 1st March 2010 and citizenship is 'SA', accrual is 30 plus 5 for every 10 years of service, divided by 12.\nOtherwise, accrual is 30/12.\nFor grades 10A, 10B, 10C, 11, 12:\nIf the hire date is before 1st March 2010 and citizenship is 'SA', accrual is 40 plus 5 for every 10 years of service, divided by 12.\nOtherwise, accrual is 35/12 or 44/12 for grades 10A, 10B, 10C.\nFor grades CEO, T8, Z4, R4, W8, E6, P1, F2, RS, and if PER_ASG_ATTRIBUTE8 is 'Y':\nAccrual is 30/12.\nFor grade S2:\nIf citizenship is 'SA' and length of service is less than 5 years, accrual is 28/12.\nIf citizenship is 'SA' and length of service is 5 years or more, accrual is 30/12.\nIf citizenship is not 'SA' and length of service is less than 5 years, accrual is 21/12.\nIf citizenship is not 'SA' and length of service is 5 years or more, accrual is 30/12.\nExceptions:\n\nIf Exception_Flag is 'Y' and Exception_value is not 'X', accrual is set to the value of Exception_value.\nIf accrual exceeds 2.5 and Exception_Flag is not 'Y', accrual is capped at 2.5.\nUnpaid Leave Adjustment:\n\nIf there are unpaid leave days (L_VAC_DAYS > 0), the accrual is adjusted by subtracting the unpaid leave days from the total days and multiplying by the daily accrual rate.\nThe ceiling is consistently set to 12000 and carryover to 6000 across all conditions.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:**\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- PER_ASG_PERSON_NUMBER\n- PER_PER_CITIZENSHIP_LEG_CODE\n- PER_ASG_GRADE_NAME\n- PER_ASG_ATTRIBUTE8\n- PER_ASG_REL_ACCEPTED_TERMINATION_DATE\n- ANC_ABS_ENTRS_START_DATE\n- ANC_ABS_ENTRS_END_DATE\n- PAY_EARN_PERIOD_END\n- PAY_EARN_PERIOD_START\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_TYP_NAME\n- GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n- ACP_HIRE_DATE\n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_END_DATE\n- IV_START_DATE\n- ASG_HR_ASG_ID\n\n**Input Values:**\n- IV_START_DATE\n- IV_END_DATE\n- IV_ACCRUALPERIODSTARTDATE\n- IV_ACCRUALPERIODENDDATE\n\n**Return Type:**\nThe formula returns three values: accrual, ceiling, and carryover, all related to leave accrual calculations, with accrual and carryover being numeric values representing the amount of leave accrued and the maximum amount that can be carried over, respectively, and ceiling representing the maximum limit for leave accrual.\n\n**Logic Summary:**\n1. **Initialization**: The formula starts by initializing various variables with default values and input parameters, including dates and employee details.\n2. **Date Calculations**: It calculates the length of service for an employee based on their original date of hire and the current date, breaking down dates into day, month, and year components for specific comparisons.\n3. **Grade and Citizenship-Based Accrual Rules**: The formula applies different accrual rules based on the employee's grade and citizenship status, with accrual rates varying by grade and length of service.\n4. **Absence and Exception Handling**: It checks for absence days within a specified period and applies exceptions based on predefined tables or attribute values, adjusting accrual rates accordingly.\n5. **Final Accrual Calculation**: The formula calculates the final accrual amount based on the total days in the accrual period, subtracting any absence days, and applies a daily accrual rate to determine the final accrual amount.\n6. **Adjustments and Limits**: It applies any necessary adjustments based on exception flags or specific employee attributes and ensures that the accrual amount does not exceed predefined ceilings or carryover limits.\n7. **Return Values**: Finally, the formula returns the calculated accrual amount, ceiling, and carryover values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates the total duration of annual leave taken by an employee within the provided start and end dates. It calculates the total applicable absence days by summing the duration of the current leave request with the approved annual leave days within write a  date range. The formula iterates through each absence entry, checks if it is of type 'Annual Leave' and not withdrawn, and adds its duration to the total approved absence days. The result is the total applicable absence days, which is returned along with a validation flag.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: \n  - ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - ANC_ABS_TYP_NAME\n  - ANC_ABS_ENTRS_DURATION\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n\n* **Input Values**:\n  - IV_START_DATE (date)\n  - IV_END_DATE (date)\n  - IV_TOTALDURATION (number)\n\n* **Return Type**: The formula returns two values: a validation flag (VALID) and the total applicable absence days (l_applicable_abs_days), which is a numeric value.\n\n* **Logic Summary**: \n  1. The formula starts by initializing default values for several database items (DBIs) and input parameters, including absence entry IDs, absence types, and durations.\n  2. It then uses the provided input values for the start date, end date, and total duration to set the context for absence entries.\n  3. The formula iterates through each absence entry ID within the specified date range.\n  4. For each absence entry, it checks the absence type and status. If the absence type is 'Annual Leave' and the status is not 'ORA_WITHDRAWN', it adds the absence duration to the total approved absence days.\n  5. After processing all absence entries, the formula calculates the total applicable absence days by adding the total duration to the approved absence days.\n  6. Finally, the formula returns a validation flag indicating whether the calculation is valid and the total applicable absence days.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the accrual, ceiling, and carryover of leave for employees based on their length of service, grade, and any exceptions. Here's the precise business logic:\n\nLength of Service:\n\nThe formula calculates the length of service by determining the number of days between the employee's hire date and the current date, then dividing by 365 to get the number of years.\nGrade-Based Accrual:\n\nFor grades E1, E2, M1, M2, and CEO, the accrual is 3, the ceiling is 3, and the carryover is 0.\nFor grades M3 and M4, the accrual is 2, the ceiling is 2, and the carryover is 0.\nFor grades S1, S2, I1, and I2, the accrual is 0, the ceiling is 0, and the carryover is 0.\nUnpaid Leave Adjustment:\n\nIf there are unpaid leave days, the formula adjusts the accrual by subtracting the unpaid leave days from the total days and multiplying by the daily accrual rate.\nExceptions:\n\nIf there are specific exceptions for the employee, the formula retrieves the exception flag and value from a table and applies the exception value to the accrual.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: \n  - PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n  - PER_ASG_PERSON_NUMBER\n  - PER_PER_CITIZENSHIP_LEG_CODE\n  - PER_ASG_GRADE_NAME\n  - PER_ASG_ATTRIBUTE8\n  - PER_ASG_REL_ACCEPTED_TERMINATION_DATE\n  - ANC_ABS_ENTRS_START_DATE\n  - ANC_ABS_ENTRS_END_DATE\n  - PAY_EARN_PERIOD_END\n  - PAY_EARN_PERIOD_START\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  - ANC_ABS_TYP_NAME\n  - GLOBAL_PAY_INTERFACE_EXTRACTION_DATE\n  - ACP_HIRE_DATE\n  - IV_ACCRUALPERIODENDDATE\n  - Exception_Flag\n  - Exception_value\n\n* **Input Values**: \n  - IV_START_DATE\n  - IV_END_DATE\n  - IV_ACCRUALPERIODSTARTDATE\n  - IV_ACCRUALPERIODENDDATE\n  - IV_CALEDARSTARTDATE\n  - IV_CALEDARENDDATE\n\n* **Return Type**: The formula returns three values: accrual, ceiling, and carryover, which are all numeric.\n\n* **Logic Summary**: \n  1. The formula starts by calculating the length of service in years for an employee based on their original date of hire.\n  2. It then determines the current payroll date and extracts the day, month, and year from it.\n  3. The formula calculates the total number of days in the accrual period.\n  4. It checks if the hire month and year match the current payroll month and year, and if so, calculates the number of days from the hire date to the end of the month.\n  5. It performs a similar check for the termination date, if applicable.\n  6. The formula checks for any exceptions related to the employee's annual leave and retrieves relevant values from a table.\n  7. It calculates the number of unpaid leave days taken by the employee during the accrual period.\n  8. Based on the employee's grade, the formula determines the accrual rate, ceiling, and carryover for annual leave.\n  9. If the employee has taken unpaid leave, the formula adjusts the accrual rate accordingly.\n  10. Finally, the formula returns the calculated accrual, ceiling, and carryover values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula is designed to validate the dates for a 'Travel Order' absence type. It ensures that the departure and arrival dates fall within the specified absence dates. Here is the precise business logic:\n\nIf the absence type is 'Travel Order' and the departure date is before the start date and the arrival date is after the end date, the validation fails with an error message asking to apply the departure and arrival dates within the absence dates.\nIf the absence type is 'Travel Order' and the departure date is equal to the start date but the arrival date is after the end date, the validation fails with an error message asking to apply the arrival date within the absence dates.\nIf the absence type is 'Travel Order' and the departure date is before the start date but the arrival date is equal to the end date, the validation fails with an error message asking to apply the departure date within the absence dates.\nThe formula returns a validation flag and an error message if any of these conditions are met.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: ANC_ABS_TYP_NAME, ANC_ABS_ENTRS_END_DATE, ANC_ABS_ENTRS_START_DATE, IV_ATTRIBUTE_DATE1, IV_ATTRIBUTE_DATE2\n* **Input Values**: iv_start_date, iv_end_date, IV_ATTRIBUTE_DATE1, IV_ATTRIBUTE_DATE2\n* **Return Type**: The formula returns two values: VALID (a string indicating whether the input is valid or not) and ERROR_MESSAGE (a string containing an error message if the input is invalid)\n* **Logic Summary**: \n    1. The formula first checks the absence type name. If it is 'Travel Order', it proceeds with further checks.\n    2. It then verifies if the attribute dates (IV_ATTRIBUTE_DATE1 and IV_ATTRIBUTE_DATE2) fall within the specified start and end dates (iv_start_date and iv_end_date).\n    3. If the attribute dates do not fall within the specified dates, it sets the VALID flag to 'N' (indicating invalid) and assigns an appropriate error message based on the specific condition that was not met.\n    4. The formula checks for three specific conditions where the attribute dates are either before the start date, after the end date, or exactly on the start or end date, and returns an error message accordingly.\n    5. If none of the error conditions are met, the formula returns a VALID flag and an empty or no error message, indicating that the input is valid.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula determines the start date of the calendar leave year for an employee's anniversary year based on their employment dates. It checks various dates such as the bonus vacation date, adjusted service date, and hire date to find the earliest relevant date. write a  date is then used as the anniversary date for the leave year.\n\n***Instruction for the fastformula***: Here is the summary of the provided FastFormula:\n\n* **DBI Values Used**: PER_ASG_USER_PERSON_TYPE, PER_PERSON_ENTERPRISE_HIRE_DATE, PER_ASG_REL_DATE_START, PER_ASG_REL_ATTRIBUTE_DATE1, PER_ASG_REL_ATTRIBUTE_DATE3, PER_PER_LATEST_REHIRE_DATE, PER_REL_ATTRIBUTE_DATE6\n* **Input Values**: None (all values are either defaulted or derived from DBI values)\n* **Return Type**: Date\n* **Logic Summary**: \n  1. Log various dates (bonus vacation date, adjusted service date, and hire date) using the ESS_LOG_WRITE function.\n  2. Determine the employee's begin date by evaluating the following conditions in order:\n    - If PER_ASG_REL_ATTRIBUTE_DATE3 is not defaulted, use its value.\n    - If PER_ASG_REL_ATTRIBUTE_DATE1 is not defaulted, use its value.\n    - If neither of the above is not defaulted, use PER_REL_ATTRIBUTE_DATE6.\n  3. Set the anniversary date to the determined employee begin date and return it. The formula appears to be designed to calculate an employee's anniversary date based on available date attributes, defaulting to specific values if required attributes are not provided.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates the accrual of personal leave for part-time employees based on the number of hours they worked in the previous year. It checks the employee's assignment information and calculates the total hours worked. Depending on the total hours worked, it assigns different accrual amounts:\n\nIf the employee worked between 500 and 999 hours, they accrue 8 hours of leave.\nIf they worked between 1000 and 1499 hours, they accrue 16 hours of leave.\nIf they worked 1500 hours or more, they accrue 24 hours of leave.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: PERSON_ID, EFFECTIVE_DATE, PER_ASG_FULL_PART_TIME, PER_ASG_EMPLOYEE_CATEGORY\n* **Input Values**: None explicitly defined, but uses context values such as PERSON_ID and EFFECTIVE_DATE\n* **Return Type**: The formula returns a numeric value representing the accrued hours\n* **Logic Summary**: \n    1. The formula initializes variables to track the prior year's regular hours and accrual hours.\n    2. It calculates the start and end dates of the prior year based on the effective date.\n    3. The formula then loops through each day of the prior year, retrieving assignment information and calculated hours for each day.\n    4. It checks the employment category and worker category to determine if the hours should be included in the total regular hours.\n    5. After looping through all days, the formula calculates the total regular hours for the prior year.\n    6. Based on the total regular hours, the formula determines the accrual hours using a tiered system (e.g., 500-1000 hours = 8 accrual hours, 1000-1500 hours = 16 accrual hours, etc.).\n    7. Finally, the formula returns the calculated accrual hours, with a ceiling and carryover value set to a high number (9999999).",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates sick leave accrual based on the employee's bargaining unit code, employment category, and years of service. It determines the employee's start date and calculates the number of years they have been employed. Based on the number of years of service, it assigns different accrual amounts:\n\n1 year of service: 16 hours of sick leave\n2 years of service: 24 hours of sick leave\n3 years of service: 32 hours of sick leave\n4 or more years of service: 40 hours of sick leave\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:**\n* PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n* ANC_ABS_PLN_NAME\n* ANC_ABS_PLN_PLAN_UOM\n* PER_ASG_BARGAINING_UNIT_CODE\n* PER_ASG_EMPLOYMENT_CATEGORY\n* PER_REL_LENGTH_OF_SERVICE_BY_SENIORITY\n* PER_ASG_REL_ATTRIBUTE_DATE1\n* PER_ASG_REL_ATTRIBUTE_DATE3\n* PER_PER_LATEST_REHIRE_DATE\n\n**Input Values:**\n* IV_ACCRUALPERIODENDDATE (Date)\n* IV_ACCRUALPERIODSTARTDATE (Date)\n\n**Return Type:**\nThe formula returns a numeric value representing the accrual amount.\n\n**Logic Summary:**\nThe formula calculates the accrual amount based on the employee's seniority. Here's a step-by-step overview:\n1. Initialize variables with default values and input values.\n2. Determine the employee's absence plan, bargaining unit code, employment category, and years of service.\n3. Log key information, including the absence plan, bargaining unit, employment category, and dates.\n4. Determine the employee's begin date based on the presence of specific attribute dates (PER_ASG_REL_ATTRIBUTE_DATE3, PER_ASG_REL_ATTRIBUTE_DATE1, or PER_PER_LATEST_REHIRE_DATE).\n5. Calculate the number of years of service by subtracting the begin date from the effective date.\n6. Determine the accrual amount based on the number of years of service, with specific accrual amounts for 1, 2, 3, and 4 or more years of service.\n7. Log the calculated accrual amount and key dates.\n8. Return the calculated accrual amount.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula calculates vacation accrual based on the employee's bargaining unit code, employment category, and hours worked. It first determines the employee's start date by checking various dates such as the bonus vacation date, adjusted service date, and hire date. If the start date falls on February 29th, it adjusts the date to February 28th.\n\nNext, it calculates the number of service days and years by finding the difference between the accrual period end date and the employee's start date. It also determines the anniversary month and day. The formula checks if the employee's anniversary falls within the accrual period. If it does, it retrieves a bonus accrual amount based on the number of service years.\n\nThe formula then retrieves the total reported and absence hours for the employee during the accrual period. It logs the earned hours for debugging purposes.\n\nFor the accrual calculation:\n\nIf the employee's work hours are 48 or more and their employment category is not 'RS', the accrual is set to 4 hours.\nIf the employment category is 'RS' and the work hours are 40 or more, the accrual is calculated based on the accrual rate and standard hours.\nIf the employee has less than one year of service, the accrual is set to zero.\nThe formula adds any bonus accrual to the calculated accrual.\nFinally, the formula logs the final accrual amount, carryover, and ceiling for debugging purposes and returns the calculated accrual, ceiling, and carryover.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n  - PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n  - ANC_ABS_PLN_NAME\n  - ANC_ABS_PLN_PLAN_UOM\n  - PER_ASG_BARGAINING_UNIT_CODE\n  - PER_ASG_EMPLOYMENT_CATEGORY\n  - PER_REL_LENGTH_OF_SERVICE_BY_SENIORITY\n  - PER_ASG_REL_ATTRIBUTE_DATE1\n  - PER_ASG_REL_ATTRIBUTE_DATE3\n  - PER_PER_LATEST_REHIRE_DATE\n  - PER_REL_ATTRIBUTE_DATE6\n\n* **Input Values**: \n  - IV_ACCRUALPERIODENDDATE (Date)\n  - IV_ACCRUALPERIODSTARTDATE (Date)\n\n* **Return Type**: The formula returns three values: accrual (the calculated vacation accrual), ceiling (the maximum allowed accrual), and carryover (the amount of accrued vacation that can be carried over).\n\n* **Logic Summary**: \n  The formula calculates the vacation accrual for an employee based on their work hours, employment category, and length of service. \n  1. It first determines the employee's start date, which can be one of several dates depending on the availability of specific attribute dates.\n  2. It then calculates the number of service days and years the employee has been with the company.\n  3. The formula checks if the employee's anniversary date falls within the accrual period and, if so, calculates a bonus accrual based on the employee's years of service.\n  4. It retrieves the reported work hours for the employee during the accrual period.\n  5. The formula calculates the total work hours, including absence hours, and then determines the accrual based on the total work hours and employment category.\n  6. If the employee has less than a year of service, the accrual is set to zero.\n  7. Finally, the formula adds the bonus accrual to the calculated accrual and logs various data points for auditing purposes before returning the accrual, ceiling, and carryover values.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates absence entries to ensure that employees cannot request Workers' Compensation leave if their employment status does not match specific categories. It checks the duration of the requested leave and the employee's employment category. If the employment category is not one of the allowed categories for Workers' Compensation (such as full-time, part-time, or seasonal Workers' Compensation), and the leave duration is greater than zero, the formula sets the validation status to invalid and returns an error message indicating that Workers' Compensation cannot be requested with the current employment status.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: \n  + ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR (default value: 0)\n  + ANC_ABS_ENTRS_ABSENCE_TYPE_ID (default value: 0)\n  + ANC_ABS_ENTRS_ABSENCE_STATUS_CD (default value: 'NA')\n  + ANC_ABS_ENTRS_DURATION (default value: 0)\n  + ANC_ABS_ENTRS_APPROVAL_STATUS_CD (default value: 'NA')\n  + PER_ASG_EMPLOYMENT_CATEGORY (default value: ' ')\n\n* **Input Values**: \n  + iv_start_date (date)\n  + iv_end_date (date)\n  + IV_TOTALDURATION (number)\n\n* **Return Type**: The formula returns two values: VALID (a flag indicating whether the input is valid or not) and ERROR_MESSAGE (a string containing an error message if the input is not valid).\n\n* **Logic Summary**: \n  1. The formula calculates the number of days between a given start date and end date.\n  2. It retrieves the current payroll ID and HR assignment ID from the context.\n  3. The formula checks the employment category of the HR assignment.\n  4. Based on the employment category and the total duration, it validates whether a workers' compensation request can be made.\n  5. If the employment category is not a valid workers' compensation category (e.g., 'WC_FT', 'WC_PT', 'WC_SE') or if the total duration is greater than 0 when the employment status is not 'Worker Comp', the formula sets the VALID flag to 'N' and generates an error message.\n  6. Finally, the formula returns the VALID flag and the ERROR_MESSAGE.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates sick leave accrual based on the employee's bargaining unit code, employment category, and years of service. Here's a detailed explanation of the calculation process:\n\nDetermine Employee Start Date: The formula checks various dates to determine the employee's start date. It prioritizes the bonus vacation date, adjusted service date, and hire date in that order.\n\nCalculate Years of Service: It calculates the number of years the employee has been in service by finding the difference between the current effective date and the employee's start date.\n\nAccrual Calculation:\n\nIf the employee has completed 1 year of service, they accrue 16 hours of sick leave.\nIf the employee has completed 2 years of service, they accrue 24 hours of sick leave.\nIf the employee has completed 3 years of service, they accrue 32 hours of sick leave.\nIf the employee has completed 4 or more years of service, they accrue 40 hours of sick leave. Return the accrued value\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used:** \n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- ANC_ABS_PLN_NAME\n- ANC_ABS_PLN_PLAN_UOM\n- PER_ASG_BARGAINING_UNIT_CODE\n- PER_ASG_EMPLOYMENT_CATEGORY\n- PER_REL_LENGTH_OF_SERVICE_BY_SENIORITY\n- PER_ASG_REL_ATTRIBUTE_DATE1\n- PER_ASG_REL_ATTRIBUTE_DATE3\n- PER_PER_LATEST_REHIRE_DATE\n- PER_REL_ATTRIBUTE_DATE6\n\n**Input Values:** \n- IV_ACCRUALPERIODENDDATE\n- IV_ACCRUALPERIODSTARTDATE\n\n**Return Type:** \nThe formula returns a numeric value representing the accrual amount.\n\n**Logic Summary:** \n1. The formula starts by initializing various variables with default values, including dates, absence plan details, and employment category.\n2. It retrieves the effective date, person ID, term ID, HR relationship ID, and accural plan ID from the context.\n3. The formula then determines the absence plan, bargaining unit code, employment category, and years of service based on the input values and database items.\n4. It calculates the anniversary date based on the employee's begin date, which is determined by checking if certain dates have been defaulted or not.\n5. The formula then calculates the number of years of service by subtracting the anniversary year from the effective year.\n6. Based on the number of years of service, the formula calculates the accrual amount, with different accrual rates for different years of service.\n7. The formula logs various data points for auditing purposes, including the absence plan, bargaining unit, employment category, and accrual amount.\n8. Finally, the formula returns the calculated accrual amount.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates jury duty leave requests to ensure that employees do not enter multiple requests for the same type of absence on the same workday. Here's a detailed explanation of the calculation process:\n\nCheck Date Span: The formula first checks if the start and end dates of the leave request are different. If they are, it sets the validation status to invalid and returns an error message indicating that the request should not span over two dates and should be split into two separate requests.\n\nRetrieve Existing Absence Entries: If the start and end dates are the same, the formula retrieves existing absence entries for the given date range. It loops through these entries to check if there are any existing jury duty leave requests that have not been withdrawn.\n\nCalculate Total Duration: The formula calculates the total duration of the existing jury duty leave requests and adds the duration of the new request.\n\nValidate Request: If the total duration of the existing and new jury duty leave requests is greater than the duration of the new request alone, the formula sets the validation status to invalid and returns an error message indicating that multiple jury duty requests cannot be placed on the same workday. Otherwise, it sets the validation status to valid.\n\n***Instruction for the fastformula***:   \n\n**DBI Values Used**: \n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n- ANC_ABS_ENTRS_DURATION\n- PER_ASG_NORMAL_HOURS\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- PAYROLL_ID\n- ABSENCE_TYPE_ID\n\n**Input Values**: \n- iv_start_date (date)\n- iv_end_date (date)\n- IV_TOTALDURATION (number)\n\n**Return Type**: The formula returns two values: VALID (a status indicator, likely a character) and ERROR_MESSAGE (a text message indicating any errors).\n\n**Logic Summary**: \n1. The formula first checks if the start and end dates span over more than one day. If they do, it sets the VALID flag to 'N' (No) and returns an error message indicating that the request should not span over two dates.\n2. If the dates are valid, it loops through an array of absence entries for the given date range.\n3. For each absence entry, it checks if the absence type matches a specific type and if the absence status is not 'ORA_WITHDRAWN'. If both conditions are met, it adds the duration of the absence to a total duration counter.\n4. After looping through all absence entries, it adds the total duration of the current request to the total duration counter.\n5. If the total duration counter does not match the total duration of the request, it sets the VALID flag to 'N' and returns an error message indicating that there should not be two jury requests for the same workday.\n6. If all checks pass, it sets the VALID flag to 'Y' (Yes), indicating that the request is valid. The formula then returns the VALID flag and any error message (if applicable).",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates unpaid leave requests to ensure that employees cannot request unpaid leave if they have available leave balances in their vacation, personal paid leave, or floating holiday plans. Here's a detailed explanation of the calculation process:\n\nRetrieve Leave Balances: The formula retrieves the available leave balances for the employee's vacation leave, personal paid leave, and floating holiday plans as of the start date of the leave request.\n\nCheck Leave Balances: It checks if any of the retrieved leave balances are greater than zero. If any of the leave balances are available, the formula sets the validation status to invalid and returns an error message indicating that unpaid leave cannot be requested when leave balances are available.\n\nValidation Result: If none of the leave balances are available, the formula sets the validation status to valid.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: PER_ASG_FULL_PART_TIME, PER_ASG_POS_ATTRIBUTE1, PER_ASG_PERMANENT_TEMPORARY_FLAG\n* **Input Values**: iv_start_date (date), iv_end_date (date), IV_TOTALDURATION (number)\n* **Return Type**: The formula returns two values: VALID (a character indicating whether the request is valid or not) and ERROR_MESSAGE (a character string containing an error message if the request is invalid)\n* **Logic Summary**: \n  1. The formula first retrieves the effective date and HR assignment ID from the context.\n  2. It then sets the names of three leave plans: Vacation Leave, Personal Paid Leave, and Floating Holiday.\n  3. For each leave plan, the formula changes the context to the HR assignment ID and the start date, retrieves the balance of the leave plan, and logs the balance.\n  4. The formula checks if any of the leave balances are greater than 0.\n  5. If any leave balance is available, the formula sets the VALID flag to 'N' (indicating the request is invalid) and sets an error message indicating that unpaid leave cannot be requested when leave balance is available.\n  6. If no leave balances are available, the formula sets the VALID flag to 'Y' (indicating the request is valid).\n  7. Finally, the formula returns the VALID flag and the ERROR_MESSAGE (if any).",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates sick leave accrual based on the employee's bargaining unit code, employment category, and hours worked. Here's a detailed explanation of the calculation process:\n\nDetermine Employee Information: The formula retrieves the employee's bargaining unit code, employment category, and years of service.\n\nRetrieve Work Hours: It retrieves the total reported and absence hours for the employee during the accrual period. write a  includes both the hours worked and the hours recorded as absence.\n\nCalculate Accrual:\n\nIf the employee's work hours are 48 or more and their employment category is not 'RS', the accrual is set to 4 hours.\nIf the employment category is 'RS' and the work hours are 40 or more, the accrual is calculated based on the accrual rate and standard hours.\nIf the work hours do not meet the above conditions, the accrual is set to zero.\nLogging and Return: The formula logs the calculated accrual amount, carryover, and ceiling for debugging purposes. It then returns the calculated accrual, ceiling, and carryover.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used**: \n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- ANC_ABS_PLN_NAME\n- ANC_ABS_PLN_PLAN_UOM\n- PER_ASG_BARGAINING_UNIT_CODE\n- PER_ASG_EMPLOYMENT_CATEGORY\n- PER_REL_LENGTH_OF_SERVICE_BY_SENIORITY\n\n**Input Values**: \n- IV_ACCRUALPERIODENDDATE (Date)\n- IV_ACCRUALPERIODSTARTDATE (Date)\n\n**Return Type**: The formula returns three numeric values: accrual, ceiling, and carryover, which represent the calculated accrual amount, the maximum limit for accrual, and the amount carried over, respectively.\n\n**Logic Summary**: \n1. The formula starts by setting default values for various database items (DBIs) related to employee data, accrual plans, and employment categories.\n2. It then initializes several local variables with input values, default values, or results from function calls, such as getting the effective date or logging the start of the formula execution.\n3. The formula retrieves specific data for the employee, including the absence plan, bargaining unit code, employment category, and years of service, using the `GET_CONTEXT` function.\n4. It calculates the reported hours worked by the employee during the accrual period using the `TOH_HW_ASG_WORK_HOURS_ASSIGNMENT_ASG_AAP` function and adds any absence hours to get the total work hours.\n5. Based on the employment category and total work hours, the formula applies different accrual rules to determine the accrual amount.\n6. The formula logs the calculation steps and results for auditing purposes using the `ESS_LOG_WRITE` function.\n7. Finally, it returns the calculated accrual amount, along with the ceiling and carryover values, which are set to predefined limits.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates the Massachusetts Paid Sick Leave (Non Exempt) requests to ensure that employees do not exceed the allowed 40 hours of leave in a year. Here's a detailed explanation of the calculation process:\n\nInitialize Variables: The formula initializes variables to store the total duration of the new leave request and the start date of the current year.\n\nRetrieve Existing Absence Entries: It retrieves existing absence entries for the given date range (from the start of the year to the start date of the new request). It loops through these entries to check if there are any existing Massachusetts Paid Sick Leave (Non Exempt) requests that have not been withdrawn, saved, or denied.\n\nCalculate Total Duration: The formula calculates the total duration of the existing approved Massachusetts Paid Sick Leave (Non Exempt) requests and adds the duration of the new request.\n\nValidate Request: If the total duration of the existing and new Massachusetts Paid Sick Leave (Non Exempt) requests exceeds 40 hours, the formula sets the validation status to invalid and returns an error message indicating that more than 40 hours cannot be applied for in a year. Otherwise, it sets the validation status to valid.\n\n***Instruction for the fastformula***:  \n\n* **DBI Values Used**: \n  + ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  + ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  + ANC_ABS_TYP_NAME\n  + ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  + ANC_ABS_ENTRS_DURATION\n  + ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n\n* **Input Values**: \n  + IV_START_DATE (date)\n  + IV_END_DATE (date)\n  + IV_TOTALDURATION (number)\n\n* **Return Type**: The formula returns two values: VALID (a string indicating whether the input is valid or not) and ERROR_MESSAGE (a string containing an error message if the input is invalid).\n\n* **Logic Summary**: \n  1. The formula starts by initializing variables with default or input values, including absence type name, duration, and start date.\n  2. It sets a specific start date for the current year and calculates the end date based on this start date.\n  3. The formula then loops through each absence entry for the current year, checking the absence type and status.\n  4. If the absence type is 'Massachusetts Paid Sick Leave (Non Exempt)' and the status is not withdrawn, saved, or denied, it adds the absence duration to the total approved absence days.\n  5. After looping through all entries, the formula calculates the total applicable absence days by adding the input duration and the approved absence days.\n  6. If the total applicable absence days exceed 40 hours, the formula sets the valid flag to 'N' and generates an error message; otherwise, it sets the valid flag to 'Y'.\n  7. Finally, the formula returns the valid flag and the error message (if any).",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write a global ansence entry validation formula to  ensure that employees cannot apply for more than 64 hours of New Mexico Paid Sick Leave in a year by validating the total duration of existing and new requests.\n\n***Instruction for the fastformula***:   #### DBI Values Used:\n- `HR_ASSIGNMENT_ID`\n- `Person_ID`\n- `EFFECTIVE_DATE`\n- `PER_ASG_REL_DATE_START`\n- Value sets:\n  - `LHC_TOTAL_ABS_DURATION_ROUND_VS`\n  - `LHC_TOTAL_ABS_DURATION_DECIMAL_VS`\n\n#### Input Values:\n- `IV_START_DATE` (date)\n- `IV_END_DATE` (date)\n- `IV_TOTALDURATION` (number)\n\n#### Return Type:\nThe formula returns two values: `VALID` (a character indicating whether the input is valid or not) and `ERROR_MESSAGE` (the error message if the input is not valid).\n\n#### Logic Summary:\n1. **Initialization**: The formula starts by initializing various variables with default or context values, including assignment ID, person ID, effective date, and input start and end dates.\n2. **Year Determination**: It then determines the current, next, and previous years based on the start date.\n3. **Date Adjustments**: Depending on whether the start date falls within the current year or not, it adjusts the start and end dates of the current year for calculations.\n4. **Absence Hours Calculation**: The formula calculates the absence hours by first checking value sets for rounding and decimal values related to absence hours. If these values are not found, it defaults to '0'.\n5. **Total Hours Calculation**: It then calculates the total hours by adding the absence hours to the input total duration.\n6. **Validation**: If the total hours exceed 64, it sets the `VALID` flag to 'N' (not valid), sets an error message indicating an error with New Mexico Paid Sick Leave hours, and returns. Otherwise, it returns with `VALID` as 'Y' (valid) and no error message.\n\nThis summary encapsulates the main logic flow and key components of the FastFormula without delving into the specific code details.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: The formula validates Colorado Paid Sick Leave requests to ensure employees do not exceed 48 hours of leave in a year. It checks if the leave duration is in increments of 0.25 hours. It retrieves the total approved absence hours for the current leave year and adds the duration of the new request. If the total exceeds 48 hours, the request is invalid. Otherwise, it is valid.\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:**\n- HR_ASSIGNMENT_ID\n- Person_ID\n- EFFECTIVE_DATE\n- PER_ASG_REL_DATE_START\n- PER_ASG_REL_ORIGINAL_DATE_OF_HIRE\n- ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n- ANCABS_ENTRS_ABSENCE_TYPE_ID\n- ANC_ABS_TYP_NAME\n- PER_ASG_LOC_COUNTRY\n- PER_ASG_EMPLOYMENT_CATEGORY\n- PER_ASG_ORG_DEPARTMENT_NAME\n- PER_ASG_LEGISLATION_CODE\n- PER_ASG_WORK_AT_HOME\n- PER_ASG_HOURLY_SALARIED_CODE\n- PER_ASG_NORMAL_HOURS\n- ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n- PER_ASG_GRADE_CODE\n- LHC_TOTAL_ABS_DURATION_ROUND_VS\n- LHC_TOTAL_ABS_DURATION_DECIMAL_VS\n\n**Input Values:**\n- IV_START_DATE (date)\n- IV_END_DATE (date)\n- IV_TOTALDURATION\n\n**Return Type:**\nThe formula returns two values: `VALID` (which can be 'Y' or 'N') and `ERROR_MESSAGE` (which contains a specific error message if `VALID` is 'N').\n\n**Logic Summary:**\n1. The formula starts by retrieving various context values such as `HR_ASSIGNMENT_ID`, `Person_ID`, and `EFFECTIVE_DATE`.\n2. It calculates the current year, next year, and previous year based on the `IV_START_DATE`.\n3. The formula then determines specific dates like the start and end of the current year, based on the hire date and current year.\n4. It checks if the total duration provided (`IV_TOTALDURATION`) has a remainder when divided by a specific fraction (0.25), and if so, it sets `VALID` to 'N' and returns an error message, as the duration must be a whole number or a specific fraction.\n5. If the duration is valid, it retrieves values from two value sets (`LHC_TOTAL_ABS_DURATION_ROUND_VS` and `LHC_TOTAL_ABS_DURATION_DECIMAL_VS`) to determine how to calculate absence hours (`l_abs_hrs`).\n6. The formula calculates `l_abs_hrs` based on values retrieved from the value sets and then calculates `l_total_hrs` by adding `l_abs_hrs` to `IV_TOTALDURATION`.\n7. It checks if `l_total_hrs` exceeds 48 hours, and if so, sets `VALID` to 'N' and returns an error message.\n8. If all checks pass, the formula returns `VALID` as 'Y' with no error message, indicating that the input duration is valid according to the formula's rules.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: Write a global absence accrual matrix formula for that calculates sick leave accrual by dividing the total hours worked during the accrual period by 40 and rounding the result\n\n***Instruction for the fastformula***:  \n\n**DBI Values Used:** \n- `HR_ASSIGNMENT_ID`\n- `LHC_REGULAR_WORK_HOURS_ASG_RP`\n- `GRP_TYPE_ID` (with a specific value of 101)\n\n**Input Values:** \n- `IV_ACCRUAL`\n- `IV_ACCRUALPERIODSTARTDATE`\n- `IV_ACCRUALPERIODENDDATE`\n- `IV_CALEDARSTARTDATE`\n- `LHC_REGULAR_WORK_HOURS_ASG_RP`\n\n**Return Type:** \nThe formula returns a numeric value representing the calculated accrual, rounded to two decimal places.\n\n**Logic Summary:** \n1. The formula initializes by setting default values for accrual, accrual period start and end dates, and a calendar start date. \n2. It retrieves the assignment ID from the context and sets it as a variable.\n3. The formula then iterates through each day in the specified accrual period.\n4. For each day, it retrieves the regular work hours for the assignment and adds them to a running total of hours worked.\n5. After iterating through all days, the formula calculates the accrual by dividing the total hours worked by 40 and rounding to two decimal places.\n6. The calculated accrual is then logged along with other intermediate values for auditing or debugging purposes.\n7. Finally, the formula returns the calculated accrual value.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula validates Massachusetts Paid Sick Leave (Exempt) requests to ensure that employees do not exceed the allowed 40 hours of leave in a year. It checks the total duration of the new leave request and adds it to the total approved duration of existing leave requests of the same type for the current year. If the total exceeds 40 hours, the request is invalid. Otherwise, it is valid.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: \n  - ANC_PER_ABS_ENTRS_ABSENCE_ENTRY_ID_ARR\n  - ANC_ABS_ENTRS_ABSENCE_TYPE_ID\n  - ANC_ABS_TYP_NAME\n  - ANC_ABS_ENTRS_ABSENCE_STATUS_CD\n  - ANC_ABS_ENTRS_DURATION\n  - ANC_ABS_ENTRS_APPROVAL_STATUS_CD\n\n* **Input Values**: \n  - IV_START_DATE (date)\n  - IV_END_DATE (date)\n  - IV_TOTALDURATION (number)\n\n* **Return Type**: \n  The formula returns two values: a validation flag (VALID) which is a character indicating whether the input is valid or not, and an error message (ERROR_MESSAGE) which is a string providing information about the validation result.\n\n* **Logic Summary**: \n  This formula validates an absence application based on the 'Massachusetts Paid Sick Leave (Exempt)' policy. Here's a step-by-step breakdown:\n  1. It initializes variables with default values and input parameters.\n  2. It sets a specific date range, starting from a fixed start date ('01-Jan-2022') and ending at the provided start date (IV_START_DATE), to consider for absence calculation.\n  3. It iterates through each absence entry found within the specified date range.\n  4. For each absence entry, it checks if the absence type is 'Massachusetts Paid Sick Leave (Exempt)' and if the status is not withdrawn, saved, or denied.\n  5. If the conditions are met, it accumulates the duration of such absences.\n  6. It calculates the total applicable absence days by adding the accumulated approved absence days to the total duration provided as input.\n  7. If the total applicable absence days exceed 40 hours, it sets the validation flag to 'N' (not valid) and provides an error message; otherwise, it sets the validation flag to 'Y' (valid).\n  8. Finally, it returns the validation flag and the error message (if any).",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates sick leave accrual for Connecticut Sick Leave based on the total hours worked during the accrual period. Here's the calculation logic:\n\nDetermine Hours Worked: The formula checks if the employee has worked more than 680 hours since their hire date or the cutoff date. If the employee has worked more than 680 hours, it calculates the total hours worked during the accrual period.\n\nCalculate Accrual: The formula calculates the accrual by dividing the total hours worked by 40 and rounding the result to two decimal places. If the employee has not yet completed 680 hours, it includes hours worked in the previous accrual period to determine if the threshold is met.\n\nAdjust for Previous Hours: If the employee has completed 680 hours before the cutoff date, the formula includes these hours in the total calculation and adjusts the accrual accordingly. the formula calculates sick leave accrual by dividing the total hours worked during the accrual period by 40 and rounding the result. It ensures that employees meet the 680-hour threshold before accruing sick leave\n\n***Instruction for the fastformula***: **Summary of FastFormula**\n\n* **DBI Values Used**: \n  + PER_PERSON_ENTERPRISE_HIRE_DATE\n  + LHC_REGULAR_WORK_HOURS_ASG_RP\n  + GET_CONTEXT(PERSON_ID,1)\n  + GET_CONTEXT(HR_ASSIGNMENT_ID,1)\n  + GET_VALUE_SET('LHC_FETCH_PERSON_NUMBER_VS','|=P_PERSON_ID=')\n  + GET_TABLE_VALUE('LHC_PREVIOUS_YEAR_HOURS_WORKED', 'CONNECTICUT_SICK_LEAVE' ,'CUTOFF_DATE', '4712/12/31')\n  + GET_TABLE_VALUE('LHC_PREVIOUS_YEAR_HOURS_WORKED', 'CONNECTICUT_SICK_LEAVE' ,l_person_number, '0')\n  + GET_VALUE_SET_VALUE('LHC_GET_REGULAR_HOURS_WORKED',l_param)\n\n* **Input Values**: \n  + IV_ACCRUAL\n  + IV_ACCRUALPERIODSTARTDATE\n  + IV_ACCRUALPERIODENDDATE\n  + IV_CALEDARSTARTDATE\n  + IV_CALEDARENDDATE\n  + IV_PLANENROLLMENTSTARTDATE\n  + IV_PLANENROLLMENTENDDATE\n\n* **Return Type**: The formula returns a numeric value representing the accrual amount.\n\n* **Logic Summary**: \n  1. The formula initializes various variables, including accrual periods, hire dates, and hours worked.\n  2. It checks if the employee has completed 680 hours before the go-live date and calculates the accrual accordingly.\n  3. If the employee hired after the go-live date, it calculates the hours worked between the hire date and the accrual period end date.\n  4. If the employee has not completed 680 hours, it adds the hours worked in the previous accrual period to the current hours worked.\n  5. The formula then calculates the accrual amount based on the total hours worked, rounding it to two decimal places.\n  6. If the debug flag is set to 'Y', it logs various values, including period start and end dates, hours worked, and accrual amounts.\n  7. Finally, the formula returns the calculated accrual amount.",
        "metadata": {
            "source": "dataset"
        }
    },
    {
        "page_content": "***question***: write a  formula calculates sick leave accrual based on the total hours worked during the accrual period. Here's the calculation logic:\n\nIt initializes the total hours worked to zero.\nFor each day in the accrual period, it retrieves the regular work hours for the assignment and adds them to the total hours worked.\nAfter summing up the total hours worked for the entire period, it calculates the accrual by dividing the total hours worked by 40 and rounding the result to two decimal places.\n\n***Instruction for the fastformula***:   \n\n* **DBI Values Used**: \n  - LHC_REGULAR_WORK_HOURS_ASG_RP\n  - HR_ASSIGNMENT_ID\n  - ESS_LOG_WRITE\n  - GET_CONTEXT\n  - CHANGE_CONTEXTS\n\n* **Input Values**:\n  - IV_ACCRUAL\n  - IV_ACCRUALPERIODSTARTDATE\n  - IV_ACCRUALPERIODENDDATE\n  - IV_CALEDARSTARTDATE\n\n* **Return Type**: \n  The formula returns a numeric value representing the accrual, rounded to two decimal places.\n\n* **Logic Summary**:\n  1. The formula starts by initializing variables with default values for accrual, accrual period start and end dates, and assignment ID.\n  2. It logs the beginning of the process and identifies the assignment ID from the context.\n  3. It iterates through each day in the specified accrual period, calculating the regular work hours for each day by changing contexts to the specific assignment and date.\n  4. The total work hours are accumulated over the period.\n  5. After looping through all days, it calculates the accrual by dividing the total work hours by 40 and rounding to two decimal places.\n  6. The final accrual value is logged and returned as the result of the formula.\n  The overall purpose of this formula is to calculate an employee's accrual based on their work hours over a specified period, accounting for regular work hours each day.",
        "metadata": {
            "source": "dataset"
        }
    }
]