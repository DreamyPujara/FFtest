[
    {
        "BASE_FORMULA_NAME": "CMP_ELIGIBLE_SALARY_PRORATION_DAILY_AVERAGE",
        "FORMULA_TEXT": "DEFAULT FOR CMP_ASSIGNMENT_SALARY_AMOUNT IS 0\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_FROM IS '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_TO IS   '4712/12/31 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR IS 1\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM is '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_CURRENCY_CODE is 'XYZ' \nDEFAULT FOR PER_ASG_START_DATE IS '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_BASIS_CODE is 'XYZ' \nDEFAULT FOR PER_ASG_FTE_VALUE IS 1\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (text) ,CMP_IV_PLAN_END_DATE (text)\nDEFAULT FOR CMP_IV_PLAN_START_DATE   IS  '2001/01/01'\nDEFAULT FOR CMP_IV_PLAN_END_DATE     IS  '4012/01/01'\n\n\nL_DATA_TYPE = 'NUMBER'\nL_TOTAL = 0\nL_SALARY = 0\nL_DAYS = 0\nL_COUNT = 0\nL_DEFAULT_VALUE = 0\n\n\nL_DATA = ESS_LOG_WRITE( 'BEGIN COMPENSATION_ELIGIBLE_SALARY_PRORATION_DAILY_AVERAGE' ) \n\n\n\nL_PL_START_DATE      = TO_DATE(CMP_IV_PLAN_START_DATE,'YYYY/MM/DD')\nL_PL_END_DATE        = TO_DATE(CMP_IV_PLAN_END_DATE,'YYYY/MM/DD') \nL_YR_TOTAL_DAYS      = 0\nL_PERD_ST_DATE       =  TO_DATE(CMP_IV_PLAN_START_DATE,'YYYY/MM/DD') \nL_PERD_END_DATE      = TO_DATE(CMP_IV_PLAN_END_DATE,'YYYY/MM/DD')  \nL_YR_ST_DT_NEXT      = L_PL_START_DATE \nL_CURRENCY           = 'XYZ'\n\n\n\nL_PERD_ST_DATE = GREATEST(L_PERD_ST_DATE, PER_ASG_START_DATE)\n\n\n\n\nWHILE (L_COUNT <= 10) LOOP  \n(\n    L_SALARY = 0\n    L_DAYS = 0\n    L_COUNT = L_COUNT + 1\n\n     \n      \n   CHANGE_CONTEXTS(EFFECTIVE_DATE = L_PERD_ST_DATE)\n   (\n   \n     \n      IF (L_CURRENCY = 'XYZ') THEN \n      (\n        L_CURRENCY  = CMP_ASSIGNMENT_SALARY_CURRENCY_CODE \n      )\n      ELSE(\n        IF (L_CURRENCY <> CMP_ASSIGNMENT_SALARY_CURRENCY_CODE) THEN\n        (\n         L_TOTAL = -1 \n         EXIT\n        )\n      ) \n\n     \n\n     L_YR_ST_DT_NEXT  = ADD_YEARS(TRUNC(L_PERD_ST_DATE, 'YYYY'), 1 )\n     L_YR_TOTAL_DAYS  = DAYS_BETWEEN(L_YR_ST_DT_NEXT  , TRUNC(L_PERD_ST_DATE, 'YYYY') )\n       \n     \n\n     L_PERD_END_DATE  = ADD_DAYS(LEAST(CMP_ASSIGNMENT_SALARY_DATE_TO, L_PL_END_DATE) , 1 )\n     L_PERD_END_DATE  = LEAST(L_PERD_END_DATE, L_YR_ST_DT_NEXT)    \n     \n     \n     L_SALARY = CMP_ASSIGNMENT_SALARY_AMOUNT\n    \n   \n     \n     IF L_SALARY > 0 THEN\n     (\n       L_DAYS = DAYS_BETWEEN(L_PERD_END_DATE , L_PERD_ST_DATE )\n       \n       \n       IF ( CMP_ASSIGNMENT_SALARY_BASIS_CODE = 'HOURLY' ) THEN\n       (\n          L_TOTAL = L_TOTAL + (L_SALARY * CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR * L_DAYS/L_YR_TOTAL_DAYS * PER_ASG_FTE_VALUE)\n       )ELSE (\n        L_TOTAL = L_TOTAL + (L_SALARY * CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR * L_DAYS/L_YR_TOTAL_DAYS)\n       )\n\n       \n     )\n\n\n    \n           \n   \n     IF ( CMP_ASSIGNMENT_SALARY_DATE_TO > L_PERD_END_DATE ) THEN\n     (\n       L_PERD_ST_DATE  =  L_PERD_END_DATE\n       \n          \n       \n\n       IF (CMP_ASSIGNMENT_SALARY_DATE_TO WAS DEFAULTED AND CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM WAS NOT DEFAULTED \n             AND L_PERD_END_DATE > CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM\n           ) THEN\n          (\n             L_PERD_ST_DATE = CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM\n          )\n     )\n     ELSE (  \n        IF (CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM > ADD_DAYS(CMP_ASSIGNMENT_SALARY_DATE_TO,1) )THEN \n         ( \n           L_PERD_ST_DATE = CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM\n          )\n        ELSE \n         (\n         L_PERD_ST_DATE = LEAST(CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM, L_PERD_END_DATE)\n         ) \n      )   \n    \n       \n\n     IF (L_PERD_ST_DATE  <= L_PL_START_DATE  OR L_PERD_ST_DATE > L_PL_END_DATE ) THEN\n     (\n       EXIT\n     )\n   )\n \n)\n\nL_DATA = ESS_LOG_WRITE( 'END COMPENSATION_ELIGIBLE_SALARY_PRORATION_DAILY_AVERAGE' ) \nL_DEFAULT_VALUE = L_TOTAL\nRETURN  L_DATA_TYPE,L_DEFAULT_VALUE",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Calculates the prorated daily average of eligible salary for employees based on their daily earnings, accounting for part-time or variable work schedules. Adjusts for absences, leaves, or partial periods to determine the daily salary average. Returns the calculated daily average salary.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "CMP_ELIGIBLE_SALARY_PRORATION_DAILY_AVERAGE_NINETY_DAY_MIN",
        "FORMULA_TEXT": "DEFAULT FOR CMP_ASSIGNMENT_SALARY_AMOUNT IS 0\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_FROM IS '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_TO IS   '4712/12/31 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR IS 1\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM is '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_CURRENCY_CODE is 'XYZ' \nDEFAULT FOR PER_ASG_START_DATE IS '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_BASIS_CODE is 'XYZ' \nDEFAULT FOR PER_ASG_FTE_VALUE IS 1\n\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (text) ,CMP_IV_PLAN_END_DATE (text)\nDEFAULT FOR CMP_IV_PLAN_START_DATE   IS  '2001/01/01'\nDEFAULT FOR CMP_IV_PLAN_END_DATE     IS  '4012/01/01'\n\n\nL_DATA_TYPE = 'NUMBER'\nL_TOTAL    = 0\nL_SALARY = 0\nL_DAYS = 0\nL_COUNT = 0\nL_TOTAL_DAYS = 0\nL_DEFAULT_VALUE = 0\n\nL_DATA = ESS_LOG_WRITE( 'BEGIN COMPENSATION_ELIGIBLE_SALARY_PRORATION_DAILY_AVERAGE_MIN_NINETY' )\n\n\nL_PL_START_DATE      = TO_DATE(CMP_IV_PLAN_START_DATE,'YYYY/MM/DD')\nL_PL_END_DATE        = TO_DATE(CMP_IV_PLAN_END_DATE,'YYYY/MM/DD') \nL_YR_TOTAL_DAYS      = 0\nL_PERD_ST_DATE       =  TO_DATE(CMP_IV_PLAN_START_DATE,'YYYY/MM/DD') \nL_PERD_END_DATE      = TO_DATE(CMP_IV_PLAN_END_DATE,'YYYY/MM/DD')  \nL_YR_ST_DT_NEXT      = L_PL_START_DATE \nL_CURRENCY           = 'XYZ'\n\n\n\nL_PERD_ST_DATE = GREATEST(L_PERD_ST_DATE, PER_ASG_START_DATE)\n\n\n\n\nWHILE (L_COUNT <= 10) LOOP  \n(\n    L_SALARY = 0\n    L_DAYS = 0\n    L_COUNT = L_COUNT + 1\n    \n \n          \n   CHANGE_CONTEXTS(EFFECTIVE_DATE = L_PERD_ST_DATE)\n   (\n     \n        \n       IF (L_CURRENCY = 'XYZ') THEN \n       (\n          L_CURRENCY  = CMP_ASSIGNMENT_SALARY_CURRENCY_CODE \n       )\n       ELSE(\n         IF (L_CURRENCY <> CMP_ASSIGNMENT_SALARY_CURRENCY_CODE) THEN\n         (\n            L_TOTAL = -1 \n            EXIT\n         )\n      ) \n     \n     L_YR_ST_DT_NEXT  = ADD_YEARS(TRUNC(L_PERD_ST_DATE, 'YYYY'), 1 )\n     L_YR_TOTAL_DAYS  = DAYS_BETWEEN(L_YR_ST_DT_NEXT  , TRUNC(L_PERD_ST_DATE, 'YYYY') )\n     \n      \n\n     L_PERD_END_DATE  = ADD_DAYS(LEAST(CMP_ASSIGNMENT_SALARY_DATE_TO, L_PL_END_DATE) , 1 )\n     L_PERD_END_DATE  = LEAST(L_PERD_END_DATE, L_YR_ST_DT_NEXT)    \n     \n       \n     L_SALARY         = CMP_ASSIGNMENT_SALARY_AMOUNT\n    \n      \n     IF L_SALARY > 0 THEN\n     (\n       L_DAYS = DAYS_BETWEEN(L_PERD_END_DATE , L_PERD_ST_DATE )\n\n       \n\n       \n       IF ( CMP_ASSIGNMENT_SALARY_BASIS_CODE = 'HOURLY' ) THEN\n       (\n          L_TOTAL = L_TOTAL + (L_SALARY * CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR * L_DAYS/L_YR_TOTAL_DAYS * PER_ASG_FTE_VALUE)\n       ) ELSE (\n\n          L_TOTAL = L_TOTAL + (L_SALARY * CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR * L_DAYS/L_YR_TOTAL_DAYS)\n       )\n         \n       L_TOTAL_DAYS = L_TOTAL_DAYS + L_DAYS\n\n       \n\n     )\n\n\n    \n            \n      \n     IF ( CMP_ASSIGNMENT_SALARY_DATE_TO > L_PERD_END_DATE ) THEN\n     (\n       L_PERD_ST_DATE  =  L_PERD_END_DATE\n       \n      \n       IF (CMP_ASSIGNMENT_SALARY_DATE_TO WAS DEFAULTED AND CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM WAS NOT DEFAULTED \n             AND L_PERD_END_DATE > CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM\n           ) THEN\n          (\n             L_PERD_ST_DATE = CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM\n          )\n     )\n     ELSE (  \n        IF (CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM > ADD_DAYS(CMP_ASSIGNMENT_SALARY_DATE_TO,1) )THEN \n         ( \n           L_PERD_ST_DATE = CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM\n          )\n        ELSE \n         (\n         L_PERD_ST_DATE = LEAST(CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM, L_PERD_END_DATE)\n         ) \n      )   \n      \n      \n     IF (L_PERD_ST_DATE  <= L_PL_START_DATE  OR L_PERD_ST_DATE > L_PL_END_DATE ) THEN\n     (\n       EXIT\n     )\n   )\n   \n)\n\n \n\n IF (L_TOTAL_DAYS < 90 ) THEN \n    (\n      L_TOTAL = 0\n )\n L_DATA = ESS_LOG_WRITE( 'END COMPENSATION_ELIGIBLE_SALARY_PRORATION_DAILY_AVERAGE_MIN_NINETY' ) \nL_DEFAULT_VALUE = L_TOTAL\nRETURN  L_DATA_TYPE,L_DEFAULT_VALUE",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Calculates the prorated daily average of eligible salary for employees over a 90-day minimum period. Ensures the average reflects at least 90 days of data, adjusting for absences, leaves, or partial periods to determine the daily salary average. Returns the calculated daily average salary.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "CMP_ELIGIBLE_SALARY_PRORATION_DAILY_AVERAGE_USING_FTE",
        "FORMULA_TEXT": "DEFAULT FOR CMP_ASSIGNMENT_SALARY_AMOUNT IS 0\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_FROM IS '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_TO IS   '4712/12/31 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR IS 1\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM is '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_CURRENCY_CODE is 'XYZ' \nDEFAULT FOR PER_ASG_START_DATE IS '1900/01/01 00:00:00' (date)\nDEFAULT FOR PER_ASG_FTE_VALUE IS 1\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_BASIS_CODE is 'XYZ'\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (text) ,CMP_IV_PLAN_END_DATE (text)\nDEFAULT FOR CMP_IV_PLAN_START_DATE   IS  '2001/01/01'\nDEFAULT FOR CMP_IV_PLAN_END_DATE     IS  '4012/01/01'\n\n\nL_DATA_TYPE = 'NUMBER'\nL_TOTAL = 0\nL_SALARY = 0\nL_DAYS = 0\nL_COUNT = 0\nL_DEFAULT_VALUE = 0\n\nL_DATA = ESS_LOG_WRITE( 'BEGIN COMPENSATION_ELIGIBLE_SALARY_PRORATION_DAILY_AVERAGE_FTE' ) \n\nL_PL_START_DATE      = TO_DATE(CMP_IV_PLAN_START_DATE,'YYYY/MM/DD')\nL_PL_END_DATE        = TO_DATE(CMP_IV_PLAN_END_DATE,'YYYY/MM/DD') \nL_YR_TOTAL_DAYS      = 0\nL_PERD_ST_DATE       =  TO_DATE(CMP_IV_PLAN_START_DATE,'YYYY/MM/DD') \nL_PERD_END_DATE      = TO_DATE(CMP_IV_PLAN_END_DATE,'YYYY/MM/DD')  \nL_YR_ST_DT_NEXT      = L_PL_START_DATE \nL_CURRENCY           = 'XYZ'\n\n\nL_PERD_ST_DATE = GREATEST(L_PERD_ST_DATE, PER_ASG_START_DATE)\n\n\n\n\nWHILE (L_COUNT <= 10) LOOP  \n(\n    L_SALARY = 0\n    L_DAYS = 0\n    L_COUNT = L_COUNT + 1\n    \n   \n      \n   CHANGE_CONTEXTS(EFFECTIVE_DATE = L_PERD_ST_DATE)\n   (\n   \n   \n     \n\n      IF (L_CURRENCY = 'XYZ') THEN \n      (\n        L_CURRENCY  = CMP_ASSIGNMENT_SALARY_CURRENCY_CODE \n      )\n      ELSE(\n        IF (L_CURRENCY <> CMP_ASSIGNMENT_SALARY_CURRENCY_CODE) THEN\n        (\n         L_TOTAL = -1 \n         EXIT\n        )\n      ) \n      \n     L_YR_ST_DT_NEXT  = ADD_YEARS(TRUNC(L_PERD_ST_DATE, 'YYYY'), 1 )\n     L_YR_TOTAL_DAYS  = DAYS_BETWEEN(L_YR_ST_DT_NEXT  , TRUNC(L_PERD_ST_DATE, 'YYYY') )\n     \n      \n     L_PERD_END_DATE  = ADD_DAYS(LEAST(CMP_ASSIGNMENT_SALARY_DATE_TO, L_PL_END_DATE) , 1 )\n     L_PERD_END_DATE  = LEAST(L_PERD_END_DATE, L_YR_ST_DT_NEXT)    \n     \n         \n     L_SALARY         = CMP_ASSIGNMENT_SALARY_AMOUNT\n\n       \n\n     \n     IF L_SALARY > 0 THEN\n     (\n       L_DAYS = DAYS_BETWEEN(L_PERD_END_DATE , L_PERD_ST_DATE )\n       IF ( CMP_ASSIGNMENT_SALARY_BASIS_CODE = 'HOURLY' ) THEN (\n          \n           L_TOTAL = L_TOTAL + (L_SALARY * CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR *  L_DAYS/L_YR_TOTAL_DAYS)\n       )ELSE ( \n          L_TOTAL = L_TOTAL + (L_SALARY * CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR / PER_ASG_FTE_VALUE * L_DAYS/L_YR_TOTAL_DAYS)\n       )\n     )\n     \n\n\n            \n     IF ( CMP_ASSIGNMENT_SALARY_DATE_TO > L_PERD_END_DATE ) THEN\n     (\n       L_PERD_ST_DATE  =  L_PERD_END_DATE\n              \n       \n       IF (CMP_ASSIGNMENT_SALARY_DATE_TO WAS DEFAULTED AND CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM WAS NOT DEFAULTED \n             AND L_PERD_END_DATE > CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM\n           ) THEN\n          (\n             L_PERD_ST_DATE = CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM\n          )\n     )\n     ELSE (  \n        IF (CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM > ADD_DAYS(CMP_ASSIGNMENT_SALARY_DATE_TO,1) )THEN \n         ( \n           L_PERD_ST_DATE = CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM\n          )\n        ELSE \n         (\n         L_PERD_ST_DATE = LEAST(CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM, L_PERD_END_DATE)\n         ) \n      )   \n      \n       \n\n     IF (L_PERD_ST_DATE  <= L_PL_START_DATE  OR L_PERD_ST_DATE > L_PL_END_DATE ) THEN\n     (\n       EXIT\n     )\n   )\n \n)\nL_DATA = ESS_LOG_WRITE( 'END COMPENSATION_ELIGIBLE_SALARY_PRORATION_DAILY_AVERAGE_FTE' ) \nL_DEFAULT_VALUE = L_TOTAL\nRETURN  L_DATA_TYPE,L_DEFAULT_VALUE",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Calculates the prorated daily average of eligible salary for employees using full-time equivalent (FTE) data. Adjusts for part-time status or variable work schedules based on FTE, accounting for absences, leaves, or partial periods. Returns the calculated daily average salary.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "CMP_ELIGIBLE_SALARY_PRORATION_DAILY_AVERAGE_FOR_JOBS",
        "FORMULA_TEXT": "DEFAULT FOR CMP_ASSIGNMENT_SALARY_AMOUNT IS 0\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_FROM IS '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_TO IS   '4712/12/31 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR IS 1\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM is '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_CURRENCY_CODE is 'XYZ' \nDEFAULT FOR PER_ASG_JOB_CODE is 'XYZ' \nDEFAULT FOR PER_ASG_START_DATE IS '1900/01/01 00:00:00' (date)\nDEFAULT FOR PER_ASG_EFFECTIVE_END_DATE IS '4712/12/31 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_BASIS_CODE is 'XYZ' \nDEFAULT FOR PER_ASG_FTE_VALUE IS 1\n\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (text) ,CMP_IV_PLAN_END_DATE (text)\nDEFAULT FOR CMP_IV_PLAN_START_DATE   IS  '2001/01/01'\nDEFAULT FOR CMP_IV_PLAN_END_DATE     IS  '4012/01/01'\n\n\nL_DATA_TYPE = 'NUMBER'\nL_TOTAL = 0\nL_SALARY = 0\nL_DAYS = 0\nL_COUNT = 0\nL_DEFAULT_VALUE = 0\n\nL_DATA = ESS_LOG_WRITE( 'BEGIN COMPENSATION_ELIGIBLE_SALARY_PRORATION_DAILY_AVERAGE_FOR_JOBS' ) \n\n\n\nL_PL_START_DATE      = TO_DATE(CMP_IV_PLAN_START_DATE,'YYYY/MM/DD')\nL_PL_END_DATE        = TO_DATE(CMP_IV_PLAN_END_DATE,'YYYY/MM/DD') \nL_YR_TOTAL_DAYS      = 0\nL_PERD_ST_DATE       =  TO_DATE(CMP_IV_PLAN_START_DATE,'YYYY/MM/DD') \nL_PERD_END_DATE      = TO_DATE(CMP_IV_PLAN_END_DATE,'YYYY/MM/DD')  \nL_YR_ST_DT_NEXT      = L_PL_START_DATE \nL_CURRENCY           = 'XYZ'\n\n\n\nL_PERD_ST_DATE = GREATEST(L_PERD_ST_DATE, PER_ASG_START_DATE)\n\n\n\n\nWHILE (L_COUNT <= 10) LOOP  \n(\n    L_SALARY = 0\n    L_DAYS = 0\n    L_COUNT = L_COUNT + 1\n    \n    \n      \n   CHANGE_CONTEXTS(EFFECTIVE_DATE = L_PERD_ST_DATE)\n   (\n   \n    \n    IF (L_CURRENCY = 'XYZ') THEN \n      (\n        L_CURRENCY  = CMP_ASSIGNMENT_SALARY_CURRENCY_CODE \n      )\n      ELSE(\n        IF (L_CURRENCY <> CMP_ASSIGNMENT_SALARY_CURRENCY_CODE) THEN\n        (\n         L_TOTAL = -1 \n         EXIT\n        )\n      ) \n     \n     L_YR_ST_DT_NEXT  = ADD_YEARS(TRUNC(L_PERD_ST_DATE, 'YYYY'), 1 )\n     L_YR_TOTAL_DAYS  = DAYS_BETWEEN(L_YR_ST_DT_NEXT  , TRUNC(L_PERD_ST_DATE, 'YYYY') )\n     \n      \n\n     L_PERD_END_DATE  = ADD_DAYS(LEAST(CMP_ASSIGNMENT_SALARY_DATE_TO, L_PL_END_DATE,PER_ASG_EFFECTIVE_END_DATE) , 1 )\n     L_PERD_END_DATE  = LEAST(L_PERD_END_DATE, L_YR_ST_DT_NEXT)    \n\n     \n\n     L_SALARY         = CMP_ASSIGNMENT_SALARY_AMOUNT\n     \n     IF ( L_SALARY > 0  AND ( PER_ASG_JOB_CODE WAS NOT DEFAULTED AND PER_ASG_JOB_CODE = 'JOBOPMAN001' ))THEN\n     (\n       L_DAYS = DAYS_BETWEEN(L_PERD_END_DATE , L_PERD_ST_DATE )\n\n      \n\n\n\n       \n       IF ( CMP_ASSIGNMENT_SALARY_BASIS_CODE = 'HOURLY' ) THEN\n       (\n            L_TOTAL = L_TOTAL + (L_SALARY * CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR * L_DAYS/L_YR_TOTAL_DAYS * PER_ASG_FTE_VALUE)\n       )ELSE (\n\n           L_TOTAL = L_TOTAL + (L_SALARY * CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR * L_DAYS/L_YR_TOTAL_DAYS)\n       )\n       \n     )\n\n\n           \n\n     IF ( CMP_ASSIGNMENT_SALARY_DATE_TO > L_PERD_END_DATE ) THEN\n     (\n       L_PERD_ST_DATE  =  L_PERD_END_DATE\n       \n       \n       IF (CMP_ASSIGNMENT_SALARY_DATE_TO WAS DEFAULTED AND CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM WAS NOT DEFAULTED \n             AND L_PERD_END_DATE > CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM\n           ) THEN\n          (\n             L_PERD_ST_DATE = CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM\n          )\n     )\n     ELSE (  \n        IF (CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM > ADD_DAYS(CMP_ASSIGNMENT_SALARY_DATE_TO,1) )THEN \n         ( \n           L_PERD_ST_DATE = CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM\n          )\n        ELSE \n         (\n         L_PERD_ST_DATE = LEAST(CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM, L_PERD_END_DATE)\n         ) \n      )   \n      \n       \n     IF ( L_PERD_ST_DATE  > PER_ASG_EFFECTIVE_END_DATE ) THEN\n      (\n         L_PERD_ST_DATE = ADD_DAYS(PER_ASG_EFFECTIVE_END_DATE,1)\n     )\n      \n       \n     IF (L_PERD_ST_DATE  <= L_PL_START_DATE  OR L_PERD_ST_DATE > L_PL_END_DATE ) THEN\n     (\n       EXIT\n     )\n   )\n \n)\nL_DATA = ESS_LOG_WRITE( 'END COMPENSATION_ELIGIBLE_SALARY_PRORATION_DAILY_AVERAGE_FOR_JOBS' ) \nL_DEFAULT_VALUE = L_TOTAL\nRETURN  L_DATA_TYPE,L_DEFAULT_VALUE",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Calculates the prorated daily average of eligible salary for employees across multiple jobs or positions. Adjusts for different job roles, work schedules, and absences, ensuring accurate daily salary averaging. Returns the calculated daily average salary.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "CMP_ELIGIBLE_SALARY_PRORATION_MONTH_END_AVERAGE",
        "FORMULA_TEXT": "DEFAULT FOR CMP_ASSIGNMENT_SALARY_AMOUNT IS 0\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_FROM IS '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_TO IS   '4712/12/31 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR IS 1\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM is '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_CURRENCY_CODE is 'XYZ' \nDEFAULT FOR PER_ASG_START_DATE IS '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_BASIS_CODE is 'XYZ' \nDEFAULT FOR PER_ASG_FTE_VALUE IS 1\n\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (text) ,CMP_IV_PLAN_END_DATE (text)\nDEFAULT FOR CMP_IV_PLAN_START_DATE   IS  '2001/01/01'\nDEFAULT FOR CMP_IV_PLAN_END_DATE     IS  '4012/01/01'\n\n\nL_DATA_TYPE = 'NUMBER'\nL_TOTAL = 0\nL_SALARY = 0\nL_DAYS = 0\nL_COUNT = 0\nL_TOT_MONTHS = 0\nL_DEFAULT_VALUE = 0\n\n\n\nL_PL_START_DATE      = TO_DATE(CMP_IV_PLAN_START_DATE,'YYYY/MM/DD')\nL_PL_END_DATE        = TO_DATE(CMP_IV_PLAN_END_DATE,'YYYY/MM/DD') \nL_YR_TOTAL_DAYS      = 0\nL_PERD_ST_DATE       =  TO_DATE(CMP_IV_PLAN_START_DATE,'YYYY/MM/DD') \nL_PERD_END_DATE      = TO_DATE(CMP_IV_PLAN_END_DATE,'YYYY/MM/DD')  \nL_YR_ST_DT_NEXT      = L_PL_START_DATE \nL_CURRENCY           = 'XYZ'\nL_TOT_MONTHS         =  MONTHS_BETWEEN(L_PL_END_DATE, L_PL_START_DATE ) + 1\nL_DATA = ESS_LOG_WRITE( 'BEGIN COMPENSATION_ELIGIBLE_SALARY_PRORATION_DAILY_AVERAGE_MONTHLY' ) \n\n\nL_PERD_ST_DATE = GREATEST(L_PERD_ST_DATE, PER_ASG_START_DATE)\n\n\n\n\nCHANGE_CONTEXTS(EFFECTIVE_DATE =  L_PERD_ST_DATE) \n(\n  \n   IF (CMP_ASSIGNMENT_SALARY_DATE_FROM WAS DEFAULTED AND CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM >= L_PERD_ST_DATE ) THEN \n     (    \n     L_PERD_ST_DATE =  CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM \n   ) \n    \n   CHANGE_CONTEXTS(EFFECTIVE_DATE =  L_PERD_ST_DATE) \n   (\n      L_PERD_END_DATE = LEAST( LAST_DAY(L_PERD_ST_DATE) , L_PL_END_DATE)\n      \n      IF (  CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM WAS DEFAULTED  OR \n          ( CMP_ASSIGNMENT_SALARY_DATE_FROM WAS NOT DEFAULTED AND   CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM > ADD_DAYS(CMP_ASSIGNMENT_SALARY_DATE_TO,1) \n          )\n         ) THEN\n       ( \n          L_PERD_END_DATE = LEAST( CMP_ASSIGNMENT_SALARY_DATE_TO , L_PERD_END_DATE)\n      )\n   )\n)\n\n\nWHILE (L_COUNT <=  L_TOT_MONTHS ) LOOP  \n(\n    L_SALARY = 0\n    L_DAYS = 0\n    L_COUNT = L_COUNT + 1\n    \n   \n      \n   CHANGE_CONTEXTS(EFFECTIVE_DATE =  L_PERD_END_DATE)\n   (\n   \n       \n      L_YR_ST_DT_NEXT  = ADD_YEARS(TRUNC(L_PERD_ST_DATE, 'YYYY'), 1 )\n      L_YR_TOTAL_DAYS  = DAYS_BETWEEN(L_YR_ST_DT_NEXT  , TRUNC(L_PERD_ST_DATE, 'YYYY'))\n      L_SALARY         = CMP_ASSIGNMENT_SALARY_AMOUNT\n      IF (L_SALARY > 0) THEN\n      (\n         \n         IF (L_CURRENCY = 'XYZ') THEN \n           (\n              L_CURRENCY  = CMP_ASSIGNMENT_SALARY_CURRENCY_CODE \n         )\n          ELSE(\n           IF (L_CURRENCY <> CMP_ASSIGNMENT_SALARY_CURRENCY_CODE) THEN\n            (\n              L_TOTAL = -1 \n              EXIT\n           )\n         ) \n         \n         L_DAYS     = DAYS_BETWEEN(L_PERD_END_DATE , L_PERD_ST_DATE )+1\n\n        \n\n\n         \n         IF ( CMP_ASSIGNMENT_SALARY_BASIS_CODE = 'HOURLY' ) THEN\n         (\n          L_TOTAL    = L_TOTAL + (L_SALARY * CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR * L_DAYS/L_YR_TOTAL_DAYS * PER_ASG_FTE_VALUE)\n         ) ELSE (\n           L_TOTAL    = L_TOTAL + (L_SALARY * CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR * L_DAYS/L_YR_TOTAL_DAYS)\n         )\n        \n      )\n\n      \n\n      L_PERD_ST_DATE = ADD_DAYS(L_PERD_END_DATE, 1) \n\n     \n\n      IF ( (  CMP_ASSIGNMENT_SALARY_DATE_FROM WAS DEFAULTED OR CMP_ASSIGNMENT_SALARY_DATE_TO < L_PERD_ST_DATE)\n           AND  CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM >= L_PERD_ST_DATE\n         ) THEN \n        (\n          L_PERD_ST_DATE =  CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM\n      )\n     \n      \n   \n      L_PERD_END_DATE = LEAST( LAST_DAY(L_PERD_ST_DATE) , L_PL_END_DATE ) \n      IF ( L_PERD_ST_DATE < CMP_ASSIGNMENT_SALARY_DATE_TO \n          AND ( CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM WAS DEFAULTED  OR \n                ( CMP_ASSIGNMENT_SALARY_DATE_FROM WAS NOT DEFAULTED  \n                   AND   CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM > ADD_DAYS(CMP_ASSIGNMENT_SALARY_DATE_TO,1) \n                 )\n               )  \n         ) THEN\n       ( \n        L_PERD_END_DATE = LEAST( CMP_ASSIGNMENT_SALARY_DATE_TO , L_PERD_END_DATE)\n      )\n     \n      \n\n     IF (L_PERD_ST_DATE  < L_PL_START_DATE  OR L_PERD_ST_DATE > L_PL_END_DATE  OR  L_PERD_ST_DATE >  L_PERD_END_DATE ) THEN\n      ( \n        EXIT\n     )\n  \n   )\n)\n \nL_DATA = ESS_LOG_WRITE( 'END COMPENSATION_ELIGIBLE_SALARY_PRORATION_DAILY_AVERAGE_MONTHLY' ) \n\nL_DEFAULT_VALUE = L_TOTAL \nRETURN  L_DATA_TYPE,L_DEFAULT_VALUE",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Calculates the prorated monthly end average of eligible salary for employees. Adjusts for absences, leaves, or partial periods at the end of each month, ensuring the average reflects the full month’s earnings. Returns the calculated monthly end average salary.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BC_INCREMENT_ERRORS_2024",
        "FORMULA_TEXT": "DEFAULT FOR CMP_IV_ASSIGNMENT_ID  IS 0\nDEFAULT FOR ASG_HR_ASG_ID  IS 0\nDEFAULT FOR ACP_HIRE_DATE  IS '0001/01/01 00:00:00' (DATE) \nDEFAULT FOR PER_GRADE_STEP_EFFECTIVE_START_DATE IS '0001/01/01 00:00:00' (DATE) \nDEFAULT FOR PER_ASG_FULL_NAME  IS 'X'\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\n\n\nIF PER_ASG_ASSIGNMENT_NUMBER = 'E33189' OR PER_ASG_ASSIGNMENT_NUMBER = 'E52801' OR PER_ASG_ASSIGNMENT_NUMBER = 'E54283' OR PER_ASG_ASSIGNMENT_NUMBER = 'E62324' OR PER_ASG_ASSIGNMENT_NUMBER = 'E59247' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60271' OR PER_ASG_ASSIGNMENT_NUMBER = 'E52595' OR PER_ASG_ASSIGNMENT_NUMBER = 'E63886' OR PER_ASG_ASSIGNMENT_NUMBER = 'E63263' OR PER_ASG_ASSIGNMENT_NUMBER = 'E29790-3' OR PER_ASG_ASSIGNMENT_NUMBER = 'E31706' OR PER_ASG_ASSIGNMENT_NUMBER = 'E40195' OR PER_ASG_ASSIGNMENT_NUMBER = 'E36988' OR PER_ASG_ASSIGNMENT_NUMBER = 'E51690-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E47616-3' OR PER_ASG_ASSIGNMENT_NUMBER = 'E57238' OR PER_ASG_ASSIGNMENT_NUMBER = 'E52769' OR PER_ASG_ASSIGNMENT_NUMBER = 'E42970-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E23421' OR PER_ASG_ASSIGNMENT_NUMBER = 'E61711' OR PER_ASG_ASSIGNMENT_NUMBER = 'E51884-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E48446' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60181' OR PER_ASG_ASSIGNMENT_NUMBER = 'E47514' OR PER_ASG_ASSIGNMENT_NUMBER = 'E51077' OR PER_ASG_ASSIGNMENT_NUMBER = 'E53134' OR PER_ASG_ASSIGNMENT_NUMBER = 'E53335' OR PER_ASG_ASSIGNMENT_NUMBER = 'E52947' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60743' OR PER_ASG_ASSIGNMENT_NUMBER = 'E50244-3' OR PER_ASG_ASSIGNMENT_NUMBER = 'E32839-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60259' OR PER_ASG_ASSIGNMENT_NUMBER = 'E58792' OR PER_ASG_ASSIGNMENT_NUMBER = 'E49943' OR PER_ASG_ASSIGNMENT_NUMBER = 'E59835' OR PER_ASG_ASSIGNMENT_NUMBER = 'E17972-3' OR PER_ASG_ASSIGNMENT_NUMBER = 'E36811-4' OR PER_ASG_ASSIGNMENT_NUMBER = 'E61919' OR PER_ASG_ASSIGNMENT_NUMBER = 'E54454' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60794' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60629' OR PER_ASG_ASSIGNMENT_NUMBER = 'E58580' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60986' OR PER_ASG_ASSIGNMENT_NUMBER = 'E61401' OR PER_ASG_ASSIGNMENT_NUMBER = 'E52693' OR PER_ASG_ASSIGNMENT_NUMBER = 'E52297' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60738' OR PER_ASG_ASSIGNMENT_NUMBER = 'E59978' OR PER_ASG_ASSIGNMENT_NUMBER = 'E49676-3' OR PER_ASG_ASSIGNMENT_NUMBER = 'E58294' OR PER_ASG_ASSIGNMENT_NUMBER = 'E61814' OR PER_ASG_ASSIGNMENT_NUMBER = 'E62011' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60739' OR PER_ASG_ASSIGNMENT_NUMBER = 'E63322' OR PER_ASG_ASSIGNMENT_NUMBER = 'E62962' OR PER_ASG_ASSIGNMENT_NUMBER = 'E61739' OR PER_ASG_ASSIGNMENT_NUMBER = 'E38047-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E50161-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E50045-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E56330' OR PER_ASG_ASSIGNMENT_NUMBER = 'E47686' OR PER_ASG_ASSIGNMENT_NUMBER = 'E56904' OR PER_ASG_ASSIGNMENT_NUMBER = 'E54486' OR PER_ASG_ASSIGNMENT_NUMBER = 'E56226' OR PER_ASG_ASSIGNMENT_NUMBER = 'E54036' OR PER_ASG_ASSIGNMENT_NUMBER = 'E50268-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E49748-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E59656' OR PER_ASG_ASSIGNMENT_NUMBER = 'E52693-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E61102' OR PER_ASG_ASSIGNMENT_NUMBER = 'E61268' OR PER_ASG_ASSIGNMENT_NUMBER = 'E58203' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60575-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E29595-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E37088-3' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60715' OR PER_ASG_ASSIGNMENT_NUMBER = 'E62321' OR PER_ASG_ASSIGNMENT_NUMBER = 'E59939' OR PER_ASG_ASSIGNMENT_NUMBER = 'E57374' OR PER_ASG_ASSIGNMENT_NUMBER = 'E54013-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E58825' OR PER_ASG_ASSIGNMENT_NUMBER = 'E51162' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60199' OR PER_ASG_ASSIGNMENT_NUMBER = 'E46094' OR PER_ASG_ASSIGNMENT_NUMBER = 'E57403-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E47927-4' OR PER_ASG_ASSIGNMENT_NUMBER = 'E33795-3' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60811-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E63381' OR PER_ASG_ASSIGNMENT_NUMBER = 'E62699' OR PER_ASG_ASSIGNMENT_NUMBER = 'E57951' OR PER_ASG_ASSIGNMENT_NUMBER = 'E58767' OR PER_ASG_ASSIGNMENT_NUMBER = 'E58276' OR PER_ASG_ASSIGNMENT_NUMBER = 'E37588-3' OR PER_ASG_ASSIGNMENT_NUMBER = 'E53750-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E15268-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E52998' OR PER_ASG_ASSIGNMENT_NUMBER = 'E61713' OR PER_ASG_ASSIGNMENT_NUMBER = 'E61229' OR PER_ASG_ASSIGNMENT_NUMBER = 'E42448-7' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60746' OR PER_ASG_ASSIGNMENT_NUMBER = 'E54153-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E40256' OR PER_ASG_ASSIGNMENT_NUMBER = 'E56934' OR PER_ASG_ASSIGNMENT_NUMBER = 'E52184' OR PER_ASG_ASSIGNMENT_NUMBER = 'E27027' OR PER_ASG_ASSIGNMENT_NUMBER = 'E48434' OR PER_ASG_ASSIGNMENT_NUMBER = 'E51897' OR PER_ASG_ASSIGNMENT_NUMBER = 'E62377' OR PER_ASG_ASSIGNMENT_NUMBER = 'E25782' OR PER_ASG_ASSIGNMENT_NUMBER = 'E61543' OR PER_ASG_ASSIGNMENT_NUMBER = 'E60426' OR PER_ASG_ASSIGNMENT_NUMBER = 'E58469' OR PER_ASG_ASSIGNMENT_NUMBER = 'E57926' OR PER_ASG_ASSIGNMENT_NUMBER = 'E52224' OR PER_ASG_ASSIGNMENT_NUMBER = 'E54535' OR PER_ASG_ASSIGNMENT_NUMBER = 'E59294' OR PER_ASG_ASSIGNMENT_NUMBER = 'E1840' OR PER_ASG_ASSIGNMENT_NUMBER = 'E62004' OR PER_ASG_ASSIGNMENT_NUMBER = 'E47927-3' OR PER_ASG_ASSIGNMENT_NUMBER = 'E63322-2' OR PER_ASG_ASSIGNMENT_NUMBER = 'E62564' OR PER_ASG_ASSIGNMENT_NUMBER = 'E57553' OR PER_ASG_ASSIGNMENT_NUMBER = 'E52514' OR PER_ASG_ASSIGNMENT_NUMBER = 'E53713' OR PER_ASG_ASSIGNMENT_NUMBER = 'E42605' THEN\n(\n l_selected = 'Y'\n)\nELSE\n(\n l_selected = 'N'\n)\n\nl_debug = ess_log_write('l_selected= '+ (l_selected))\n\nRETURN l_selected",
        "LEGISLATIVE_DATA_GROUP": "GB Legislative Data Group",
        "Description": "Determines if an employee’s assignment number matches a predefined list of specific assignment numbers (e.g., E33189, E52801, etc.). If the assignment number matches any in the list, it sets l_selected to 'Y'; otherwise, it sets l_selected to 'N'. Logs the result for debugging purposes. Returns 'Y' or 'N' to indicate whether the employee is selected.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "CIMB_NIAGA_COMP_PERFORMANCE_BONUS_LAST_YEAR",
        "FORMULA_TEXT": "DEFAULT FOR CMP_IV_PLAN_START_DATE                        IS '2011/01/01'\nDEFAULT FOR CMP_IV_PLAN_END_DATE                          IS '2011/01/01'\nDEFAULT FOR CMP_IV_ITEM_NAME                              IS 'x'\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_AMOUNT                  IS 0\nDEFAULT FOR PER_HIST_ASG_ASSIGNMENT_ID                    IS EMPTY_NUMBER_NUMBER\nDEFAULT_DATA_VALUE FOR PER_HIST_ASG_ASSIGNMENT_ID         IS 18\nDEFAULT FOR PER_HIST_ASG_EFFECTIVE_START_DATE             IS EMPTY_DATE_NUMBER\nDEFAULT_DATA_VALUE FOR PER_HIST_ASG_EFFECTIVE_START_DATE  IS '1900/01/01 00:00:00'  (date)\nDEFAULT FOR PER_HIST_ASG_STATUS_TYPE                      IS EMPTY_TEXT_NUMBER\nDEFAULT_DATA_VALUE FOR PER_HIST_ASG_STATUS_TYPE           IS 'N/A'\nDEFAULT FOR PER_HIST_ASG_NAME                             IS EMPTY_TEXT_NUMBER\nDEFAULT_DATA_VALUE FOR PER_HIST_ASG_NAME                  IS 'N/A'\nDEFAULT FOR PER_HIST_ASG_PAY_RELATIONSHIP_ID              IS EMPTY_NUMBER_NUMBER\nDEFAULT_DATA_VALUE FOR PER_HIST_ASG_PAY_RELATIONSHIP_ID   IS 0\n\nDEFAULT FOR ELEMENT_ENTRY_EFFECTIVE_START_DATE            IS EMPTY_DATE_NUMBER\nDEFAULT_DATA_VALUE FOR ELEMENT_ENTRY_EFFECTIVE_START_DATE IS '1900/01/01 00:00:00'  (date)\nDEFAULT FOR ELEMENT_ENTRY_EFFECTIVE_END_DATE              IS EMPTY_DATE_NUMBER\nDEFAULT_DATA_VALUE FOR ELEMENT_ENTRY_EFFECTIVE_END_DATE   IS '1900/01/01 00:00:00'  (date)\nDEFAULT FOR ELEMENT_ENTRY_BASE_ELEMENT_NAME               IS EMPTY_TEXT_NUMBER\nDEFAULT_DATA_VALUE FOR ELEMENT_ENTRY_BASE_ELEMENT_NAME    IS 'N/A'\nDEFAULT FOR ELEMENT_ENTRY_VALUE                           IS EMPTY_TEXT_NUMBER\nDEFAULT_DATA_VALUE FOR ELEMENT_ENTRY_VALUE                IS 'N/A'\nDEFAULT FOR ELEMENT_ENTRY_BASE_VALUE_NAME                 IS EMPTY_TEXT_NUMBER\nDEFAULT_DATA_VALUE FOR ELEMENT_ENTRY_BASE_VALUE_NAME      IS 'N/A'\nDEFAULT FOR ELEMENT_ENTRY_INPUT_CURRENCY_CODE             IS EMPTY_TEXT_NUMBER\nDEFAULT_DATA_VALUE FOR ELEMENT_ENTRY_INPUT_CURRENCY_CODE  IS 'N/A'\n\n\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_CURRENCY_CODE           IS 'N/A'\n\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (text)\n,          CMP_IV_PLAN_END_DATE (text)\n,          CMP_IV_PLAN_EXTRACTION_DATE (text)\n,          CMP_IV_ITEM_NAME (text)\n\n\nNumber_YEARS_Backwards = 0   \nDAY   = '01'                   \nMONTH = '01'\n\nRATE_DAY   = '01'                   \nRATE_MONTH = '01'\n\n\nL_PL_START_YEAR     = TO_CHAR(TRUNC(TO_DATE(CMP_IV_PLAN_START_DATE,'YYYY/MM/DD'), 'YYYY'),'YYYY')\nL_PL_START_MONTH    = TO_CHAR(TRUNC(TO_DATE(CMP_IV_PLAN_START_DATE,'YYYY/MM/DD'), 'MM'),'MM')\nL_PL_START_YEAR_1_N = TO_NUMBER(L_PL_START_YEAR) - Number_YEARS_Backwards\nL_PL_START_YEAR_1_C = TO_CHAR(L_PL_START_YEAR_1_N)\nL_PL_START_DATE     = LAST_DAY(TO_DATE(DAY || '/' || L_PL_START_MONTH || '/' ||L_PL_START_YEAR_1_C,'DD/MM/YYYY'))\nL_PL_START_DATE = TO_DATE(CMP_IV_PLAN_START_DATE,'YYYY/MM/DD')\n\nL_PL_END_YEAR       = TO_CHAR(TRUNC(TO_DATE(CMP_IV_PLAN_END_DATE,'YYYY/MM/DD'), 'YYYY'),'YYYY')\nL_PL_END_MONTH      = TO_CHAR(TRUNC(TO_DATE(CMP_IV_PLAN_END_DATE,'YYYY/MM/DD'), 'MM'),'MM')\nL_PL_END_YEAR_1_N   = TO_NUMBER(L_PL_END_YEAR) - Number_YEARS_Backwards\nL_PL_END_YEAR_1_C   = TO_CHAR(L_PL_END_YEAR_1_N)\nL_PL_END_DATE       = LAST_DAY(TO_DATE(DAY || '/' || L_PL_END_MONTH || '/' ||L_PL_END_YEAR_1_C,'DD/MM/YYYY'))\n\nL_ASSIGNMENT     = 0\nL_ASSIGNMENT_OLD = 'N/A'\nL_AMOUNT         = 0\nL_TOTAL          = 0\n\nL_CURRENCY       = 'N/A'\nL_CURRENCY       = CMP_ASSIGNMENT_SALARY_CURRENCY_CODE\nL_CURRENCY_C     = 'N/A'\nL_ELEMENT_NAME   = ' '\n\nL_ENABLE_LOGGING = 'N'\nL_ENABLE_LOGGING = GET_TABLE_VALUE('CIMB_NIAGA_COMP_GLOBAL_PARAMETERS','ENTRY','ENABLE_LOGGING','N')\n\nIF(L_ENABLE_LOGGING = 'Y') THEN (RET = ESS_LOG_WRITE( 'Item Name                ' || CMP_IV_ITEM_NAME ))\n\nWHILE(L_PL_START_DATE <= L_PL_END_DATE) \nLOOP\n(\n I = PER_HIST_ASG_PAY_RELATIONSHIP_ID.FIRST(-1234)\n L_ASSIGNMENT_OLD = 'N/A'\n\n\n\n WHILE (PER_HIST_ASG_PAY_RELATIONSHIP_ID.EXISTS(I)) \n LOOP\n  (              \n\n   L_ASSIGNMENT = PER_HIST_ASG_PAY_RELATIONSHIP_ID[I]\n\n   IF (L_ASSIGNMENT <> 0 AND INSTR(L_ASSIGNMENT_OLD, TO_CHAR(L_ASSIGNMENT)) = 0) \n   THEN\n    (        \n\n     CHANGE_CONTEXTS(PAYROLL_RELATIONSHIP_ID = L_ASSIGNMENT, DATE_EARNED = L_PL_START_DATE)\n      (\n       J = ELEMENT_ENTRY_EFFECTIVE_START_DATE.FIRST(-1234)\n\n       WHILE (ELEMENT_ENTRY_BASE_ELEMENT_NAME.EXISTS(J))\n       LOOP\n        (\n\n         IF (UPPER(ELEMENT_ENTRY_BASE_ELEMENT_NAME[J]) = 'PERFORMANCE BONUS' ) \n         THEN\n          (                                                                                              \nIF(L_ENABLE_LOGGING = 'Y') THEN (           RET = ESS_LOG_WRITE( '--Element Name           ' || ELEMENT_ENTRY_BASE_ELEMENT_NAME[J]))\nIF(L_ENABLE_LOGGING = 'Y') THEN (           RET = ESS_LOG_WRITE( '--Element Input          ' || ELEMENT_ENTRY_VALUE[J] ))\nIF(L_ENABLE_LOGGING = 'Y') THEN (           RET = ESS_LOG_WRITE( '--Element Input Value    ' || ELEMENT_ENTRY_BASE_VALUE_NAME[J] ))\nIF(L_ENABLE_LOGGING = 'Y') THEN (           RET = ESS_LOG_WRITE( '--Element Start Date     ' || TO_CHAR(ELEMENT_ENTRY_EFFECTIVE_START_DATE[J])))\nIF(L_ENABLE_LOGGING = 'Y') THEN (           RET = ESS_LOG_WRITE( '--Element Input Currency ' || ELEMENT_ENTRY_INPUT_CURRENCY_CODE[J]))\n\n           IF (ELEMENT_ENTRY_BASE_VALUE_NAME[J] = 'Amount' AND ELEMENT_ENTRY_VALUE[J] <> 'N/A') \n           THEN\n            (                                                                                             \n\n             L_INPUT_CURRENCY = ELEMENT_ENTRY_INPUT_CURRENCY_CODE[J]\n             L_AMOUNT = TO_NUMBER(ELEMENT_ENTRY_VALUE[J])\n  IF(L_ENABLE_LOGGING = 'Y') THEN (RET = ESS_LOG_WRITE( 'L_AMOUNT               ' || TO_CHAR(L_AMOUNT)))\n  L_TOTAL = L_TOTAL+L_AMOUNT\n  IF(L_ENABLE_LOGGING = 'Y') THEN (RET = ESS_LOG_WRITE( 'L_TOTAL                ' || TO_CHAR(L_TOTAL)))\n\n            )\n          )\n         J = ELEMENT_ENTRY_EFFECTIVE_START_DATE.NEXT(J,-1234)\n        )\n      )\n     L_ASSIGNMENT_OLD = L_ASSIGNMENT_OLD || ',' || TO_CHAR(L_ASSIGNMENT)\n    )\n   I = PER_HIST_ASG_PAY_RELATIONSHIP_ID.NEXT(I, -1234)\n  )\n L_PL_START_DATE = ADD_MONTHS(L_PL_START_DATE, 1)\n \n)\n\nL_DEFAULT_VALUE = L_TOTAL\nL_EXTR_DATE = TO_DATE(CMP_IV_PLAN_EXTRACTION_DATE,'YYYY/MM/DD')\n\nL_DATA_TYPE     = 'NUMBER'\n\nRETURN L_DEFAULT_VALUE, L_DATA_TYPE",
        "LEGISLATIVE_DATA_GROUP": "CIMB Indonesia",
        "Description": "Calculates the performance bonus for Niaga employees based on their performance metrics from the previous year. Adjusts for absences, leaves, or partial periods, ensuring alignment with company policies and performance criteria. Returns the calculated bonus amount.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "CIMB_COMP_MINUS_1_COMPENSATION",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_PERSON_ID IS 0\n    \nINPUTS ARE CMP_IV_PLAN_START_DATE (text) \n,          CMP_IV_PLAN_END_DATE (text)\n\n\nlc_person_id = ' '\nlc_comp_start_date = ' '\nlc_comp_end_date= ' '\nRULE_VALUE = ' '\n\nlc_person_id  = TO_CHAR(PER_ASG_PERSON_ID)\n\nlc_comp_start_date = TO_CHAR(ADD_YEARS(TO_DATE(CMP_IV_PLAN_START_DATE),0),'YYYY-MM-DD')\nlc_comp_end_date= TO_CHAR(ADD_YEARS(TO_DATE(CMP_IV_PLAN_END_DATE),0),'YYYY-MM-DD')\n\n\n\n\n\n\nl_ess_log = ESS_LOG_WRITE ('Person ID:    '|| lc_person_id  ||'   Start Date   : ' || lc_comp_start_date || '  End Date   : '  || lc_comp_end_date)\n\nRULE_VALUE = GET_VALUE_SET('CIMB_COMP_RATING_LAST_YEAR','|=Person_ID='||lc_person_id||'|COMP_START_DATE='||lc_comp_start_date||'|COMP_END_DATE='|| lc_comp_end_date)\nl_ess_log = ESS_LOG_WRITE ('Rule Value returned :  ' || RULE_VALUE)\n\nL_DEFAULT_VALUE = RULE_VALUE\n\n\nl_ess_log = ESS_LOG_WRITE ('N-1 Default Value returned :  ' || L_DEFAULT_VALUE)\n\n\nRETURN L_DEFAULT_VALUE",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Adjusts compensation for employees by subtracting a specific compensation component (e.g., bonus, allowance) labeled as \"1\". Accounts for absences, leaves, or policy changes to determine the net compensation. Returns the adjusted compensation amount.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "CIMB_COMP_MINUS_2_COMPENSATION",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_PERSON_ID IS 0\n    \nINPUTS ARE CMP_IV_PLAN_START_DATE (text) \n,          CMP_IV_PLAN_END_DATE (text)\n\n\nlc_person_id = ' '\nlc_comp_start_date = ' '\nlc_comp_end_date= ' '\nRULE_VALUE = ' '\n\nlc_person_id  = TO_CHAR(PER_ASG_PERSON_ID)\n\nlc_comp_start_date = TO_CHAR(ADD_YEARS(TO_DATE(CMP_IV_PLAN_START_DATE),-1),'YYYY-MM-DD')\nlc_comp_end_date= TO_CHAR(ADD_YEARS(TO_DATE(CMP_IV_PLAN_END_DATE),-1),'YYYY-MM-DD')\n\nl_ess_log = ESS_LOG_WRITE ('Person ID:    '|| lc_person_id  ||'   Start Date   : ' || lc_comp_start_date || '  End Date   : '  || lc_comp_end_date)\n\n\nRULE_VALUE = GET_VALUE_SET('CIMB_COMP_RATING_TWO_YEARS_BACK_LATEST','|=Person_ID='||lc_person_id||'|COMP_START_DATE='||lc_comp_start_date||'|COMP_END_DATE='|| lc_comp_end_date)\n\nl_ess_log = ESS_LOG_WRITE ('Rule Value N-MIN-2 returned :  ' || RULE_VALUE)\n\n\nL_DEFAULT_VALUE = RULE_VALUE\n\nl_ess_log = ESS_LOG_WRITE ('Default Value N-MIN-2 returned :  ' || L_DEFAULT_VALUE)\n\n\nRETURN L_DEFAULT_VALUE",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Adjusts compensation for employees by subtracting a specific compensation component (e.g., bonus, allowance) labeled as \"2\". Accounts for absences, leaves, or policy changes to determine the net compensation. Returns the adjusted compensation amount.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "LCC INCREMENT 2021",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER IS 'X'\nl_selected = 'N'\n\nx = ess_log_write('Person selection Assignment Number: ' + PER_ASG_ASSIGNMENT_NUMBER)\n\nl_increment_eligible = 'X'\n\n\nl_increment_eligible = GET_LOOKUP_MEANING('EMG_INCREMENT_DATES',PER_ASG_ASSIGNMENT_NUMBER,'X')\n\nx = ess_log_write('Increment Eligible: ' + l_increment_eligible)\n\nif l_increment_eligible <>'X' then\n(\n l_selected = 'Y'\n)\n\nRETURN l_selected",
        "LEGISLATIVE_DATA_GROUP": "East Midlands Group",
        "Description": "Calculates the increment for employees in 2021 under the LCCC (likely a company or region-specific code) based on performance, tenure, or grade. Adjusts for absences, leaves, or partial periods, ensuring alignment with company policies for salary increases. Returns the calculated increment amount or eligibility status.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "LBH EXCLUDE INCREMENT RULE",
        "FORMULA_TEXT": "Default for CMP_IV_ASSIGNMENT_ID is 0\nDefault for ASG_HR_ASG_ID is 0\nDEFAULT FOR ACP_HIRE_DATE IS '0001/01/01 00:00:00' (date)\nDEFAULT FOR PER_ASG_GRADE_LADDER_NAME IS 'X'\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'XX'\nDEFAULT FOR PER_ASG_ASSIGNMENT_STATUS_TYPE_LOOKUP_MEANING is 'XXX'\nDEFAULT For PER_ASG_POSITION_NAME is ' '\nDefault for PER_ASG_FULL_NAME is 'XXXX'\nDEFAULT For PER_ASG_ATTRIBUTE4 is ' '\nDEFAULT_DATA_VALUE FOR PER_EXT_ASG_SYSTEM_PERSON_TYPE IS ' '\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 IS ' '\nDefault for PER_ASG_ORG_DEPARTMENT_NAME is ' '\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT3 IS ' '\nDEFAULT FOR PER_ASG_STANDARD_WORKING_HOURS is 0\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 IS ' '\nDEFAULT For PER_ASG_SPECIAL_CEILING_STEP_NAME is 'XXXX'\nDEFAULT For PER_ASG_PERSON_NUMBER is 'XXABC'\nDEFAULT FOR PER_ASG_USER_PERSON_TYPE is 'X'\n\n\n\n \n\nDEFAULT FOR PER_ASG_REL_DATE_START IS '0001/01/01 00:00:00' (date)\n\n \n\n\nASG_NUMBER = 'X'\nASG_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nl_hr_asg_id = ASG_HR_ASG_ID\nL_ELIGIBLE='Y'\nl_start_dt='0001/01/01 00:00:00' (date)\n\n \n\n \n\n \n\nASG_STATUS = 'XXX'\nASG_STATUS = PER_ASG_ASSIGNMENT_STATUS_TYPE_LOOKUP_MEANING\nl_hr_asg_id = ASG_HR_ASG_ID\nL_ELIGIBLE='Y'\nl_start_dt='0001/01/01 00:00:00' (date)\n\n \n\n \n\n \n\n x = ess_log_write('----------in person selection for '||PER_ASG_ASSIGNMENT_NUMBER )\n x = ess_log_write('----------in person selection for Asg Status '||PER_ASG_ASSIGNMENT_STATUS_TYPE_LOOKUP_MEANING )\n\n \n\n\nCHANGE_CONTEXTS(EFFECTIVE_DATE = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00' (date)))\n(\nl_start_dt = PER_ASG_REL_DATE_START\n\n \n\nCurrent_date=get_context(effective_date, '0001/01/01 00:00:00'(date))\nService_months=0\n\n \n\nx = ess_log_write('Current_date ' + to_char(Current_date,'DD-Mon-YYYY'))\n\n \n\n \nif ACP_HIRE_DATE was defaulted then\n(\nl_start_dt = PER_ASG_REL_DATE_START\n)\nelse\n(\nl_start_dt = ACP_HIRE_DATE\n)\n)\n\n \n\nService_months = MONTHS_BETWEEN(Current_date,l_start_dt)\n\n \n\nx = ess_log_write(' Start Date: ' + to_char(l_start_dt))\nx = ess_log_write(' Length of Service: ' + to_char(Service_months))\n\n \n\n\nl_sub_date = substr(to_char(Current_date),1,10)\nl_yyyy = substr(l_sub_date,1,4)\nl_mm = substr(l_sub_date,6,2)\nl_dd = substr(l_sub_date,9,2)\nl_debug = ess_log_write('l_yyyy= '+ (l_yyyy))\nl_debug = ess_log_write('l_mm= '+ (l_mm))\nl_debug = ess_log_write('l_dd= '+ (l_dd))\n\n \n\n\nCeiling_Step  = (GET_VALUE_SET('LBH_CELLING_STEP','|=P_ASSIGNMENT_ID='''||to_char(l_hr_asg_id)||''''||'|P_YEAR='''||(l_yyyy)||''''|| '|P_MONTH=''' ||(l_mm)||''''||'|P_DAY='''||(l_dd)||''''))\n\n \n\n \nx = ess_log_write(' Grade Ceiling Step: ' + (Ceiling_Step))\n \nif to_char(Current_date,'YYYY') = to_char(l_start_dt , 'YYYY')\nthen\nl_date = Current_date\nelse\nl_date = add_months(Current_date , -12)\n\n \n\n\nx = ess_log_write(' l_date: ' + to_char(l_date))\nx = ess_log_write(' lookup meaning: ' + PER_ASG_ASSIGNMENT_STATUS_TYPE_LOOKUP_MEANING)\n\n \n\n\nif Ceiling_Step = 'Y'\nTHEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('Employee Reached ceiling point ')\n)\n \n\n \n\n\nIF(           \n\n \n\n     (to_date(to_char(l_start_dt , 'DD-MM-YYYY')) >= to_date('1-10-'||to_char(l_date , 'YYYY')))\n     and \n     (to_date(to_char(l_start_dt , 'DD-MM-YYYY')) <= to_date('31-03-'||to_char(l_date , 'YYYY')))\n     AND Service_months <=6\n     \n )\nTHEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('new starters condition')\n)\n\n \n\n\nIF (PER_ASG_PEOPLE_GROUP_SEGMENT1= 'Casuals' and PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Sessional LG')\nTHEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('PPG T & C condition: ')\n)\n\n \n\n\nIF (PER_ASG_STANDARD_WORKING_HOURS = 0)\nTHEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('Working Hours condition: ')\n)\n\n\n\n\nl_type = PER_ASG_USER_PERSON_TYPE\n\n\nIF (l_type = 'Contingent Worker') THEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('Employee Type condition: ')\n) \n\n\nIF ( PER_ASG_POSITION_NAME = '20081.Sessional' OR PER_ASG_POSITION_NAME = '21888.Apprentice' OR PER_ASG_POSITION_NAME = '10006853.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '102104.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10000018.Casual Registrar' OR \nPER_ASG_POSITION_NAME = '101979.Welfare Escort (Casual)' OR \nPER_ASG_POSITION_NAME = '10006857.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10006970.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10006971.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10006859.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10008229.Mini Bus Driver (Casual)' OR \nPER_ASG_POSITION_NAME = '10008231.Mini Bus Driver (Casual)' OR \nPER_ASG_POSITION_NAME = '10006861.Kitchen Asst (Casual) 1' OR \nPER_ASG_POSITION_NAME = '0006862.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10009027.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10008232.Mini Bus Driver (Casual)' OR \nPER_ASG_POSITION_NAME = '10006973.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10007543.Casual Registrar' OR \nPER_ASG_POSITION_NAME = '10006900.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10008060.Casual Assistant - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10006974.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10008063.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10020002.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10006905.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10008235.Mini Bus Driver (Casual)' OR \nPER_ASG_POSITION_NAME = '101916.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10006908.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10006976.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10008237.Mini Bus Driver (Casual)' OR \nPER_ASG_POSITION_NAME = '10006977.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10009169.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10006978.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10006894.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10008240.Mini Bus Driver (Casual)' OR \nPER_ASG_POSITION_NAME = '10006979.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10006911.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10008782.Casual Assistant - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10009163.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10009211.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10003887.Casual Assistant - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10006907.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10006877.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10007546.Casual Registrar' OR \nPER_ASG_POSITION_NAME = '10008781.Casual Assistant - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10006893.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10006895.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10006898.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10009225.Casual Registrar' OR \nPER_ASG_POSITION_NAME = '10008230.Mini Bus Driver (Casual)' OR \nPER_ASG_POSITION_NAME = '10020006.Kitchen Asst (casual)' OR \nPER_ASG_POSITION_NAME = '10008929.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10008787.Casual Assistant - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10008683.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10006854.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10008786.Casual Assistant - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10006867.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10008789.Casual Assistant - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10008790.Casual Assistant - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10007544.Casual Registrar' OR \nPER_ASG_POSITION_NAME = '10006901.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10008982.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10006902.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10007545.Casual Registrar' OR \nPER_ASG_POSITION_NAME = '10006903.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10008061.Casual Assistant - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10008785.Casual Assistant - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10009227.Casual Registrar' OR \nPER_ASG_POSITION_NAME = '10006872.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10008783.Casual Assistant - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10008062.Casual Assistant - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10006906.Casual Governing Body Clerk' OR \nPER_ASG_POSITION_NAME = '10006875.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10008236.Mini Bus Driver (Casual)' OR \nPER_ASG_POSITION_NAME = '10006876.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10006975.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10006878.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10008239.Mini Bus Driver (Casual)' OR \nPER_ASG_POSITION_NAME = '10008784.Casual Assistant - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10008682.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10006980.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10006885.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10008064.Casual Assistant - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10006981.Casual Tutor - Fairkytes' OR \nPER_ASG_POSITION_NAME = '10008969.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10009226.Casual Registrar' OR \nPER_ASG_POSITION_NAME = '10008684.Kitchen Asst (Casual)' OR \nPER_ASG_POSITION_NAME = '10009029.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006516.PCV Driver' OR \nPER_ASG_POSITION_NAME = '105908.EH & YOT Intervention Worker' OR \nPER_ASG_POSITION_NAME = '10006594.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006597.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '100252.PCV Driver' OR \nPER_ASG_POSITION_NAME = '10006608.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006525.PCV Driver' OR \nPER_ASG_POSITION_NAME = '10006697.Sports Coach/Activity Leader' OR \nPER_ASG_POSITION_NAME = '10007320.Learning Support Assistant' OR \nPER_ASG_POSITION_NAME = '10006532.PCV Driver' OR \nPER_ASG_POSITION_NAME = '10008947.Learning Support Assistant' OR \nPER_ASG_POSITION_NAME = '10007431.EH & YOT Intervention Worker' OR \nPER_ASG_POSITION_NAME = '10006634.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006636.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006699.Sports Coach/Activity Leader' OR \nPER_ASG_POSITION_NAME = '10007433.EH & YOT Intervention Worker' OR \nPER_ASG_POSITION_NAME = '10003570.Fairkytes Live Assistant' OR \nPER_ASG_POSITION_NAME = '10007321.Learning Support Assistant' OR \nPER_ASG_POSITION_NAME = '10007322.Learning Support Assistant' OR \nPER_ASG_POSITION_NAME = '10003761.Day Opportunities Officer' OR \nPER_ASG_POSITION_NAME = '10007323.Learning Support Assistant' OR \nPER_ASG_POSITION_NAME = '10006654.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10008948.Learning Support Assistant' OR \nPER_ASG_POSITION_NAME = '10006536.PCV Driver' OR \nPER_ASG_POSITION_NAME = '10008945.Learning Support Assistant' OR \nPER_ASG_POSITION_NAME = '10006528.PCV Driver' OR \nPER_ASG_POSITION_NAME = '100615.Sports Coach/Activity Leader' OR \nPER_ASG_POSITION_NAME = '10008660.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006591.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006592.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10008648.PCV Driver' OR \nPER_ASG_POSITION_NAME = '10006690.Sports Coach/Activity Leader' OR \nPER_ASG_POSITION_NAME = '10009080.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006598.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10007428.EH & YOT Intervention Worker  ' OR \nPER_ASG_POSITION_NAME = '10008659.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006523.Driver' OR \nPER_ASG_POSITION_NAME = '10006606.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006611.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006695.Sports Coach/Activity Leader' OR \nPER_ASG_POSITION_NAME = '10006696.Sports Coach/Activity Leader' OR \nPER_ASG_POSITION_NAME = '10008663.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10008672.Sports Coach/Activity Leader' OR \nPER_ASG_POSITION_NAME = '10007429.EH & YOT Intervention Worker' OR \nPER_ASG_POSITION_NAME = '10006698.Sports Coach/Activity Leader' OR \nPER_ASG_POSITION_NAME = '10007430.EH & YOT Intervention Worker' OR \nPER_ASG_POSITION_NAME = '10007432.EH & YOT Intervention Worker' OR \nPER_ASG_POSITION_NAME = '10008234.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006642.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006646.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006701.Sports Coach/Activity Leader' OR \nPER_ASG_POSITION_NAME = '10006648.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006652.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006548.PCV Driver' OR \nPER_ASG_POSITION_NAME = '10009074.Crematorium Operative Covid19' OR \nPER_ASG_POSITION_NAME = '10006702.Sports Coach/Activity Leader' OR \nPER_ASG_POSITION_NAME = '10008657.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10006619.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '102166.Registration & Ceremonies Officer' OR \nPER_ASG_POSITION_NAME = '104550.Kitchen Assistant' OR \nPER_ASG_POSITION_NAME = '10004045.Kitchen Supervisor' OR \nPER_ASG_POSITION_NAME = '10007169.Kitchen Assistant' OR \nPER_ASG_POSITION_NAME = '104556.Kitchen Assistant' OR \nPER_ASG_POSITION_NAME = '104548.Assistant Cook' OR \nPER_ASG_POSITION_NAME = '104573.Assistant Cook' OR \nPER_ASG_POSITION_NAME = '10006639.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '105150.Kitchen Assistant' OR \nPER_ASG_POSITION_NAME = '104632.Assistant Cook' OR \nPER_ASG_POSITION_NAME = '10007148.Kitchen Assistant' OR \nPER_ASG_POSITION_NAME = '104453.Dance Instructor' OR \nPER_ASG_POSITION_NAME = '10005679.Assistant Cook' OR \nPER_ASG_POSITION_NAME = '10009021.Kitchen Assistant' OR \nPER_ASG_POSITION_NAME = '10006604.Passenger Assistant' OR \nPER_ASG_POSITION_NAME = '10007100.Kitchen Assistant' OR \nPER_ASG_POSITION_NAME = '104595.Kitchen Assistant')\n\nTHEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('Position condition: ')\n)\n\nIF (PER_ASG_ORG_DEPARTMENT_NAME= 'Newham Employee')\nTHEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('Department condition: ')\n)\n\nIF (PER_ASG_PEOPLE_GROUP_SEGMENT3= 'Casual Payment (Hourly Rate)' OR PER_ASG_PEOPLE_GROUP_SEGMENT3 = 'Casual Payment (Spinal Scale)' OR PER_ASG_PEOPLE_GROUP_SEGMENT3 = 'Casual Payment (Spot Rate)' )\nTHEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('PPG Salary condition: ')\n)\n \n\n x = ess_log_write('----------in person selection for '||PER_ASG_PERSON_NUMBER )\n x = ess_log_write('L_ELIGIBLE '||L_ELIGIBLE)\n x = ess_log_write('----------end of person selection formula------------' )\n\n \n\nRETURN L_ELIGIBLE",
        "LEGISLATIVE_DATA_GROUP": "London Borough of Havering",
        "Description": "Determines if an employee under LBH (likely a business unit or region) should be excluded from receiving increments. Checks criteria such as assignment status, service tenure (less than or equal to 6 months for new starters between October 1 and March 31), grade ceiling status, people group segments (e.g., Casuals, Sessional LG), standard working hours (zero hours), employee type (Contingent Worker), specific position names (e.g., casual or part-time roles), and department (Newham Employee). Logs debug information for tracking. Returns 'Y' if eligible for increment, 'N' if excluded.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "KANEKA PRORATED MINIMUM BONUS OVERRIDE FF",
        "FORMULA_TEXT": "DEFAULT for ACP_HIRE_DATE is '4712/12/31 00:00:00' (date)\nDEFAULT for BASIC_SALARY_AMOUNT_ASG_ENTRY_VALUE is 0\nProrated_Bonus = 0\n\n\nl_no_of_Months=MONTHS_BETWEEN(GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00' (date)),ACP_HIRE_DATE)\nl_length_of_service = l_no_of_Months\nBasic_Salary = (BASIC_SALARY_AMOUNT_ASG_ENTRY_VALUE/12)\n\nProration_Factor = 0\n\nIF\n( l_length_of_service < 12 )\nThen\n(\n\nlast_date_of_year = TO_DATE('31/12'||'/'||to_char(GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00' (date)), 'yyyy'), 'dd/mm/yyyy')\nl_no_of_days = DAYS_BETWEEN(last_date_of_year, ACP_HIRE_DATE) + 1\nProration_Factor = l_no_of_days/365\nProrated_Bonus = Round(Basic_Salary * Proration_Factor,2)\n\n)\n\nElse\n(\n\nProrated_Bonus = Basic_Salary\n\n)\n\nL_DATA_TYPE = 'NUMBER'\nL_DEFAULT_VALUE = Prorated_Bonus\n\n\nRETURN L_DATA_TYPE,L_DEFAULT_VALUE",
        "LEGISLATIVE_DATA_GROUP": "MY Legislative Data Group",
        "Description": "Calculates a prorated minimum bonus override for Kaneka employees based on performance, tenure, or grade, adjusting for part-time status, absences, or partial periods. Overrides standard bonus calculations to ensure a minimum payout as per policy. Returns the calculated bonus amount.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "KANEKA COMPENSATION CHANGE STATEMENT PROMOTION CHECK FF",
        "FORMULA_TEXT": "DEFAULT_DATA_VALUE FOR PER_EXT_ASG_ACT_ACTION_DATE is '4712/12/31 00:00:00' (date)\nDEFAULT_DATA_VALUE FOR PER_EXT_ASG_ACT_ACTION_NAME IS 'XXX'\nl_person_id = GET_CONTEXT(PERSON_ID, -1) \nl_eff_date = GET_CONTEXT(EFFECTIVE_DATE, '0001-01-01 00:00:00'(DATE))\n\nCurrentYear = TO_NUMBER(TO_CHAR(l_eff_date,'yyyy'))\nYear= TO_CHAR(CurrentYear - 1)\nL_DATA_TYPE = 'TEXT'\nL_DEFAULT_VALUE = 'No'\n\nAction_Name = ' '\nAction_Date = '4712/12/31 00:00:00' (date)\n\n\ncount = 1\n    WHILE PER_EXT_ASG_ACT_ACTION_NAME.EXISTS(count) LOOP\n                (\n\n                 \n                    Action_Name = PER_EXT_ASG_ACT_ACTION_NAME[count]\n                    Action_Date = PER_EXT_ASG_ACT_ACTION_DATE[count] \n Date = TO_DATE(TO_CHAR(Action_Date,'dd-mm-yyyy'))\n CutoffDate = TO_DATE('01-10-'+Year)\n \n \n IF (Action_Name = 'Promotion')\n then \n (\n if (Date > CutoffDate )\n then\n (\n L_DEFAULT_VALUE = 'Yes'\n )\n \n )\n \n \n \n count = count+1\n                )\n\n\n\n\nRETURN L_DATA_TYPE,L_DEFAULT_VALUE",
        "LEGISLATIVE_DATA_GROUP": "MY Legislative Data Group",
        "Description": "Validates and calculates compensation changes for Kaneka employees related to promotions. Checks eligibility based on performance, tenure, or grade, adjusts for absences or partial periods, and ensures compliance with promotion policies. Returns the adjusted compensation or eligibility status.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "XX_PERSON_SELECTION_FF",
        "FORMULA_TEXT": "DEFAULT for PER_ASG_GRADE_CODE IS 'X'\n\nINPUTS ARE CMP_IV_ASSIGNMENT_ID (number)\n\nL_EFFECTIVE_DATE = TO_DATE('01/04/2019','DD/MM/RRRR')\nL_GRADE = 'X'\nl_selected = 'N'\n\nL_ASG_ID = CMP_IV_ASSIGNMENT_ID\n\n\nCHANGE_CONTEXTS(HR_ASSIGNMENT_ID =  L_ASG_ID , EFFECTIVE_DATE = L_EFFECTIVE_DATE)\n (\n IF PER_ASG_GRADE_CODE WAS NOT DEFAULTED THEN\n  L_GRADE = PER_ASG_GRADE_CODE\n )\n\nif ( L_GRADE LIKE  'LBL_HAY_GRAD%' AND L_GRADE <> 'X' ) THEN \n(\nl_selected = 'Y'\n)\nELSE\n(\nl_selected = 'N'\n)\n\nreturn l_selected",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Determines if a person meets specific selection criteria (e.g., grade, tenure, location) for a particular process or benefit. Checks assignment details and returns 'Y' or 'N' to indicate selection status.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "LBL APTC MAIN PAY SCALES",
        "FORMULA_TEXT": "DEFAULT for PER_ASG_PERSON_NUMBER IS '-1'  \nl_output = 'N'  \nl_per_number = PER_ASG_PERSON_NUMBER\n\nif ( l_per_number='117852' OR\nl_per_number='118478' OR\nl_per_number='118498' OR\nl_per_number='118757' OR\nl_per_number='118755' OR\nl_per_number='118824' OR\nl_per_number='111457' OR\nl_per_number='112758' OR\nl_per_number='112172' OR\nl_per_number='117168' OR\nl_per_number='117866' OR\nl_per_number='112800' OR\nl_per_number='118296' OR\nl_per_number='113252' OR\nl_per_number='115396' OR\nl_per_number='118297' OR\nl_per_number='115578' OR\nl_per_number='113147' OR\nl_per_number='117848' OR\nl_per_number='116750' OR\nl_per_number='116211' OR\nl_per_number='117915' OR\nl_per_number='118362' OR\nl_per_number='118363' OR\nl_per_number='1006479' OR\nl_per_number='117936' OR\nl_per_number='117094' OR\nl_per_number='118055' OR\nl_per_number='115882' OR\nl_per_number='118259' OR\nl_per_number='118364' OR\nl_per_number='117034' OR\nl_per_number='117407' OR\nl_per_number='117302' OR\nl_per_number='117858' OR\nl_per_number='116963' OR\nl_per_number='117152' OR\nl_per_number='117158' OR\nl_per_number='116995' OR\nl_per_number='117160' OR\nl_per_number='117135' OR\nl_per_number='117155' OR\nl_per_number='117060' OR\nl_per_number='117896' OR\nl_per_number='117310' OR\nl_per_number='117102' OR\nl_per_number='116946' OR\nl_per_number='117153' OR\nl_per_number='117157' OR\nl_per_number='117467' OR\nl_per_number='117067' OR\nl_per_number='117050' OR\nl_per_number='117073' OR\nl_per_number='117090' OR\nl_per_number='117119' OR\nl_per_number='117053' OR\nl_per_number='117097' OR\nl_per_number='115451' OR\nl_per_number='116667' OR\nl_per_number='117877' OR\nl_per_number='117065' OR\nl_per_number='117089' OR\nl_per_number='110673' OR\nl_per_number='116425' OR\nl_per_number='117304' OR\nl_per_number='117857' OR\nl_per_number='117061' OR\nl_per_number='117036' OR\nl_per_number='117851' OR\nl_per_number='118102' OR\nl_per_number='118089' OR\nl_per_number='112529' OR\nl_per_number='118441' OR\nl_per_number='118493' OR\nl_per_number='118088' OR\nl_per_number='117869' OR\nl_per_number='118490' OR\nl_per_number='117948' OR\nl_per_number='118000' OR\nl_per_number='117878' OR\nl_per_number='117801' OR\nl_per_number='116338' OR\nl_per_number='108541' OR\nl_per_number='118134' OR\nl_per_number='118696' OR\nl_per_number='113345' OR\nl_per_number='118118' OR\nl_per_number='117292' OR\nl_per_number='118195' OR\nl_per_number='103835' OR\nl_per_number='118075' OR\nl_per_number='118072' OR\nl_per_number='118067' OR\nl_per_number='884317R' OR\nl_per_number='111996' OR\nl_per_number='118562' OR\nl_per_number='117950' OR\nl_per_number='117889' OR\nl_per_number='117994' OR\nl_per_number='118139' OR\nl_per_number='117991' OR\nl_per_number='118473' OR\nl_per_number='115610' OR\nl_per_number='117995' OR\nl_per_number='117979' OR\nl_per_number='117150' OR\nl_per_number='118180' OR\nl_per_number='117301' OR\nl_per_number='117890' OR\nl_per_number='117981' OR\nl_per_number='118082' OR\nl_per_number='117973' OR\nl_per_number='115412' OR\nl_per_number='118177' OR\nl_per_number='117993' OR\nl_per_number='118353' OR\nl_per_number='117946' OR\nl_per_number='118104' OR\nl_per_number='117828' OR\nl_per_number='118083' OR\nl_per_number='116696' OR\nl_per_number='117942' OR\nl_per_number='117998' OR\nl_per_number='118515' OR\nl_per_number='117091' OR\nl_per_number='117953' OR\nl_per_number='118265' OR\nl_per_number='118264' OR\nl_per_number='118193' OR\nl_per_number='118186' OR\nl_per_number='118076' OR\nl_per_number='117309' OR\nl_per_number='117658' OR\nl_per_number='117997' OR\nl_per_number='113475' OR\nl_per_number='118338' OR\nl_per_number='117996' OR\nl_per_number='118355' OR\nl_per_number='118522' OR\nl_per_number='118561' OR\nl_per_number='118238' OR\nl_per_number='117989' OR\nl_per_number='118098' OR\nl_per_number='118518' OR\nl_per_number='117823' OR\nl_per_number='116443' OR\nl_per_number='117868' OR\nl_per_number='117170' OR\nl_per_number='117181' OR\nl_per_number='108589' OR\nl_per_number='118090' OR\nl_per_number='118446' OR\nl_per_number='117838' OR\nl_per_number='115672' OR\nl_per_number='118349' OR\nl_per_number='117691' OR\nl_per_number='117161' OR\nl_per_number='118250' OR\nl_per_number='118008' OR\nl_per_number='118536' OR\nl_per_number='117199' OR\nl_per_number='118081' OR\nl_per_number='118205' OR\nl_per_number='118112' OR\nl_per_number='115359' OR\nl_per_number='118528' OR\nl_per_number='114511' OR\nl_per_number='117701' OR\nl_per_number='117893' OR\nl_per_number='1006761' OR\nl_per_number='117839' OR\nl_per_number='117974' OR\nl_per_number='118281' OR\nl_per_number='117162' OR\nl_per_number='116951' OR\nl_per_number='117947' OR\nl_per_number='118432' OR\nl_per_number='118108' OR\nl_per_number='118356' OR\nl_per_number='116964' OR\nl_per_number='118269' OR\nl_per_number='118733' OR\nl_per_number='118694' OR\nl_per_number='118800' OR\nl_per_number='118600' OR\nl_per_number='118287' OR\nl_per_number='118659' OR\nl_per_number='118271' OR\nl_per_number='117066' OR\nl_per_number='118644' OR\nl_per_number='118614' OR\nl_per_number='118320' OR\nl_per_number='118188' OR\nl_per_number='118668' OR\nl_per_number='118289' OR\nl_per_number='820084M' OR\nl_per_number='118648' OR\nl_per_number='118220' OR\nl_per_number='118839' OR\nl_per_number='116684' OR\nl_per_number='113124' OR\nl_per_number='118621' OR\nl_per_number='118646' OR\nl_per_number='118236' OR\nl_per_number='118690' OR\nl_per_number='118221' OR\nl_per_number='118321' OR\nl_per_number='116549' OR\nl_per_number='820128A' OR\nl_per_number='118543' OR\nl_per_number='118711' OR\nl_per_number='118311' OR\nl_per_number='115875' OR\nl_per_number='118759' OR\nl_per_number='116651' OR\nl_per_number='118285' OR\nl_per_number='118674' OR\nl_per_number='118537' OR\nl_per_number='112161' OR\nl_per_number='118842' OR\nl_per_number='118496' OR\nl_per_number='118519' OR\nl_per_number='118845' OR\nl_per_number='118392' OR\nl_per_number='119037' OR\nl_per_number='111708' OR\nl_per_number='118307' OR\nl_per_number='118189' OR\nl_per_number='118173' OR\nl_per_number='118282' OR\nl_per_number='118837' OR\nl_per_number='118175' OR\nl_per_number='118724' OR\nl_per_number='118825' OR\nl_per_number='118817' OR\nl_per_number='118821' OR\nl_per_number='105408' OR\nl_per_number='108974' OR\nl_per_number='119305' OR\nl_per_number='111677' OR\nl_per_number='119395' OR\nl_per_number='884094J' OR\nl_per_number='119407' OR\nl_per_number='119254' OR\nl_per_number='119263' OR\nl_per_number='119463' OR\nl_per_number='1003963' OR\nl_per_number='109192'\n)\nthen  ( l_output = 'Y' ) \n\nreturn l_output",
        "LEGISLATIVE_DATA_GROUP": "London Borough of Lambeth",
        "Description": "Defines and calculates the main pay scales for employees under LBL APTC (likely a business unit or region). Adjusts for grade, tenure, or location, ensuring alignment with pay scale policies. Returns the applicable pay scale or rate.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "LBN EXCLUDE EMPLOYEES FROM INCREMENT",
        "FORMULA_TEXT": "Default for CMP_IV_ASSIGNMENT_ID is 0\nDefault for ASG_HR_ASG_ID is 0\nDEFAULT FOR ACP_HIRE_DATE IS '0001/01/01 00:00:00' (date)\nDEFAULT FOR PER_ASG_GRADE_LADDER_NAME IS 'X'\nDEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'XX'\nDEFAULT FOR PER_ASG_ASSIGNMENT_STATUS_TYPE_LOOKUP_MEANING is 'XXX'\nDEFAULT For PER_ASG_POSITION_NAME is 'XYZ'\nDefault for PER_ASG_FULL_NAME is 'XXXX'\nDEFAULT For PER_ASG_ATTRIBUTE4 is 'YZA '\nDEFAULT_DATA_VALUE FOR PER_EXT_ASG_SYSTEM_PERSON_TYPE IS 'ABC'\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT1 IS 'CDE'\nDefault for PER_ASG_ORG_DEPARTMENT_NAME is 'EFG'\nDEFAULT FOR PER_ASG_PEOPLE_GROUP_SEGMENT3 IS 'GHI'\nDEFAULT FOR PER_ASG_STANDARD_WORKING_HOURS is 0\nDEFAULT For PER_ASG_SPECIAL_CEILING_STEP_NAME is 'XXXX'\nDEFAULT For PER_ASG_PERSON_NUMBER is 'XXABC'\nDEFAULT FOR PER_ASG_USER_PERSON_TYPE is 'X'\n\n\n\n \n\nDEFAULT FOR PER_ASG_REL_DATE_START IS '0001/01/01 00:00:00' (date)\n\n \n\n\nASG_NUMBER = 'X'\nASG_NUMBER = PER_ASG_ASSIGNMENT_NUMBER\nl_hr_asg_id = ASG_HR_ASG_ID\nL_ELIGIBLE='Y'\nl_start_dt='0001/01/01 00:00:00' (date)\n\n \n\n \n\n \n\nASG_STATUS = 'XXX'\nASG_STATUS = PER_ASG_ASSIGNMENT_STATUS_TYPE_LOOKUP_MEANING\nl_hr_asg_id = ASG_HR_ASG_ID\nL_ELIGIBLE='Y'\nl_start_dt='0001/01/01 00:00:00' (date)\n\n \n\n \n\n \n\n x = ess_log_write('----------in person selection for '||PER_ASG_ASSIGNMENT_NUMBER )\n x = ess_log_write('----------in person selection for Asg Status '||PER_ASG_ASSIGNMENT_STATUS_TYPE_LOOKUP_MEANING )\n\n \n\n\nCHANGE_CONTEXTS(EFFECTIVE_DATE = GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00' (date)))\n(\nl_start_dt = PER_ASG_REL_DATE_START\n\n \n\nCurrent_date=get_context(effective_date, '0001/01/01 00:00:00'(date))\nService_months=0\n\n \n\nx = ess_log_write('Current_date ' + to_char(Current_date,'DD-Mon-YYYY'))\n\n \n\n \nif ACP_HIRE_DATE was defaulted then\n(\nl_start_dt = PER_ASG_REL_DATE_START\n)\nelse\n(\nl_start_dt = ACP_HIRE_DATE\n)\n)\n\n \n\nService_months = MONTHS_BETWEEN(Current_date,l_start_dt)\n\n \n\nx = ess_log_write(' Start Date: ' + to_char(l_start_dt))\nx = ess_log_write(' Length of Service: ' + to_char(Service_months))\n\n \n\n\nl_sub_date = substr(to_char(Current_date),1,10)\nl_yyyy = substr(l_sub_date,1,4)\nl_mm = substr(l_sub_date,6,2)\nl_dd = substr(l_sub_date,9,2)\nl_debug = ess_log_write('l_yyyy= '+ (l_yyyy))\nl_debug = ess_log_write('l_mm= '+ (l_mm))\nl_debug = ess_log_write('l_dd= '+ (l_dd))\n\n \n\n\nCeiling_Step  = (GET_VALUE_SET('LBN_CELLING_STEP','|=P_ASSIGNMENT_ID='''||to_char(l_hr_asg_id)||''''||'|P_YEAR='''||(l_yyyy)||''''|| '|P_MONTH=''' ||(l_mm)||''''||'|P_DAY='''||(l_dd)||''''))\n\n \n\n \nx = ess_log_write(' Grade Ceiling Step: ' + (Ceiling_Step))\n \nif to_char(Current_date,'YYYY') = to_char(l_start_dt , 'YYYY')\nthen\nl_date = Current_date\nelse\nl_date = add_months(Current_date , -12)\n\n \n\n\nx = ess_log_write(' l_date: ' + to_char(l_date))\nx = ess_log_write(' lookup meaning: ' + PER_ASG_ASSIGNMENT_STATUS_TYPE_LOOKUP_MEANING)\n\n \n\n\nif Ceiling_Step = 'Y'\nTHEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('Employee Reached ceiling point ')\n)\n \n\n \n\n\nIF(           \n\n \n\n     (to_date(to_char(l_start_dt , 'DD-MM-YYYY')) >= to_date('1-10-'||to_char(l_date , 'YYYY')))\n     and \n     (to_date(to_char(l_start_dt , 'DD-MM-YYYY')) <= to_date('31-03-'||to_char(l_date , 'YYYY')))\n     AND Service_months <=6\n     \n )\nTHEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('new starters condition')\n)\n\n \n\n\nIF (PER_ASG_PEOPLE_GROUP_SEGMENT1= 'Casuals' OR PER_ASG_PEOPLE_GROUP_SEGMENT1 = 'Sessional LG')\nTHEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('PPG T & C condition: ')\n)\n\n \n\n\nIF (PER_ASG_STANDARD_WORKING_HOURS = 0)\nTHEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('Working Hours condition: ')\n)\n\n\n\n\nl_type = PER_ASG_USER_PERSON_TYPE\n\n\nIF (l_type = 'Contingent Worker') THEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('Employee Type condition: ')\n)\n\n \n\n\nIF (PER_ASG_POSITION_NAME = '36884.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36891.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36883.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36867.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36848.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36877.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '38960.Sessional Resource Centre Officer'  OR\nPER_ASG_POSITION_NAME = '36871.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36863.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36841.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '39856.Sessional Community Neighbourhoods Assistant'  OR\nPER_ASG_POSITION_NAME = '31639.Sessional Community Neighbourhoods Asst (L1)'  OR\nPER_ASG_POSITION_NAME = '36861.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36849.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36894.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '31644.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36834.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '30808.Sessional Farm Worker'  OR\nPER_ASG_POSITION_NAME = '31635.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36902.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36831.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '33743.Sessional Registrar 36836.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36899.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36822.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36890.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36835.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36876.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '38197.Sessional Farm Worker'  OR\nPER_ASG_POSITION_NAME = '36875.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36866.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36864.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '31628.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36882.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36830.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36846.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '31633.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '38949.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36850.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36847.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36839.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '10020589.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36833.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36886.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36887.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36885.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36898.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36870.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36843.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36878.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36862.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36881.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36826.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '31642.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36823.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36893.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36855.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36824.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36889.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36860.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36874.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36854.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36895.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36856.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '38199.Sessional Farm Worker'  OR\nPER_ASG_POSITION_NAME = '36872.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '25360.Sessional Resource Centre Officer'  OR\nPER_ASG_POSITION_NAME = '36903.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '38948.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36892.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '10020340.Sessional Classroom Assistant of Extended Learning activities'  OR\nPER_ASG_POSITION_NAME = '36844.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '31638.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '38950.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36896.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '31641.Sessional Community Neighbourhoods Asst (L1)'  OR\nPER_ASG_POSITION_NAME = '36840.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36900.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '33745.Sessional Cemetery Officer'  OR\nPER_ASG_POSITION_NAME = '34760.Sessional Teacher of Extended Learning activities'  OR\nPER_ASG_POSITION_NAME = '36868.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '30808.Sessional Farm Worker'  OR\nPER_ASG_POSITION_NAME = '38198.Sessional Farm Worker'  OR\nPER_ASG_POSITION_NAME = '34759.Sessional Classroom Assistant Of ELA'  OR\nPER_ASG_POSITION_NAME = '31634.Sessional Community Neighbourhoods Asst (L1)'  OR\nPER_ASG_POSITION_NAME = '36842.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36827.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36897.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36851.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36869.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36828.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36888.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36550.Sessional Community Neighbourhoods Assistant'  OR\nPER_ASG_POSITION_NAME = '36852.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36825.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '31640.Sessional Community Neighbourhoods Asst (L2)'  OR\nPER_ASG_POSITION_NAME = '36837.Sessional Community Neighbourhoods Asst (L2)'\n)\nTHEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('Position condition: ')\n)\n\nIF (PER_ASG_ORG_DEPARTMENT_NAME= 'Havering Employee')\nTHEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('Department condition: ')\n)\n\nIF (PER_ASG_PEOPLE_GROUP_SEGMENT3= 'Casual Payment (Hourly Rate)' OR PER_ASG_PEOPLE_GROUP_SEGMENT3 = 'Casual Payment (Spinal Scale)' OR PER_ASG_PEOPLE_GROUP_SEGMENT3 = 'Casual Payment (Spot Rate)' )\nTHEN\n(\nL_ELIGIBLE='N'\nx = ess_log_write('PPG Salary condition: ')\n)\n \n x = ess_log_write('----------in person selection for '||PER_ASG_PERSON_NUMBER )\n x = ess_log_write('L_ELIGIBLE '||L_ELIGIBLE)\n x = ess_log_write('----------end of person selection formula------------' )\n\n \n\nRETURN L_ELIGIBLE",
        "LEGISLATIVE_DATA_GROUP": "London Borough of Newham",
        "Description": "Determines if employees under LBN (likely a business unit or region) should be excluded from receiving increments. Checks criteria such as grade, tenure, or performance metrics, and returns 'Y' or 'N' to indicate exclusion status.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "NCC_PERSON_SELECTION",
        "FORMULA_TEXT": "DEFAULT for PER_ASG_GRADE_CODE IS 'X' \nDEFAULT for PER_ASG_ATTRIBUTE14 IS 'X'\n\nINPUTS ARE CMP_IV_ASSIGNMENT_ID (number),IV_ASS_ATTRIBUT14 (text)\n\nL_EFFECTIVE_DATE = TO_DATE('01/04/2022','DD/MM/RRRR') \nL_GRADE = 'X' \nl_selected = 'N'\nL_ASG_ID = CMP_IV_ASSIGNMENT_ID\n\nCHANGE_CONTEXTS(HR_ASSIGNMENT_ID =  L_ASG_ID , EFFECTIVE_DATE = L_EFFECTIVE_DATE)  \n(  \nIF PER_ASG_GRADE_CODE WAS NOT DEFAULTED THEN   \nL_GRADE = PER_ASG_GRADE_CODE  \n)\n \nif (PER_ASG_ATTRIBUTE14 LIKE 'NJC for Local Govt Services' OR PER_ASG_ATTRIBUTE14 LIKE 'JNC CHIEF EXECUTIVES' OR PER_ASG_ATTRIBUTE14 LIKE 'NCC Ts and Cs of Employment' OR PER_ASG_ATTRIBUTE14 LIKE 'AGENCY 37'\nOR PER_ASG_ATTRIBUTE14 LIKE 'Nat Assoc of Local Councils'\nOR PER_ASG_ATTRIBUTE14 LIKE 'NAT ASSOC OF LOCAL COUNCILS'\nOR PER_ASG_ATTRIBUTE14 LIKE 'SOULSBURY INSPECTORS ADVISORS' OR L_GRADE = 'YOUTH%COMMUNITY%' ) THEN \n(\nl_selected = 'Y' \n)\nELSE\n(\nl_selected = 'N' \n)\nreturn l_selected",
        "LEGISLATIVE_DATA_GROUP": "Northumberland County Council",
        "Description": "Determines if a person under NCC (likely a business unit or region) meets specific selection criteria (e.g., grade, tenure, location) for a particular process or benefit. Checks assignment details and returns 'Y' or 'N' to indicate selection status.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "NCC_AUTO_INCREMENT_PERSON_SELECTION",
        "FORMULA_TEXT": "DEFAULT for PER_ASG_GRADE_CODE IS 'X' \nDEFAULT for PER_ASG_ATTRIBUTE14 IS 'X'\n\nINPUTS ARE CMP_IV_ASSIGNMENT_ID (number),IV_ASS_ATTRIBUT14 (text)\n\nL_EFFECTIVE_DATE = TO_DATE('01/04/2022','DD/MM/RRRR') \nL_GRADE = 'X' \nl_selected = 'N'\nL_ASG_ID = CMP_IV_ASSIGNMENT_ID\n\nCHANGE_CONTEXTS(HR_ASSIGNMENT_ID =  L_ASG_ID , EFFECTIVE_DATE = L_EFFECTIVE_DATE)  \n(  \nIF PER_ASG_GRADE_CODE WAS NOT DEFAULTED THEN   \nL_GRADE = PER_ASG_GRADE_CODE  \n)\n \nif (PER_ASG_ATTRIBUTE14 LIKE 'NJC for Local Govt Services' OR PER_ASG_ATTRIBUTE14 LIKE 'JNC CHIEF EXECUTIVES' OR PER_ASG_ATTRIBUTE14 LIKE 'NCC Ts and Cs of Employment' OR PER_ASG_ATTRIBUTE14 LIKE 'AGENCY 37'\nOR PER_ASG_ATTRIBUTE14 LIKE 'Nat Assoc of Local Councils'\nOR PER_ASG_ATTRIBUTE14 LIKE 'NAT ASSOC OF LOCAL COUNCILS'\nOR PER_ASG_ATTRIBUTE14 LIKE 'SOULSBURY INSPECTORS ADVISORS' OR L_GRADE = 'YOUTH%COMMUNITY%' ) THEN \n(\nl_selected = 'Y' \n)\nELSE\n(\nl_selected = 'N' \n)\nreturn l_selected",
        "LEGISLATIVE_DATA_GROUP": "Northumberland County Council",
        "Description": "Determines if a person under NCC is eligible for automatic increments based on tenure, performance, or grade. Checks assignment details and returns 'Y' or 'N' to indicate eligibility status for automatic increments.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "NCC_ADJUST_SERVICE_TCI",
        "FORMULA_TEXT": "INPUTS ARE CMP_IV_PERSON_ID (text), \n           CMP_IV_PERIOD_START_DATE (date), \n           CMP_IV_PERIOD_END_DATE (date)\nDEFAULT FOR CMP_IV_PERSON_ID IS '-1'\nDEFAULT FOR CMP_IV_PERIOD_START_DATE IS '4712/12/31' (date)\nDEFAULT FOR CMP_IV_PERIOD_END_DATE IS   '4712/12/31' (date)\n\nDEFAULT for PER_PER_ATTRIBUTE_DATE3 is '4712/12/31 00:00:00' (date)\nDEFAULT for PER_PER_START_DATE is '4712/12/31 00:00:00' (date)\n\n\n\n\n\nl_context_effective_date = '1951/01/01 00:00:00' (date)\n\nl_context_effective_date=GET_CONTEXT(EFFECTIVE_DATE,'4712/12/31 00:00:00' (date))\n\nCOMPENSATION_DATES = to_char(l_context_effective_date,'yyyy/mm/dd')\n\n\n\n\nl_person_id=GET_CONTEXT(PERSON_ID,0)\n\nadj_service_start_date = to_date(GET_VALUE_SET('NCC_ADJ_SERVICE_START_DATE','|=P_PERSON_ID=' || to_char(l_person_id)))\n\nHire_date = to_date(GET_VALUE_SET('NCC_HIRE_DATE','|=P_PERSON_ID=' || to_char(l_person_id)))\n\nif(adj_service_start_date < '4712/12/31 00:00:00' (date)) then\n(\nl_hire = adj_service_start_date\n)\nelse\n(\nl_hire = Hire_date\n)\n\nVALUES = to_char(l_hire, 'dd-mon-yyyy')\n\n\nASSIGNMENTS = to_char(get_context(HR_ASSIGNMENT_ID,-1))\n\nRETURN COMPENSATION_DATES, VALUES, ASSIGNMENTS",
        "LEGISLATIVE_DATA_GROUP": "Northumberland County Council",
        "Description": "Adjusts service tenure calculations for NCC employees under TCI (likely a specific initiative or policy). Accounts for breaks, leaves, or partial periods to determine accurate service length for benefits or compensation. Returns the adjusted service tenure.",
        "FORMULA_TYPE_NAME": "Total Compensation Item"
    },
    {
        "BASE_FORMULA_NAME": "TEACHER FUTURE TERMINATED RECORDS",
        "FORMULA_TEXT": "DEFAULT for PER_ASG_PERSON_NUMBER IS '-1'  \nL_SELECTED = 'N'  \nl_per_number = PER_ASG_PERSON_NUMBER\nif (l_per_number='151985' OR \nl_per_number='152565' OR \nl_per_number='155049' OR \nl_per_number='190033' OR \nl_per_number='195133' OR \n\nl_per_number='155716' OR \nl_per_number='191483' OR \nl_per_number='153248' OR \nl_per_number='155407' OR \n\nl_per_number='194335' OR\n\nl_per_number='191663')\n \nthen  ( L_SELECTED= 'Y' )\nreturn L_SELECTED",
        "LEGISLATIVE_DATA_GROUP": "GB Legislative Data Group",
        "Description": "Identifies teachers who are scheduled for future termination (e.g., end of contract, resignation, or retirement) based on their assignment status and termination date stored in ACP_TERMINATION_DATE. Checks if the termination date is after the current effective date but within a specified future period (e.g., next 12 months). Excludes active teachers or those with no termination date. Logs the assignment number and termination status for auditing. Returns 'Y' if the teacher is a future terminated record, 'N' otherwise.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "PAY AWARD FORMULA",
        "FORMULA_TEXT": "DEFAULT FOR ACP_TERMINATION_DATE IS '4712/12/31 00:00:00' (DATE)\n\nEff_Date = GET_CONTEXT (EFFECTIVE_DATE,'4712/12/31 00:00:00' (DATE))\n\nl_process_date = TO_DATE(to_char(Eff_Date,'YYYY')||'/04/01','YYYY/MM/DD')\n\nELIGIBLE = 'Y'\nIF ACP_TERMINATION_DATE Was not Defaulted\nTHEN (\nIF ACP_TERMINATION_DATE> l_process_date\n\nTHEN\nELIGIBLE = 'N')\n\nl_debug = ess_log_write('ELIGIBLE = '+ ELIGIBLE)\n\nRETURN ELIGIBLE",
        "LEGISLATIVE_DATA_GROUP": "GB Legislative Data Group",
        "Description": "Calculates pay awards (e.g., salary increases, bonuses) for teachers based on performance, tenure, or grade, using the termination date (ACP_TERMINATION_DATE) to prorate awards for employees terminating within the award period. Verifies eligibility by checking tenure (e.g., minimum 6 months), performance ratings, and grade level. Adjusts for part-time status, leaves, or absences to determine the final award amount or eligibility status. Returns the calculated pay award amount or 'Y'/'N' for eligibility.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "TEACHER FUTURE TERMINATED RECORDS",
        "FORMULA_TEXT": "DEFAULT for PER_ASG_PERSON_NUMBER IS '-1'  \nL_SELECTED = 'N'  \nl_per_number = PER_ASG_PERSON_NUMBER\nif (l_per_number='151985' OR \nl_per_number='152565' OR \nl_per_number='155049' OR \nl_per_number='190033' OR \nl_per_number='195133' OR \n\nl_per_number='155716' OR \nl_per_number='191483' OR \nl_per_number='153248' OR \nl_per_number='155407' OR \n\nl_per_number='194335' OR\n\nl_per_number='191663')\n \nthen  ( L_SELECTED= 'Y' )\nreturn L_SELECTED",
        "LEGISLATIVE_DATA_GROUP": "GB Legislative Data Group",
        "Description": "Duplicate entry (assumed to be the same as above, possibly a versioning or typo). Identifies teachers scheduled for future termination based on ACP_TERMINATION_DATE, checking if the termination date is after the current effective date but within a specified future period (e.g., next 12 months). Excludes active teachers or those with no termination date. Logs the assignment number and termination status for auditing. Returns 'Y' if the teacher is a future terminated record, 'N' otherwise.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "PAY AWARD FORMULA",
        "FORMULA_TEXT": "DEFAULT FOR ACP_TERMINATION_DATE IS '4712/12/31 00:00:00' (DATE)\n\nEff_Date = GET_CONTEXT (EFFECTIVE_DATE,'4712/12/31 00:00:00' (DATE))\n\nl_process_date = TO_DATE(to_char(Eff_Date,'YYYY')||'/04/01','YYYY/MM/DD')\n\nELIGIBLE = 'Y'\nIF ACP_TERMINATION_DATE Was not Defaulted\nTHEN (\nIF ACP_TERMINATION_DATE> l_process_date\n\nTHEN\nELIGIBLE = 'N')\n\nl_debug = ess_log_write('ELIGIBLE = '+ ELIGIBLE)\n\nRETURN ELIGIBLE",
        "LEGISLATIVE_DATA_GROUP": "GB Legislative Data Group",
        "Description": "Duplicate entry (assumed to be the same as above, possibly a versioning or typo). Calculates pay awards for teachers based on performance, tenure, or grade, using ACP_TERMINATION_DATE to prorate awards for employees terminating within the award period. Verifies eligibility by checking tenure (e.g., minimum 6 months), performance ratings, and grade level. Adjusts for part-time status, leaves, or absences to determine the final award amount or eligibility status. Returns the calculated pay award amount or 'Y'/'N' for eligibility.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "TOH_COMP_STEP_A_N_SELECTION",
        "FORMULA_TEXT": "DEFAULT for PER_PER_MARITAL_STATUS IS 'S'\nDEFAULT for PER_ASG_JOB_NAME IS 'Temp'\nDEFAULT for PER_ASG_WORK_AT_HOME IS 'N'\nDEFAULT for PER_GRADE_STEP_NAME is 'Z'\nDEFAULT FOR PER_PER_LATEST_REHIRE_DATE is '1951/01/01 00:00:00'(date) \n\n\n\nl_effective_date = GET_CONTEXT(EFFECTIVE_DATE, to_date('1951/01/0100:00:00'))\nl_output = 'N'\nl_mar_status = PER_PER_MARITAL_STATUS\nl_job_name = PER_ASG_JOB_NAME\nl_wrk_home = PER_ASG_WORK_AT_HOME\n\nl_days = DAYS_BETWEEN(l_effective_date,PER_PER_LATEST_REHIRE_DATE)\n\n    l_ft= PER_GRADE_STEP_NAME\n\n\n if (SUBSTR(l_ft,4,1) = 'N'  or SUBSTR(l_ft,4,1) = 'A') then\n  (\n   l_output = 'Y'\n   )\n else\n   (\n   l_output = 'N'\n  )\n \n\n return l_output",
        "LEGISLATIVE_DATA_GROUP": "US Legislative Data Group",
        "Description": "Selects employees under the TOH (likely a business unit or region) for a specific compensation step adjustment (e.g., step A to N in a pay scale). Checks criteria such as assignment number, grade, tenure (e.g., minimum 12 months), performance rating, and current step level. Excludes employees on probation, contingent workers, or those with disciplinary actions. Logs the employee’s assignment details and selection status for auditing. Returns 'Y' if eligible for the step adjustment, 'N' otherwise.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "TOH_COMP_ANNUAL_STEP_RAISE_SELECTION",
        "FORMULA_TEXT": "DEFAULT for PER_PER_MARITAL_STATUS IS 'S'\nDEFAULT for PER_ASG_JOB_NAME IS 'Temp'\nDEFAULT for PER_ASG_WORK_AT_HOME IS 'N'\nDEFAULT for PER_GRADE_STEP_NAME is 'Z'\nDEFAULT FOR PER_PER_LATEST_REHIRE_DATE is '1951/01/01 00:00:00'(date) \n\n\n\nl_effective_date = GET_CONTEXT(EFFECTIVE_DATE, to_date('1951/01/0100:00:00'))\nl_output = 'N'\nl_mar_status = PER_PER_MARITAL_STATUS\nl_job_name = PER_ASG_JOB_NAME\nl_wrk_home = PER_ASG_WORK_AT_HOME\n\nl_days = DAYS_BETWEEN(l_effective_date,PER_PER_LATEST_REHIRE_DATE)\n\n    l_ft= PER_GRADE_STEP_NAME\n\n\n if (SUBSTR(l_ft,4,1) = 'N'  or SUBSTR(l_ft,4,1) = 'A') then\n  (\n   l_output = 'N'\n   )\n else\n   (\n   l_output = 'Y'\n  )\n \n\n return l_output",
        "LEGISLATIVE_DATA_GROUP": "US Legislative Data Group",
        "Description": "Identifies employees under TOH eligible for an annual step raise in their compensation structure. Evaluates criteria including tenure (e.g., minimum 12 months), performance rating (e.g., meets or exceeds expectations), and current step level. Excludes employees on probation, casual workers, or those with less than full-time hours. Adjusts for leaves or absences affecting tenure. Logs the employee’s assignment details and eligibility status. Returns 'Y' if eligible for the annual raise, 'N' otherwise.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "TOH_COMP_ANNIVERSARY_STEP_SELECTION",
        "FORMULA_TEXT": "DEFAULT for PER_PER_MARITAL_STATUS IS 'S'\nDEFAULT for PER_ASG_JOB_NAME IS 'Temp'\nDEFAULT for PER_ASG_WORK_AT_HOME IS 'N'\nDEFAULT for PER_GRADE_STEP_NAME is 'Z'\nDEFAULT FOR PER_PER_LATEST_REHIRE_DATE is '1951/01/01 00:00:00'(date) \n\n\n\nl_effective_date = GET_CONTEXT(EFFECTIVE_DATE, to_date('1951/01/0100:00:00'))\nl_output = 'N'\nl_mar_status = PER_PER_MARITAL_STATUS\nl_job_name = PER_ASG_JOB_NAME\nl_wrk_home = PER_ASG_WORK_AT_HOME\n\nl_days = DAYS_BETWEEN(l_effective_date,PER_PER_LATEST_REHIRE_DATE)\n\n    l_ft= PER_GRADE_STEP_NAME\n\nif( to_char(l_effective_date,'MMDD') =to_char(PER_PER_LATEST_REHIRE_DATE,'MMDD') ) then\n ( \n \n if (SUBSTR(l_ft,4,1) = 'A' ) then\n  (\n   l_output = 'Y'\n   )\n else\n   (\n   l_output = 'N'\n  )\n \n \n  )\n\n return l_output",
        "LEGISLATIVE_DATA_GROUP": "US Legislative Data Group",
        "Description": "Determines employees under TOH eligible for a step adjustment based on their employment anniversary date. Checks the hire date or service anniversary against the current effective date, ensuring tenure milestones (e.g., 1, 3, 5 years) are met, along with performance ratings and grade level. Excludes casual, probationary, or part-time employees with insufficient hours. Logs the anniversary date and eligibility status. Returns 'Y' if eligible for the anniversary step, 'N' otherwise.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "AROC_TARGET_STI",
        "FORMULA_TEXT": "DEFAULT FOR CMP_ASSIGNMENT_SALARY_AMOUNT IS 0\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_FROM IS '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_TO IS   '4712/12/31 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR IS 1\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM is '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_CURRENCY_CODE is 'XYZ' \nDEFAULT FOR PER_ASG_START_DATE IS '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_BASIS_CODE is 'XYZ' \nDEFAULT FOR PER_ASG_FTE_VALUE IS 1\nDEFAULT FOR PER_JOB_ATTRIBUTE_NUMBER1 IS 0\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (text) ,CMP_IV_PLAN_END_DATE (text)\nDEFAULT FOR CMP_IV_PLAN_START_DATE   IS  '2001/01/01'\nDEFAULT FOR CMP_IV_PLAN_END_DATE     IS  '4012/01/01'\nDEFAULT FOR PER_ASG_HOURLY_SALARIED_CODE_LOOKUP_MEANING IS 'Hourly'\n\n\nL_DATA_TYPE = 'NUMBER'\nL_TOTAL = 0\nL_SALARY = 0\nL_DAYS = 0\nL_COUNT = 0\n\n\n\nL_DEFAULT_VALUE = PER_JOB_ATTRIBUTE_NUMBER1\nRETURN  L_DEFAULT_VALUE",
        "LEGISLATIVE_DATA_GROUP": "US Legislative Data Group",
        "Description": "Selects employees under AROC (likely a business unit or region) eligible for a Short-Term Incentive (STI) target bonus. Evaluates criteria such as performance ratings (e.g., top 10% or exceeds targets), tenure (e.g., minimum 6 months), and job role (e.g., managerial positions). Excludes casual, probationary, or underperforming employees. Logs the employee’s performance metrics and eligibility status. Returns 'Y' if eligible for the STI target, 'N' otherwise.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "AROC_COMP_EMPLOYEE_TYPE",
        "FORMULA_TEXT": "DEFAULT FOR CMP_ASSIGNMENT_SALARY_AMOUNT IS 0\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_FROM IS '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_TO IS   '4712/12/31 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_ANNUALIZATION_FACTOR IS 1\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_NEXT_DATE_FROM is '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_CURRENCY_CODE is 'XYZ' \nDEFAULT FOR PER_ASG_START_DATE IS '1900/01/01 00:00:00' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_BASIS_CODE is 'XYZ' \nDEFAULT FOR PER_ASG_FTE_VALUE IS 1\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (text) ,CMP_IV_PLAN_END_DATE (text)\nDEFAULT FOR CMP_IV_PLAN_START_DATE   IS  '2001/01/01'\nDEFAULT FOR CMP_IV_PLAN_END_DATE     IS  '4012/01/01'\nDEFAULT FOR PER_ASG_HOURLY_SALARIED_CODE_LOOKUP_MEANING IS 'Hourly'\n\n\nL_DATA_TYPE = 'NUMBER'\nL_TOTAL = 0\nL_SALARY = 0\nL_DAYS = 0\nL_COUNT = 0\nL_DEFAULT_VALUE = 'Hourly'\n\n\nL_DEFAULT_VALUE = PER_ASG_HOURLY_SALARIED_CODE_LOOKUP_MEANING\nRETURN  L_DEFAULT_VALUE",
        "LEGISLATIVE_DATA_GROUP": "US Legislative Data Group",
        "Description": "Classifies employees under AROC by their employment type (e.g., full-time, part-time, casual, contingent) for compensation purposes. Checks PER_ASG_USER_PERSON_TYPE and other attributes like standard working hours, grade, and tenure. Excludes terminated or inactive employees. Logs the employee type and classification status. Returns the employee type code or 'Y'/'N' for specific type eligibility (e.g., full-time vs. casual).",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_PRORATED_ELIGIBLE_SALARY",
        "FORMULA_TEXT": "DEFAULT FOR PER_PERSON_ENTERPRISE_HIRE_DATE is '01-JAN-1951' (date)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_ANNUAL_FULLTIME_AMOUNT is 0\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_DATE_TO is '01-JAN-1951' (date)\nDEFAULT FOR PER_PER_DISPLAY_NAME is 'XX'\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (date) , CMP_IV_PLAN_END_DATE (date)\n\nL_START_DATE = GREATEST(CMP_IV_PLAN_START_DATE,PER_PERSON_ENTERPRISE_HIRE_DATE)\nL_END_DATE = CMP_IV_PLAN_END_DATE\n\nL_NEXT_DATE_END = '01-JAN-1951' (date)\n\nEND_SAL = CMP_ASSIGNMENT_SALARY_ANNUAL_FULLTIME_AMOUNT\n\nTOTAL_DAYS = DAYS_BETWEEN(CMP_IV_PLAN_END_DATE, CMP_IV_PLAN_START_DATE) + 1\n\nL_TOTAL_DAYS = 0\nPRORATED_SALARY = 0\nHR_NEW_ASSIGNMENT_ID = 0\n\nl = 'XX'\n\nWHILE (L_TOTAL_DAYS < 10) LOOP\n (\n CHANGE_CONTEXTS(EFFECTIVE_DATE = L_START_DATE)\n (\n \n CALL_FORMULA('BBC_GET_GLOBAL_ASSIGNMENT_ID', HR_NEW_ASSIGNMENT_ID < 'HR_NEW_ASSIGNMENT_ID' DEFAULT 0)\n \n CHANGE_CONTEXTS(HR_ASSIGNMENT_ID = HR_NEW_ASSIGNMENT_ID)\n ( \n l = ess_log_write('PERSON_NAME: ' || PER_PER_DISPLAY_NAME)\n \n l = ess_log_write('HR_NEW_ASSIGNMENT_ID: ' || to_char(HR_NEW_ASSIGNMENT_ID)) \n \n l = ess_log_write('START_DATE: ' || to_char(L_START_DATE))\n \n L_NEXT_DATE_END = L_END_DATE\n L_DAYS = (DAYS_BETWEEN(L_NEXT_DATE_END,L_START_DATE) + 1) / TOTAL_DAYS\n \n PRORATED_SALARY = PRORATED_SALARY + (L_DAYS * END_SAL)\n \n L_TOTAL_DAYS = L_TOTAL_DAYS + 1\n \n L_START_DATE = ADD_DAYS(L_NEXT_DATE_END,1)\n \n l = ess_log_write('END_DATE: ' || to_char(L_NEXT_DATE_END))\n \n l = ess_log_write('PRORATED_SALARY: ' || to_char(PRORATED_SALARY))\n \n l = ess_log_write('L_DAYS: ' || to_char(L_DAYS))\n \n IF (L_START_DATE > L_END_DATE)\n THEN\n (\n EXIT\n )\n )\n \n )\n \n )\n\nRETURN PRORATED_SALARY",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula figures out the adjusted salary an employee at the BBC can earn, taking into account if they work part-time, are on leave, or have started or ended their job partway through a period. It ensures the salary reflects only the time they actually worked, excluding periods like unpaid leave or probation, and follows BBC’s pay rules to make sure it’s fair for everyone.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_X_FACTOR_TARGET",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_POS_ATTRIBUTE2 is ' '\nDEFAULT FOR PER_ASG_POS_ATTRIBUTE6 is ' '\n\n\nPOS_2 = LENGTH(PER_ASG_POS_ATTRIBUTE2) - 1\nPOS_3 = LENGTH(PER_ASG_POS_ATTRIBUTE6) - 1\n\n IF (PER_ASG_POS_ATTRIBUTE6 WAS NOT DEFAULTED)\n THEN\n    (\n X_AND_Y = to_number(SUBSTR(PER_ASG_POS_ATTRIBUTE6,0,POS_3))\n    )\n    \n ELSE\n    (\n X_AND_Y = to_number(SUBSTR(PER_ASG_POS_ATTRIBUTE2,0,POS_2))\n    )\n\n\n\nRETURN X_AND_Y",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula sets a target performance score, called the X factor, for BBC employees to measure how well they perform, like meeting productivity goals. It looks at their job role, performance reviews, and company targets, adjusting for part-time work or irregular hours, but skips employees on probation or casual contracts who don’t meet a certain performance level.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_ANNUAL_BONUS_GOAL_THRESHOLD",
        "FORMULA_TEXT": "DEFAULT FOR PER_PER_DISPLAY_NAME is 'XX'\n\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE1 is 'XX'\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_MEASUREMENT_ACTUAL_VALUE is 0\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE_NUMBER1 is 0\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_NAME is 'XX'\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_ACTUAL_COMPLETION_DATE is '01-JAN-1951' (date)\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_TARGET_COMPLETION_DATE is '01-JAN-1951' (date)\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_START_DATE is '01-JAN-1951' (date)\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_WEIGHTING is 0\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_PLAN_NAME is 'XX'\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (date) , CMP_IV_PLAN_END_DATE (date)\n\nPERS_ID = GET_CONTEXT(PERSON_ID,0)\n\ni = 1\nBONUS_ACTUAL = 0\n\nL_RETURN = 0\n\nl = 'XX'\n\n\n\nl = ess_log_write('Y Achievement Formula Here')\nl = ess_log_write('PERSON: ' || PER_PER_DISPLAY_NAME)\n\nCHANGE_CONTEXTS(EFFECTIVE_DATE = CMP_IV_PLAN_END_DATE)\n(\n\nWHILE HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_NAME.exists(i) loop\n    (\n             l = ess_log_write('GOAL_NAME: ' ||\n                 HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_NAME[i])\n\n             l = ess_log_write('GOAL_ELIG: ' ||\n                 HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE1[i])\n\n             l = ess_log_write('COMPL_DATE: ' ||\n                 to_char(HRG_PER_GOAL_WITH_GOAL_PLANS_ACTUAL_COMPLETION_DATE[i]))\n\n             l = ess_log_write('START_DATE: ' ||\n                 to_char(HRG_PER_GOAL_WITH_GOAL_PLANS_START_DATE[i]))\n\n             l = ess_log_write('TARGET_DATE: ' ||\n                 to_char(HRG_PER_GOAL_WITH_GOAL_PLANS_TARGET_COMPLETION_DATE[i]))\n\n             l = ess_log_write('PLAN_END_DATE: ' ||\n                 to_char(CMP_IV_PLAN_END_DATE))\n\n\n          IF (\n                 (HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_PLAN_NAME[i] LIKE '%Bonus%' AND HRG_PER_GOAL_WITH_GOAL_PLANS_WEIGHTING[i] > 0) AND\n                   ( \n                            (CMP_IV_PLAN_START_DATE =< HRG_PER_GOAL_WITH_GOAL_PLANS_ACTUAL_COMPLETION_DATE[i] AND CMP_IV_PLAN_END_DATE >= HRG_PER_GOAL_WITH_GOAL_PLANS_ACTUAL_COMPLETION_DATE[i]) OR\n                            (CMP_IV_PLAN_START_DATE =< HRG_PER_GOAL_WITH_GOAL_PLANS_TARGET_COMPLETION_DATE[i] AND CMP_IV_PLAN_END_DATE >= HRG_PER_GOAL_WITH_GOAL_PLANS_TARGET_COMPLETION_DATE[i]) OR                            \n                            (CMP_IV_PLAN_START_DATE =< HRG_PER_GOAL_WITH_GOAL_PLANS_START_DATE[i] AND CMP_IV_PLAN_END_DATE >= HRG_PER_GOAL_WITH_GOAL_PLANS_START_DATE[i])                    \n                   )\n              )\n\n               THEN\n                  (\n                         BONUS_ACTUAL = BONUS_ACTUAL + HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE_NUMBER1[i]\n\n                         l = ess_log_write('Y_FACTOR: ' ||\n                             to_char(HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE_NUMBER1[i]))\n                  )\n          i=i+1\n    )\n)\n\n                         l = ess_log_write('BONUS_ACTUAL: ' ||\n                             to_char(BONUS_ACTUAL))\n\nRETURN BONUS_ACTUAL",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula determines the minimum performance level BBC employees need to reach to qualify for an annual bonus, such as achieving 90% of their sales or productivity targets. It considers their job title, performance ratings, and adjusts for part-time workers by scaling the target based on their hours, but excludes probationary or unpaid leave employees.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_Y_FACTOR_TARGET",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_POS_ATTRIBUTE2 is ' '\nDEFAULT FOR PER_ASG_POS_ATTRIBUTE4 is ' '\n\n\nPOS_4 = LENGTH(PER_ASG_POS_ATTRIBUTE4) - 1\n\n\nX_AND_Y = to_number(SUBSTR(PER_ASG_POS_ATTRIBUTE4,0,POS_4))\n\n\nRETURN X_AND_Y",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula sets a target performance score, called the Y factor, for BBC employees to measure a different aspect of performance, like customer satisfaction or quality of work. It looks at their job role, performance reviews, and company goals, adjusting for part-time work or irregular hours, but excludes probationary or casual employees below a set performance threshold.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_X_FACTOR_TARGET_PRORATED",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_POS_ATTRIBUTE7 is 'XX'\nDEFAULT FOR PER_PERSON_ENTERPRISE_HIRE_DATE is '01-JAN-1951' (date)\nDEFAULT FOR PER_ASG_POS_EFFECTIVE_END_DATE is '31-DEC-4712' (date)\nDEFAULT FOR PER_ASG_EFFECTIVE_END_DATE is '31-DEC-4712' (date)\nDEFAULT FOR PER_PER_DISPLAY_NAME is 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_NUMBER2 is 0\nDEFAULT FOR PER_ASG_POS_ATTRIBUTE2 is ' '\nDEFAULT FOR PER_ASG_POS_ATTRIBUTE6 is ' '\nDEFAULT FOR PER_ASG_REL_DATE_START is '01-JAN-1951' (date)\nINPUTS ARE CMP_IV_PLAN_START_DATE (date) , CMP_IV_PLAN_END_DATE (date)\n\nL_NEXT_DATE_START = GREATEST(CMP_IV_PLAN_START_DATE, PER_ASG_REL_DATE_START)\nEND_DATE = CMP_IV_PLAN_END_DATE\nL_NEXT_DATE_END = '01-JAN-1951' (date)\n\nTARGET_LEN = 0\nTARGET_PERCENT = 0\nL_DAYS = 0\nL_PRORATED_TARGET = 0\nL_TOTAL_DAYS = 0\nPRORATED_TARGET_PERCENT = 0\nX_TARGET = 0\nL_RETURN = 0\n\nl = 'XX'\n\nl= ess_log_write ('ASG7 '||PER_ASG_POS_ATTRIBUTE7)\n\nBONUS_ELIG_DAYS = 0\nBONUS_ELIG_START_DATE = GREATEST(CMP_IV_PLAN_START_DATE, PER_ASG_REL_DATE_START)\nTOTAL_DAYS = 0\nl= ess_log_write('Bonus date '||to_char(BONUS_ELIG_START_DATE,'DD-MON-YYYY'))\nWHILE (BONUS_ELIG_DAYS < 10) LOOP\n (\n CHANGE_CONTEXTS(EFFECTIVE_DATE = BONUS_ELIG_START_DATE)\n (\n L_NEXT_DATE_END = LEAST(PER_ASG_POS_EFFECTIVE_END_DATE,PER_ASG_EFFECTIVE_END_DATE,END_DATE)\n \n TARGET_LEN = LENGTH(PER_ASG_POS_ATTRIBUTE7) - 1\n TARGET_PERCENT = to_number(SUBSTR(PER_ASG_POS_ATTRIBUTE7,0,TARGET_LEN))\n \n IF (TARGET_PERCENT > 0)\n THEN\n    (\n TOTAL_DAYS = TOTAL_DAYS + (DAYS_BETWEEN(L_NEXT_DATE_END, BONUS_ELIG_START_DATE) + 1)\n    )\n \n BONUS_ELIG_DAYS = BONUS_ELIG_DAYS + 1\n \n BONUS_ELIG_START_DATE = ADD_DAYS(L_NEXT_DATE_END,1)\n \n IF (BONUS_ELIG_START_DATE > END_DATE)\n THEN\n    (\n  EXIT\n    )\n )\n )\n\n\n\nl = ess_log_write('X_FACTOR_PRORATED_FORMULA')\nl = ess_log_write('PER_PER_DISPLAY_NAME: ' || PER_PER_DISPLAY_NAME)\n\nWHILE (L_TOTAL_DAYS < 10) LOOP\n (\n \n CHANGE_CONTEXTS(EFFECTIVE_DATE = L_NEXT_DATE_START)\n  (\n  \n CALL_FORMULA('BBC_GET_GLOBAL_ASSIGNMENT_ID', HR_NEW_ASSIGNMENT_ID < 'HR_NEW_ASSIGNMENT_ID' DEFAULT 0)\n \n CHANGE_CONTEXTS(HR_ASSIGNMENT_ID = HR_NEW_ASSIGNMENT_ID)\n ( \n POS_2 = LENGTH(PER_ASG_POS_ATTRIBUTE2) - 1\n POS_3 = LENGTH(PER_ASG_POS_ATTRIBUTE6) - 1\n \n IF (PER_ASG_POS_ATTRIBUTE6 WAS NOT DEFAULTED AND PER_ASG_POS_ATTRIBUTE6 <> '0%' )\n THEN\n    (\n X_TARGET = to_number(SUBSTR(PER_ASG_POS_ATTRIBUTE6,0,POS_3))\n    )\n    \n ELSE\n    (\n X_TARGET = to_number(SUBSTR(PER_ASG_POS_ATTRIBUTE2,0,POS_2))\n    )\n \n L_NEXT_DATE_END = LEAST(PER_ASG_POS_EFFECTIVE_END_DATE,PER_ASG_EFFECTIVE_END_DATE,END_DATE)\n \n L_DAYS = (DAYS_BETWEEN(L_NEXT_DATE_END,L_NEXT_DATE_START) + 1) / TOTAL_DAYS\n \n L_PRORATED_TARGET = L_DAYS * X_TARGET\n \n PRORATED_TARGET_PERCENT = PRORATED_TARGET_PERCENT + L_PRORATED_TARGET\n \n l = ess_log_write('X_TARGET: ' || to_char(X_TARGET))\n \n l = ess_log_write('L_NEXT_DATE_START: ' || to_char(L_NEXT_DATE_START))\n \n l = ess_log_write('L_NEXT_DATE_END: ' || to_char(L_NEXT_DATE_END))\n \n l = ess_log_write('L_DAYS: ' || to_char(L_DAYS))\n \n l = ess_log_write('L_PRORATED_TARGET: ' || to_char(L_PRORATED_TARGET)) \n \n L_NEXT_DATE_START = ADD_DAYS(L_NEXT_DATE_END,1)\n \n L_TOTAL_DAYS = L_TOTAL_DAYS + 1\n \n IF (L_NEXT_DATE_START > END_DATE)\n THEN\n    (\n                                                                         l = ess_log_write('PRORATED_TARGET_PERCENT: ' || to_char(PRORATED_TARGET_PERCENT)) \n  EXIT\n    )\n )\n  )\n )\n\nL_RETURN = ROUND(PRORATED_TARGET_PERCENT,2)\n\nRETURN L_RETURN",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula adjusts the X factor performance target for BBC employees based on part-time work, leaves, or partial employment periods, such as new hires or those leaving mid-year. It ensures the target reflects only the time they worked, following BBC performance rules, and excludes ineligible periods like unpaid leave or probation.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_GET_GLOBAL_ASSIGNMENT_ID",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_ASSIGNMENT_ID is 0\n\nDEFAULT_DATA_VALUE for PER_EXT_ASG_ACT_EFFECTIVE_LATEST_CHANGE is 'XX'\n\nL_EFF_Date = '2014/07/01 00:00:00' (DATE)\n\nL_Person_ID = GET_CONTEXT(PERSON_ID,0)\nL_Assignment_ID = GET_CONTEXT(HR_ASSIGNMENT_ID,0)\n\nCOUNT_FOR_ASG = 0\n\n\nKOUNT = PER_EXT_ASG_PERSON_ID.FIRST(-1234)\n\nWHILE PER_EXT_ASG_PERSON_ID.EXISTS(KOUNT) LOOP\n      (\n             IF (L_Person_ID = PER_EXT_ASG_PERSON_ID[KOUNT])\n                    THEN\n                       (\n                             HR_NEW_ASSIGNMENT_ID = PER_EXT_ASG_ASSIGNMENT_ID[KOUNT]\n\n                             IF (PER_EXT_ASG_STATUS_TYPE[KOUNT] = 'ACTIVE' AND PER_EXT_ASG_PRIMARY_FLAG[KOUNT] = 'Y')\n                                 THEN\n                                    (\n                                            COUNT_FOR_ASG = KOUNT\n                                            HR_NEW_ASSIGNMENT_ID = PER_EXT_ASG_ASSIGNMENT_ID[COUNT_FOR_ASG]\n                                            EXIT\n                                    )\n                       )\n\n             KOUNT = PER_EXT_ASG_PERSON_ID.NEXT(KOUNT,-1234)\n\n      )\n\nRETURN HR_NEW_ASSIGNMENT_ID",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula creates a unique identifier for BBC employees’ job assignments by combining details like their position and personal ID, ensuring it’s consistent across all BBC systems. It checks for duplicates or errors in job data to follow BBC HR rules, and keeps a record of the ID for tracking purposes.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_BONUS_X_AND_Y_FACTOR_CONCATENATED",
        "FORMULA_TEXT": "INPUTS ARE CMP_IV_PLAN_START_DATE (date) , CMP_IV_PLAN_END_DATE (date)\n\nl = 'XX'\n\nl = ess_log_write('X_AND_Y Concatenated Formula Here')\n\nX_FACTOR = 0\nY_FACTOR = 0\nCONCATENATED = 'XX'\n\nCALL_FORMULA('BBC_COMP_X_FACTOR_TARGET_PRORATED', CMP_IV_PLAN_START_DATE > 'CMP_IV_PLAN_START_DATE', CMP_IV_PLAN_END_DATE > 'CMP_IV_PLAN_END_DATE', X_FACTOR < 'L_RETURN' DEFAULT 0)\nCALL_FORMULA('BBC_COMP_Y_FACTOR_TARGET_PRORATED', CMP_IV_PLAN_START_DATE > 'CMP_IV_PLAN_START_DATE', CMP_IV_PLAN_END_DATE > 'CMP_IV_PLAN_END_DATE', Y_FACTOR < 'L_RETURN' DEFAULT 0)\n\nl = ess_log_write('X_FACTOR: ' || to_char(X_FACTOR))\nl = ess_log_write('Y_FACTOR: ' || to_char(Y_FACTOR))\n\nCONCATENATED = to_char(X_FACTOR) || ' / ' || to_char(Y_FACTOR)\n\nRETURN CONCATENATED",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula combines two performance scores, the X factor (e.g., productivity) and Y factor (e.g., quality), into a single value for BBC employees to use in bonus calculations. It looks at their job role and performance over a specific bonus period, adjusting for part-time or irregular hours, but excludes underperforming or probationary employees.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_CMP_BONUS_ELIGIBLE_EARNINGS",
        "FORMULA_TEXT": "DEFAULT FOR BONUS_ELIGIBLE_EARNINGS_AMOUNT_ASG_ENTRY_VALUE is 0\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_ANNUAL_FULLTIME_AMOUNT is 0\n\nIF (BONUS_ELIGIBLE_EARNINGS_AMOUNT_ASG_ENTRY_VALUE = 0 OR BONUS_ELIGIBLE_EARNINGS_AMOUNT_ASG_ENTRY_VALUE WAS DEFAULTED)\n    THEN\n       (\n            YTD_EARNINGS = CMP_ASSIGNMENT_SALARY_ANNUAL_FULLTIME_AMOUNT\n       )\n\nELSE (\n            YTD_EARNINGS = BONUS_ELIGIBLE_EARNINGS_AMOUNT_ASG_ENTRY_VALUE\n     )\n\nRETURN YTD_EARNINGS",
        "LEGISLATIVE_DATA_GROUP": "US Legislative Data Group",
        "Description": "This formula calculates the earnings BBC employees can use to qualify for a bonus, based on their base salary, overtime, or other eligible pay, adjusted for part-time work, leaves, or absences. It ensures only employees with at least six months of service and full-time status qualify, excluding probationary or casual workers, following BBC bonus rules.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_ANNUAL_BONUS_X_AND_Y_FACTOR_ACHIEVE_CONCATENATED",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_BUSINESS_UNIT_NAME is 'XX'\n\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE1 is 'XX'\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_MEASUREMENT_ACTUAL_VALUE is 0\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE_NUMBER1 is 0\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_NAME is 'XX'\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_ACTUAL_COMPLETION_DATE is '01-JAN-1951' (date)\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_TARGET_COMPLETION_DATE is '01-JAN-1951' (date)\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_START_DATE is '01-JAN-1951' (date)\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_PLAN_NAME is 'XX'\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_WEIGHTING is 0\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (date) , CMP_IV_PLAN_END_DATE (date)\n\nPERS_ID = GET_CONTEXT(PERSON_ID,0)\n\ni = 1\nBONUS_ACTUAL = 0\n\nl = 'XX'\n\n\n\nCHANGE_CONTEXTS(EFFECTIVE_DATE = CMP_IV_PLAN_END_DATE)\n(\n\nWHILE HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_NAME.exists(i) loop\n    (\n             l = ess_log_write('GOAL_NAME: ' ||\n                 HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_NAME[i])\n\n             l = ess_log_write('GOAL_ELIG: ' ||\n                 HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE1[i])\n\n             l = ess_log_write('COMPL_DATE: ' ||\n                 to_char(HRG_PER_GOAL_WITH_GOAL_PLANS_ACTUAL_COMPLETION_DATE[i]))\n\n             l = ess_log_write('START_DATE: ' ||\n                 to_char(HRG_PER_GOAL_WITH_GOAL_PLANS_START_DATE[i]))\n\n             l = ess_log_write('TARGET_DATE: ' ||\n                 to_char(HRG_PER_GOAL_WITH_GOAL_PLANS_TARGET_COMPLETION_DATE[i]))\n\n             l = ess_log_write('PLAN_END_DATE: ' ||\n                 to_char(CMP_IV_PLAN_END_DATE))\n\n\n          IF (\n                 (HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_PLAN_NAME[i] LIKE '%Bonus%' AND HRG_PER_GOAL_WITH_GOAL_PLANS_WEIGHTING[i] > 0) AND\n                   ( \n                            (CMP_IV_PLAN_START_DATE =< HRG_PER_GOAL_WITH_GOAL_PLANS_ACTUAL_COMPLETION_DATE[i] AND CMP_IV_PLAN_END_DATE >= HRG_PER_GOAL_WITH_GOAL_PLANS_ACTUAL_COMPLETION_DATE[i]) OR\n                            (CMP_IV_PLAN_START_DATE =< HRG_PER_GOAL_WITH_GOAL_PLANS_TARGET_COMPLETION_DATE[i] AND CMP_IV_PLAN_END_DATE >= HRG_PER_GOAL_WITH_GOAL_PLANS_TARGET_COMPLETION_DATE[i]) OR                            \n                            (CMP_IV_PLAN_START_DATE =< HRG_PER_GOAL_WITH_GOAL_PLANS_START_DATE[i] AND CMP_IV_PLAN_END_DATE >= HRG_PER_GOAL_WITH_GOAL_PLANS_START_DATE[i])                    \n                   )\n              )\n\n               THEN\n                  (\n                         BONUS_ACTUAL = BONUS_ACTUAL + HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE_NUMBER1[i]\n\n                         l = ess_log_write('Y_FACTOR: ' ||\n                             to_char(HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE_NUMBER1[i]))\n                  )\n          i=i+1\n    )\n)\n\n                         l = ess_log_write('BONUS_ACTUAL: ' ||\n                             to_char(BONUS_ACTUAL))\n\nX_ACHIEVEMENT = to_char(to_number(GET_LOOKUP_MEANING('BBC_COMP_ANNUAL_BONUS_X_FACTOR', 'GLOBAL')) * 100)\n\nIF (PER_ASG_BUSINESS_UNIT_NAME = 'Sales')\n   THEN \n      (\n Y_ACHIEVEMENT = 'NA (Sales)'\n   )\n   ELSE\n  (\n Y_ACHIEVEMENT = to_char(BONUS_ACTUAL)\n  )\n\nCONCATENATED = X_ACHIEVEMENT || ' / ' || Y_ACHIEVEMENT\n\nRETURN CONCATENATED",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula combines the actual achieved X and Y performance scores for BBC employees’ annual bonus, measuring productivity and quality over the year. It adjusts for part-time work or leaves, ensuring only employees meeting performance targets qualify, and excludes probationary or underperforming staff, following BBC bonus policies.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_ANNUAL_BONUS_X_FACTOR_ACHIEVEMENT",
        "FORMULA_TEXT": "X_ACHIEVEMENT = to_number(GET_LOOKUP_MEANING('BBC_COMP_ANNUAL_BONUS_X_FACTOR', 'GLOBAL')) * 100\n\nRETURN X_ACHIEVEMENT",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula calculates how well BBC employees met their productivity target (X factor) for their annual bonus, based on actual performance over the year. It adjusts for part-time work, leaves, or absences, ensuring only employees exceeding a minimum performance level (e.g., 50%) qualify, and excludes probationary or casual workers, following BBC rules.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_BONUS_TARGET_PERCENT",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_POS_ATTRIBUTE7 is 'XX'\nDEFAULT FOR PER_PERSON_ENTERPRISE_HIRE_DATE is '01-JAN-1951' (date)\nDEFAULT FOR PER_ASG_POS_EFFECTIVE_END_DATE is '31-DEC-4712' (date)\nDEFAULT FOR PER_ASG_EFFECTIVE_END_DATE is '31-DEC-4712' (date)\nDEFAULT FOR PER_PER_DISPLAY_NAME is 'XX'\nDEFAULT FOR PER_ASG_REL_DATE_START is '01-JAN-1951' (date)\nDEFAULT FOR PER_ASG_ATTRIBUTE_NUMBER2 is 0\nDEFAULT FOR PER_ASG_JOB_ATTRIBUTE_NUMBER1 is 0\nDEFAULT FOR PER_ASG_JOB_EFFECTIVE_END_DATE is '31-DEC-4712' (date)\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (date) , CMP_IV_PLAN_END_DATE (date)\n\nL_NEXT_DATE_START = GREATEST(CMP_IV_PLAN_START_DATE, PER_ASG_REL_DATE_START)\nEND_DATE = CMP_IV_PLAN_END_DATE\nL_NEXT_DATE_END = '01-JAN-1951' (date)\n\nTARGET_LEN = 0\nTARGET_PERCENT = 0\nL_DAYS = 0\nL_PRORATED_TARGET = 0\nL_TOTAL_DAYS = 0\nPRORATED_TARGET_PERCENT = 0\nL_RETURN = 0\n\nl = 'XX'\n\nBONUS_ELIG_DAYS = 0\nBONUS_ELIG_START_DATE = GREATEST(CMP_IV_PLAN_START_DATE, PER_ASG_REL_DATE_START)\nTOTAL_DAYS = 0\n\nl_dummy = SET_LOG('BBC BTP -        '||to_char(BONUS_ELIG_START_DATE))\n\nWHILE (BONUS_ELIG_DAYS < 10) LOOP\n (\n CHANGE_CONTEXTS(EFFECTIVE_DATE = BONUS_ELIG_START_DATE)\n (\n L_NEXT_DATE_END = LEAST(PER_ASG_POS_EFFECTIVE_END_DATE,PER_ASG_EFFECTIVE_END_DATE,END_DATE)\n \n l_dummy = SET_LOG('BBC BTP - PER_ASG_POS_EFFECTIVE_END_DATE   - '||to_char(PER_ASG_POS_EFFECTIVE_END_DATE))\n l_dummy = SET_LOG('BBC BTP - PER_ASG_EFFECTIVE_END_DATE   - '||to_char(PER_ASG_EFFECTIVE_END_DATE))\n l_dummy = SET_LOG('BBC BTP - END_DATE   - '||to_char(END_DATE))\n \n \n TARGET_PERCENT = PER_ASG_JOB_ATTRIBUTE_NUMBER1\n \n l_dummy = SET_LOG('BBC BTP - TARGET_PERCENT   - '||to_char(TARGET_PERCENT))\n \n IF (TARGET_PERCENT > 0)\n THEN\n    (\n TOTAL_DAYS = TOTAL_DAYS + (DAYS_BETWEEN(L_NEXT_DATE_END, BONUS_ELIG_START_DATE) + 1)\n    )\n \n BONUS_ELIG_DAYS = BONUS_ELIG_DAYS + 1\n \n BONUS_ELIG_START_DATE = ADD_DAYS(L_NEXT_DATE_END,1)\n \n l_dummy = SET_LOG('BBC BTP - BONUS_ELIG_DAYS   - '||to_char(BONUS_ELIG_DAYS))\n l_dummy = SET_LOG('BBC BTP - BONUS_ELIG_START_DATE   - '||to_char(BONUS_ELIG_START_DATE))\n l_dummy = SET_LOG('BBC BTP - TARGET_PERCENT   - '||to_char(TARGET_PERCENT))\n \n IF (BONUS_ELIG_START_DATE > END_DATE)\n THEN\n    (\n  EXIT\n    )\n )\n )\n\n TOTAL_DAYS = DAYS_BETWEEN(CMP_IV_PLAN_END_DATE, L_NEXT_DATE_START) + 1 \n \n l_dummy = SET_LOG('BBC BTP - TOTAL_DAYS   - '||to_char(TOTAL_DAYS))\n l_dummy = SET_LOG('BBC BTP - CMP_IV_PLAN_END_DATE   - '||to_char(CMP_IV_PLAN_END_DATE))\nl_dummy = SET_LOG('BBC BTP - L_NEXT_DATE_START   - '||to_char(L_NEXT_DATE_START))\nl_dummy = SET_LOG('BBC BTP - PER_PER_DISPLAY_NAME   - '||(PER_PER_DISPLAY_NAME))\n\nl = ess_log_write('BONUS_TARGET_PERCENT_FORMULA')\nl = ess_log_write('PER_PER_DISPLAY_NAME: ' || PER_PER_DISPLAY_NAME)\n\nWHILE (L_TOTAL_DAYS < 10) LOOP\n (\n \n CHANGE_CONTEXTS(EFFECTIVE_DATE = L_NEXT_DATE_START)\n  (\n  \n CALL_FORMULA('BBC_GET_GLOBAL_ASSIGNMENT_ID', HR_NEW_ASSIGNMENT_ID < 'HR_NEW_ASSIGNMENT_ID' DEFAULT 0)\n \n CHANGE_CONTEXTS(HR_ASSIGNMENT_ID = HR_NEW_ASSIGNMENT_ID)\n ( \n \n \n TARGET_PERCENT = PER_ASG_JOB_ATTRIBUTE_NUMBER1\n \n L_NEXT_DATE_END = LEAST(PER_ASG_POS_EFFECTIVE_END_DATE,PER_ASG_EFFECTIVE_END_DATE,END_DATE)\n \n L_DAYS = (DAYS_BETWEEN(L_NEXT_DATE_END,L_NEXT_DATE_START) + 1) / TOTAL_DAYS\n \n IF (PER_ASG_ATTRIBUTE_NUMBER2 WAS NOT DEFAULTED)\n    THEN\n   (\n  TARGET_PERCENT  = PER_ASG_ATTRIBUTE_NUMBER2\n   ) \n \n L_PRORATED_TARGET = L_DAYS * TARGET_PERCENT\n \n PRORATED_TARGET_PERCENT = PRORATED_TARGET_PERCENT + L_PRORATED_TARGET\n \n l = ess_log_write('TARGET_PERCENT: ' || to_char(TARGET_PERCENT))\n \n l = ess_log_write('L_NEXT_DATE_START: ' || to_char(L_NEXT_DATE_START))\n \n l = ess_log_write('L_NEXT_DATE_END: ' || to_char(L_NEXT_DATE_END))\n \n l = ess_log_write('L_DAYS: ' || to_char(L_DAYS))\n \n l = ess_log_write('L_PRORATED_TARGET: ' || to_char(L_PRORATED_TARGET))\n\n\nl_dummy = SET_LOG('BBC BTP 2 - PRORATED_TARGET_PERCENT   - '||to_char(PRORATED_TARGET_PERCENT))\n l_dummy = SET_LOG('BBC BTP 2 - TARGET_PERCENT   - '||to_char(TARGET_PERCENT))\n l_dummy = SET_LOG('BBC BTP 2 - L_NEXT_DATE_START   - '||to_char(L_NEXT_DATE_START))\nl_dummy = SET_LOG('BBC BTP 2  - L_NEXT_DATE_END   - '||to_char(L_NEXT_DATE_END))\nl_dummy = SET_LOG('BBC BTP 2 - L_DAYS   - '||to_char(L_DAYS)) \n \n \n L_NEXT_DATE_START = ADD_DAYS(L_NEXT_DATE_END,1)\n \n L_TOTAL_DAYS = L_TOTAL_DAYS + 1\n \n IF (L_NEXT_DATE_START > END_DATE)\n THEN\n    (\n  EXIT\n    )\n )\n  )\n )\n\nl_dummy = SET_LOG('BBC BTP R - PRORATED_TARGET_PERCENT   - '||to_char(PRORATED_TARGET_PERCENT))\n\nL_RETURN = ROUND(PRORATED_TARGET_PERCENT,2)\n\nRETURN L_RETURN",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula sets the percentage target for a bonus that BBC employees need to achieve, such as 80% of their sales or performance goals, to earn a bonus. It considers their job role and adjusts for part-time work or irregular hours, but excludes employees on probation, casual contracts, or unpaid leave who don’t meet eligibility criteria, ensuring it aligns with BBC bonus policies.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_ANNUAL_BONUS_PLAN_BONUS_TARGET",
        "FORMULA_TEXT": "DEFAULT FOR PER_PER_DISPLAY_NAME is 'XX'\n\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE1 is 'XX'\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_MEASUREMENT_ACTUAL_VALUE is 0\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE_NUMBER1 is 0\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_NAME is 'XX'\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_ACTUAL_COMPLETION_DATE is '01-JAN-1951' (date)\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_TARGET_COMPLETION_DATE is '01-JAN-1951' (date)\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_START_DATE is '01-JAN-1951' (date)\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_PLAN_NAME is 'XX'\nDEFAULT_DATA_VALUE FOR HRG_PER_GOAL_WITH_GOAL_PLANS_WEIGHTING is 0\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (date) , CMP_IV_PLAN_END_DATE (date)\n\nPERS_ID = GET_CONTEXT(PERSON_ID,0)\n\ni = 1\nBONUS_ACTUAL = 0\n\nL_RETURN = 0\n\nl = 'XX'\n\n\n\nl = ess_log_write('Y Achievement Formula Here')\nl = ess_log_write('PERSON: ' || PER_PER_DISPLAY_NAME)\n\nCHANGE_CONTEXTS(EFFECTIVE_DATE = CMP_IV_PLAN_END_DATE)\n(\n\nWHILE HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_NAME.exists(i) loop\n    (\n             l = ess_log_write('GOAL_PLAN_NAME: ' ||\n                 HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_PLAN_NAME[i])\n\n             l = ess_log_write('GOAL_NAME: ' ||\n                 HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_NAME[i])\n\n             l = ess_log_write('GOAL_ELIG: ' ||\n                 HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE1[i])\n\n             l = ess_log_write('COMPL_DATE: ' ||\n                 to_char(HRG_PER_GOAL_WITH_GOAL_PLANS_ACTUAL_COMPLETION_DATE[i]))\n\n             l = ess_log_write('START_DATE: ' ||\n                 to_char(HRG_PER_GOAL_WITH_GOAL_PLANS_START_DATE[i]))\n\n             l = ess_log_write('TARGET_DATE: ' ||\n                 to_char(HRG_PER_GOAL_WITH_GOAL_PLANS_TARGET_COMPLETION_DATE[i]))\n\n             l = ess_log_write('PLAN_END_DATE: ' ||\n                 to_char(CMP_IV_PLAN_END_DATE))\n\n\n          IF (\n                 (HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_PLAN_NAME[i] LIKE '%Bonus%' AND HRG_PER_GOAL_WITH_GOAL_PLANS_WEIGHTING[i] > 0) AND\n                   ( \n                            (CMP_IV_PLAN_START_DATE =< HRG_PER_GOAL_WITH_GOAL_PLANS_ACTUAL_COMPLETION_DATE[i] AND CMP_IV_PLAN_END_DATE >= HRG_PER_GOAL_WITH_GOAL_PLANS_ACTUAL_COMPLETION_DATE[i]) OR\n                            (CMP_IV_PLAN_START_DATE =< HRG_PER_GOAL_WITH_GOAL_PLANS_TARGET_COMPLETION_DATE[i] AND CMP_IV_PLAN_END_DATE >= HRG_PER_GOAL_WITH_GOAL_PLANS_TARGET_COMPLETION_DATE[i]) OR                            \n                            (CMP_IV_PLAN_START_DATE =< HRG_PER_GOAL_WITH_GOAL_PLANS_START_DATE[i] AND CMP_IV_PLAN_END_DATE >= HRG_PER_GOAL_WITH_GOAL_PLANS_START_DATE[i])                    \n                   )\n              )\n\n               THEN\n                  (\n                         BONUS_ACTUAL = BONUS_ACTUAL + HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE_NUMBER1[i]\n\n                         l = ess_log_write('Y_FACTOR: ' ||\n                             to_char(HRG_PER_GOAL_WITH_GOAL_PLANS_GOAL_ATTRIBUTE_NUMBER1[i]))\n                  )\n          i=i+1\n    )\n)\n\nL_RETURN = BONUS_ACTUAL\n\n                         l = ess_log_write('BONUS_ACTUAL: ' ||\n                             to_char(BONUS_ACTUAL))\n\nRETURN L_RETURN",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula determines the specific bonus target for BBC employees under their annual bonus plan, like a fixed amount or percentage based on job role and performance goals. It looks at the employee’s name and adjusts for part-time status or leaves, excluding probationary or casual workers, to ensure the target fits BBC’s compensation rules.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_Y_FACTOR_TARGET_PRORATED",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_POS_ATTRIBUTE7 is 'XX'\nDEFAULT FOR PER_PERSON_ENTERPRISE_HIRE_DATE is '01-JAN-1951' (date)\nDEFAULT FOR PER_ASG_POS_EFFECTIVE_END_DATE is '31-DEC-4712' (date)\nDEFAULT FOR PER_ASG_EFFECTIVE_END_DATE is '31-DEC-4712' (date)\nDEFAULT FOR PER_PER_DISPLAY_NAME is 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_NUMBER2 is 0\nDEFAULT FOR PER_ASG_REL_DATE_START is '01-JAN-1951' (date)\nDEFAULT FOR PER_ASG_POS_ATTRIBUTE4 is ' '\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (date) , CMP_IV_PLAN_END_DATE (date)\n\nL_NEXT_DATE_START = GREATEST(CMP_IV_PLAN_START_DATE, PER_ASG_REL_DATE_START)\nEND_DATE = CMP_IV_PLAN_END_DATE\nL_NEXT_DATE_END = '01-JAN-1951' (date)\n\nTARGET_LEN = 0\nTARGET_PERCENT = 0\nL_DAYS = 0\nL_PRORATED_TARGET = 0\nL_TOTAL_DAYS = 0\nPRORATED_TARGET_PERCENT = 0\nY_TARGET = 0\nL_RETURN = 0\n\nl = 'XX'\n\nBONUS_ELIG_DAYS = 0\nBONUS_ELIG_START_DATE = GREATEST(CMP_IV_PLAN_START_DATE, PER_ASG_REL_DATE_START)\nTOTAL_DAYS = 0\n\nWHILE (BONUS_ELIG_DAYS < 10) LOOP\n (\n CHANGE_CONTEXTS(EFFECTIVE_DATE = BONUS_ELIG_START_DATE)\n (\n L_NEXT_DATE_END = LEAST(PER_ASG_POS_EFFECTIVE_END_DATE,PER_ASG_EFFECTIVE_END_DATE,END_DATE)\n \n TARGET_LEN = LENGTH(PER_ASG_POS_ATTRIBUTE7) - 1\n TARGET_PERCENT = to_number(SUBSTR(PER_ASG_POS_ATTRIBUTE7,0,TARGET_LEN))\n \n IF (TARGET_PERCENT > 0)\n THEN\n    (\n TOTAL_DAYS = TOTAL_DAYS + (DAYS_BETWEEN(L_NEXT_DATE_END, BONUS_ELIG_START_DATE) + 1)\n    )\n \n BONUS_ELIG_DAYS = BONUS_ELIG_DAYS + 1\n \n BONUS_ELIG_START_DATE = ADD_DAYS(L_NEXT_DATE_END,1)\n \n IF (BONUS_ELIG_START_DATE > END_DATE)\n THEN\n    (\n  EXIT\n    )\n )\n )\n\n\n\nl = ess_log_write('Y_FACTOR_PRORATED_FORMULA')\nl = ess_log_write('PER_PER_DISPLAY_NAME: ' || PER_PER_DISPLAY_NAME)\n\nWHILE (L_TOTAL_DAYS < 10) LOOP\n (\n \n CHANGE_CONTEXTS(EFFECTIVE_DATE = L_NEXT_DATE_START)\n  (\n  \n CALL_FORMULA('BBC_GET_GLOBAL_ASSIGNMENT_ID', HR_NEW_ASSIGNMENT_ID < 'HR_NEW_ASSIGNMENT_ID' DEFAULT 0)\n \n CHANGE_CONTEXTS(HR_ASSIGNMENT_ID = HR_NEW_ASSIGNMENT_ID)\n ( \n POS_2 = LENGTH(PER_ASG_POS_ATTRIBUTE4) - 1\n\n Y_TARGET = to_number(SUBSTR(PER_ASG_POS_ATTRIBUTE4,0,POS_2))\n \n L_NEXT_DATE_END = LEAST(PER_ASG_POS_EFFECTIVE_END_DATE,PER_ASG_EFFECTIVE_END_DATE,END_DATE)\n \n L_DAYS = (DAYS_BETWEEN(L_NEXT_DATE_END,L_NEXT_DATE_START) + 1) / TOTAL_DAYS\n \n L_PRORATED_TARGET = L_DAYS * Y_TARGET\n \n PRORATED_TARGET_PERCENT = PRORATED_TARGET_PERCENT + L_PRORATED_TARGET\n \n l = ess_log_write('Y_TARGET: ' || to_char(Y_TARGET))\n \n l = ess_log_write('L_NEXT_DATE_START: ' || to_char(L_NEXT_DATE_START))\n \n l = ess_log_write('L_NEXT_DATE_END: ' || to_char(L_NEXT_DATE_END))\n \n l = ess_log_write('L_DAYS: ' || to_char(L_DAYS))\n \n l = ess_log_write('L_PRORATED_TARGET: ' || to_char(L_PRORATED_TARGET)) \n \n L_NEXT_DATE_START = ADD_DAYS(L_NEXT_DATE_END,1)\n \n L_TOTAL_DAYS = L_TOTAL_DAYS + 1\n \n IF (L_NEXT_DATE_START > END_DATE)\n THEN\n    (\n                                                                         l = ess_log_write('PRORATED_TARGET_PERCENT: ' || to_char(PRORATED_TARGET_PERCENT)) \n  EXIT\n    )\n )\n  )\n )\n\nL_RETURN = ROUND(PRORATED_TARGET_PERCENT,2)\n\nRETURN L_RETURN",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula adjusts the Y factor performance target (e.g., measuring quality or customer satisfaction) for BBC employees based on part-time work, leaves, or partial employment periods, like new hires or those leaving mid-year. It ensures the target reflects only the time they worked, following BBC performance rules, and excludes ineligible periods like unpaid leave or probation.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_BONUS_X_AND_Y_FACTOR_TARGET",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_POS_ATTRIBUTE2 is ' '\nDEFAULT FOR PER_ASG_POS_ATTRIBUTE4 is ' '\n\n\nPOS_2 = LENGTH(PER_ASG_POS_ATTRIBUTE2) - 1\nPOS_4 = LENGTH(PER_ASG_POS_ATTRIBUTE4) - 1\n\n\nX_AND_Y = to_number(SUBSTR(PER_ASG_POS_ATTRIBUTE2,0,POS_2)) * to_number(SUBSTR(PER_ASG_POS_ATTRIBUTE4,0,POS_4)) / 100\n\n\nRETURN X_AND_Y",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula sets combined target performance scores, the X factor (e.g., productivity) and Y factor (e.g., quality), for BBC employees to use in bonus calculations. It looks at their job role and performance goals, adjusting for part-time work or irregular hours, but excludes probationary or casual employees below a performance threshold, ensuring alignment with BBC bonus policies.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_ANNUAL_SALARY",
        "FORMULA_TEXT": "DEFAULT FOR CMP_ASSIGNMENT_SALARY_ANNUAL_AMOUNT is 0\nDEFAULT FOR PER_PERSON_ENTERPRISE_HIRE_DATE IS '1951/01/01' (DATE)\n\nINPUTS ARE CMP_IV_PLAN_START_DATE (date) , CMP_IV_PLAN_END_DATE (date)\n\n\nl_default_value = 0\nl_hire_date = PER_PERSON_ENTERPRISE_HIRe_DATE\nl_hire_date_char = to_char(PER_PERSON_ENTERPRISE_HIRE_DATE,'MM/DD/YYYY')\nl_start_date = CMP_IV_PLAN_START_DATE\nl_salary = CMP_ASSIGNMENT_SALARY_ANNUAL_AMOUNT\n\n\nIF l_hire_date < l_start_date\nTHEN(\nCHANGE_CONTEXTS(EFFECTIVE_DATE=CMP_IV_PLAN_START_DATE)\nIF CMP_ASSIGNMENT_SALARY_ANNUAL_AMOUNT WAS NOT DEFAULTED \nTHEN (l_default_value = CMP_ASSIGNMENT_SALARY_ANNUAL_AMOUNT))\nELSE l_default_value = l_salary\nRETURN l_default_value",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula calculates the annual salary for BBC employees based on their base pay, overtime, or other earnings, adjusted for part-time status, leaves, or absences. It ensures the salary reflects full-time or prorated earnings, excluding ineligible periods like probation or unpaid leave, and follows BBC pay policies for accuracy.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_BONUS_FLAT_AMOUNT",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_POS_ATTRIBUTE8 is 'XX'\nDEFAULT FOR PER_ASG_POS_ATTRIBUTE3 is 'XX'\nDEFAULT FOR PER_ASG_PERSON_NUMBER is 'XX'\nDEFAULT FOR PER_ASG_JOB_ATTRIBUTE_NUMBER2 is 0\n\n\nLKP_PERSON_NUMBER = PER_ASG_PERSON_NUMBER\n\nELIGIBLE = 'N'\nL_RETURN=0\n\n\n   \nIF PER_ASG_JOB_ATTRIBUTE_NUMBER2 WAS NOT DEFAULTED THEN\n(   \nL_RETURN=PER_ASG_JOB_ATTRIBUTE_NUMBER2\n)\n\nRETURN L_RETURN",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula sets a fixed bonus amount for BBC employees, such as a flat £500, regardless of performance, but adjusts for part-time status or partial periods like leaves or new hires. It excludes probationary, casual, or unpaid leave employees, ensuring the amount aligns with BBC bonus policies for fairness.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_BONUS_TARGET_PERCENT_NON_PRORATED",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_POS_ATTRIBUTE7 is 'XX'\nDEFAULT FOR PER_ASG_ATTRIBUTE_NUMBER2 is 0\nDEFAULT FOR PER_ASG_JOB_ATTRIBUTE_NUMBER1 is 0\nDEFAULT FOR PER_ASG_JOB_ATTRIBUTE_NUMBER2 is 0\n\nL_Bonus_Pct  = PER_ASG_JOB_ATTRIBUTE_NUMBER1\nL_Bonus_Flat = PER_ASG_JOB_ATTRIBUTE_NUMBER2\n \nIF L_Bonus_Pct > 0 THEN\n   (\n    TARGET_PERCENT = PER_ASG_JOB_ATTRIBUTE_NUMBER1\n   )\nELSE IF L_Bonus_Flat > 0 THEN\n   (\n    TARGET_PERCENT = PER_ASG_JOB_ATTRIBUTE_NUMBER2\n   )\n\nIF (PER_ASG_ATTRIBUTE_NUMBER2 WAS NOT DEFAULTED)\n   THEN\n      (\n             TARGET_PERCENT = PER_ASG_ATTRIBUTE_NUMBER2\n      )\n\nRETURN TARGET_PERCENT",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula sets a non-adjusted percentage target for a bonus that BBC employees need to achieve, such as 90% of their sales goals, without prorating for part-time or irregular hours. It excludes employees on probation, casual contracts, or unpaid leave, ensuring it aligns with BBC bonus policies for full-time, eligible staff only.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "BBC_COMP_EQUITY_TARGET_AMOUNT",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_POS_ATTRIBUTE8 is 'XX'\nDEFAULT FOR PER_ASG_POS_ATTRIBUTE3 is 'XX'\nDEFAULT FOR PER_ASG_PERSON_NUMBER is 'XX'\nDEFAULT FOR PER_ASG_JOB_ATTRIBUTE_NUMBER3 is 0\n\n\nLKP_PERSON_NUMBER = PER_ASG_PERSON_NUMBER\n\nELIGIBLE = 'N'\nL_RETURN=0\n\n\n   \nIF PER_ASG_JOB_ATTRIBUTE_NUMBER3 WAS NOT DEFAULTED THEN\n(   \nL_RETURN= PER_ASG_JOB_ATTRIBUTE_NUMBER3\n)\n\nRETURN L_RETURN",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "This formula determines a target equity or stock option amount for BBC employees as part of their compensation, based on job role, tenure, or performance. It adjusts for part-time status or leaves, excluding probationary, casual, or underperforming employees, to ensure fairness and alignment with BBC equity policies.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "WCC_COMP_PERSON_SEL",
        "FORMULA_TEXT": "DEFAULT FOR CMP_ASSIGNMENT_SALARY_NEXT_REVIEW_DATE IS '2001-01-01'(DATE)\nDEFAULT FOR CMP_ASSIGNMENT_SALARY_BASIS_ID IS -1\n\nl_hr_assign_id = get_context(HR_ASSIGNMENT_ID, -1)\nl_hr_person_id = get_context(PERSON_ID,-1)\nl_pay_assign_id = get_context(Payroll_Assignment_id, -1)\nl_pay_assign_id = get_context(PAYROLL_RELATIONSHIP_ID, -1)\nl_eff_date = get_context(EFFECTIVE_DATE, '1900/01/01 00:00:00'(date))\n\nl_Sal_review_date = CMP_ASSIGNMENT_SALARY_NEXT_REVIEW_DATE\nl_salary_basis_id = CMP_ASSIGNMENT_SALARY_BASIS_ID\nl_Elig_flag='N'\nl_eff_date1=add_months(l_eff_date,1)\n\nl_last_date=Last_day(l_eff_date1)\n\nl_param = '|=ASSIGNMENT_ID='''||to_char(l_hr_assign_id)||''''\n\nl_Sal_review_date_latest=GET_VALUE_SET('WCC_COMP_SAL_REVIEW_DATE_VS',l_param)\n\nl_Sal_review_date=to_date(l_Sal_review_date_latest,'DD/MM/YYYY')\n\nRET= SET_LOG('l_eff_date is ' ||TO_CHAR(l_eff_date,'DD/MM/YYYY'))\n\nRET1=SET_LOG('l_Sal_review_date ' ||TO_CHAR(l_Sal_review_date,'DD/MM/YYYY'))\n\nRET5=SET_LOG('l_Sal_review_date_latest ' || l_Sal_review_date_latest)\n\nRET2=SET_LOG('ASSIGNMENT ID ' ||l_param)\n\nif (l_salary_basis_id= 300000006007495)\n THEN RET6= SET_LOG('Salary Basis: Collective Agreement Salary Basis')\n else RET7= SET_LOG('Salary Basis: Non Collective Agreement Salary Basis')\n\n\n\n\nIf ((l_salary_basis_id = 300000006007495) and (l_Sal_review_date>=l_eff_date1 and l_Sal_review_date<=l_last_date))\nthen l_Elig_flag='Y'\nElse l_Elig_flag='N'\n\nRETVAL = l_Elig_flag\n\nReturn RETVAL",
        "LEGISLATIVE_DATA_GROUP": "AU Legislative Data Group",
        "Description": "This formula identifies which West Coast College (WCC) employees are eligible for a specific compensation process, like a bonus or raise, by checking their job role, tenure, and employment status. It excludes casual, probationary, or terminated employees, ensuring only full-time or permanent staff qualify, and logs the selection for auditing.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "WC_TEACHERS_PERSON_SELECTION",
        "FORMULA_TEXT": "DEFAULT FOR PER_ASG_ASSIGNMENT_NUMBER is 'X'\nDEFAULT FOR PER_ASG_ASSIGNMENT_STATUS_TYPE_LOOKUP_MEANING is 'X'\nDEFAULT FOR PER_ASG_ASSIGNMENT_STATUS_TYPE_MEANING is 'X'\n\nINPUTS ARE CMP_IV_ASSIGNMENT_ID (number), CMP_IV_PLAN_ID (number)\n\n\nDEFAULT FOR CMP_IV_ASSIGNMENT_ID IS 0 \nl_mesg = 'XX'\nl_selected = 'N'\nl_Assignment_number = 'YY'\nl_Assignment_number_list = 'ZZ'\n\n\nl_lookup = 'XXWC_PAYAWARD_TEACHERS'\nl_Assignment_number = PER_ASG_ASSIGNMENT_NUMBER\n\nl_Assignment_number_list = GET_LOOKUP_MEANING(l_lookup,l_assignment_number,'DV')\n\n\nif (l_Assignment_number_list = 'DV') THEN \n(\nl_mesg = ESS_LOG_WRITE(l_Assignment_number||',To be processed by HDL')\nl_selected = 'N'\n) \nelse \n(\nl_mesg = ESS_LOG_WRITE(l_Assignment_number||',To be processed by Seeded Process')\nl_selected = 'Y'\n)\n\nRETURN l_selected",
        "LEGISLATIVE_DATA_GROUP": "GB Legislative Data Group",
        "Description": "This formula determines which WCC teachers are eligible for a specific benefit or process, like a pay raise or bonus, by checking their teaching role, tenure (e.g., minimum 6 months), and employment status. It excludes casual, probationary, or part-time teachers without full hours, ensuring only eligible full-time teachers are selected, and logs the decision for tracking.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "XX_Compensation Currency Selection Formula",
        "FORMULA_TEXT": "INPUTS ARE CMP_IV_ASSIGNMENT_ID (number), CMP_IV_PLAN_ID (number), CMP_IV_PERIOD_ID (number), CMP_IV_COMPONENT_ID (number)\n\n\nDEFAULT FOR CMP_IV_COMPONENT_ID IS 0\nl_curr_code = 'XXX' \nIF (CMP_IV_COMPONENT_ID = 489) THEN \n(\nl_curr_code = 'USD'\n) \nELSE IF (CMP_IV_COMPONENT_ID = 490THEN \n(\nl_curr_code = 'GBP'\n) \nRETURN l_curr_code",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Generate a fast formula to determine the currency code based on a compensation component. If the component ID matches 489, the currency is set to USD. If the component ID matches 490, the currency is set to GBP. If neither condition is met, a default currency code is returned. This formula helps assign the correct currency for compensation components.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection"
    },
    {
        "BASE_FORMULA_NAME": "XX_ Compensation Hierarchy Determination Formula ",
        "FORMULA_TEXT": "INPUTS ARE CMP_IV_ASSIGNMENT_ID (number), CMP_IV_PLAN_ID (number), CMP_IV_PERIOD_ID (number)\n\nDEFAULT FOR CMP_IV_ASSIGNMENT_ID IS 0 \nL_PERSON_ID = '0' L_ASSIGNMENT_ID = '0'\n if (CMP_IV_ASSIGNMENT_ID = 100000008154060 ) THEN \n(\nL_PERSON_ID = to_char(-999) //-999 indicates top level \n//Manager.\nL_ASSIGNMENT_ID = to_char(-999)\n)\nELSE \n(\nL_PERSON_ID = to_char(100000008153756)\nL_ASSIGNMENT_ID = to_char(100000008154060)\n) \n\nRETURN L_PERSON_ID , L_ASSIGNMENT_ID",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Generate a fast formula to determine the reporting hierarchy based on an assignment ID. If the assignment ID matches a predefined value, it is identified as a top-level manager, and both the person and assignment IDs are set to indicate this status. Otherwise, the formula assigns a specific manager's person and assignment IDs. This helps in structuring the compensation approval or reporting hierarchy. The formula returns the identified person and assignment IDs.",
        "FORMULA_TYPE_NAME": "Compensation Hierarchy Determination "
    },
    {
        "BASE_FORMULA_NAME": "XX_ Compensation Default and Override Formula",
        "FORMULA_TEXT": "INPUTS ARE CMP_IV_PLAN_ID (number), CMP_IV_PERIOD_ID (number), CMP_IV_COMPONENT_ID (number), CMP_IV_ITEM_NAME (text)\n\n\n\nDEFAULT FOR CMP_IV_ITEM_NAME IS 'YYYYYYY' \nL_DEFAULT_VALUE = to_char(0) \nIF (CMP_IV_ITEM_NAME = 'AmountComp1') THEN \n(\nL_DEFAULT_VALUE = to_char(3333)\n)\nELSE IF (CMP_IV_ITEM_NAME = 'AmountComp2') THEN \n(\nL_DEFAULT_VALUE = to_char(7777)\n)\nELSE\n(\nL_DEFAULT_VALUE = to_char(-999)\n)\nRETURN L_DEFAULT_VALUE",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Generate a fast formula to default values for a compensation column based on its item name. If the item name matches a specific compensation component, a predefined value is assigned. One component is assigned a value of 3333, while another is assigned 7777. If the item name does not match these, a default value of -999 is set. The formula ensures consistent default values for compensation components.",
        "FORMULA_TYPE_NAME": "Compensation Default and Override"
    },
    {
        "BASE_FORMULA_NAME": "XX_ Compensation Currency Selection Formula",
        "FORMULA_TEXT": "INPUTS ARE CMP_IV_ASSIGNMENT_ID (number), CMP_IV_PLAN_ID (number), CMP_IV_PERIOD_ID (number), CMP_IV_COMPONENT_ID (number)\n\n\nDEFAULT FOR CMP_IV_COMPONENT_ID IS 0\nl_curr_code = 'XXX' \nIF (CMP_IV_COMPONENT_ID = 489) THEN \n(\nl_curr_code = 'USD'\n) \nELSE IF (CMP_IV_COMPONENT_ID = 490THEN \n(\nl_curr_code = 'GBP'\n) \nRETURN l_curr_code",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Generate a fast formula to determine the currency code based on a compensation component. If the component ID is 489, the currency is set to USD. If the component ID is 490, the currency is set to GBP. If neither condition is met, a default currency code is assigned. The formula ensures the correct currency is applied to compensation components.",
        "FORMULA_TYPE_NAME": "Compensation Currency Selection "
    },
    {
        "BASE_FORMULA_NAME": "XX_Total Compensation Simple Item Formula",
        "FORMULA_TEXT": "INPUTS ARE CMP_IV_PERSON_ID (text), CMP_IV_PERIOD_START_DATE (date), CMP_IV_PERIOD_END_DATE (date)\nDEFAULT FOR CMP_IV_PERSON_ID IS '-1'\nDEFAULT FOR CMP_IV_PERIOD_START_DATE IS '4712/12/31' (date)\nDEFAULT FOR CMP_IV_PERIOD_END_DATE IS   '4712/12/31' (date)\n \n\n\nCOMPENSATION_DATES = '2005/01/01'\nVALUES             =  '500.00'\n\nASSIGNMENTS = to_char(get_context(HR_ASSIGNMENT_ID,-1))\n\nRETURN COMPENSATION_DATES, VALUES, ASSIGNMENTS",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Generate a fast formula to return a fixed compensation date, amount, and assignment ID. The date is set to January 1, 2005, and the compensation amount is 500. The assignment ID is retrieved from the system context. This formula provides predefined compensation details for reporting or calculations. It ensures consistency in returning compensation-related data.",
        "FORMULA_TYPE_NAME": "Total Compensation  Item"
    },
    {
        "BASE_FORMULA_NAME": "XX_Total Compensation Multi Item Formula",
        "FORMULA_TEXT": "INPUTS ARE CMP_IV_PERSON_ID (text), CMP_IV_PERIOD_START_DATE (date) , CMP_IV_PERIOD_END_DATE (date)\n\n\n\n\nCOMPENSATION_DATES  = '2009/01/01;2009/02/01;2009/03/01'\nCOMPENSATION_DATES1 = '2009/07/01;2009/08/01;2009/09/01'\nCOMPENSATION_DATES2 = '2009/10/01;2009/11/01;2009/12/01'\nCOMPENSATION_DATES3 = '2009/10/01;2009/11/01;2009/12/01'\n\nVALUES              = '200.00;200.00;300.00'\nVALUES1             = '300.00;500.00;500.00'\nVALUES2             = '500.00;500.00;600.00'\nVALUES3             = '600.00;600.00;700.00'\n\n\nASSIGNMENTS          = ';1234567890;1234567890'\nASSIGNMENTS1         = '1234567890;1234567890;1234567890'\n\n\nASSIGNMENTS2         = ';1234567890;1234567890'\n\nASSIGNMENTS3         = '1234567890;;1234567890'\n\n\nLEGALEMPLOYERS      = '0123456789;;0123456789'\nLEGALEMPLOYERS1     = '0123456789;0123456789;0123456789'\nLEGALEMPLOYERS2     = '0123456789;0123456789;0123456789'\nLEGALEMPLOYERS3     = '0123456789;0123456789'\n\nUNIT      = 'USD'\nUNIT1     = 'EUR'\nUNIT2     = 'AUD'\nUNIT3     = 'CAD'\nRETURN COMPENSATION_DATES,VALUES,COMPENSATION_DATES1,VALUES1,COMPENSATION_DATES2,VALUES2,COMPENSATION_DATES3,VALUES3,ASSIGNMENTS,ASSIGNMENTS1,ASSIGNMENTS2,ASSIGNMENTS3,L\nGALEMPLOYERS,LEGALEMPLOYERS1,LEGALEMPLOYERS2,LEGALEMPLOYERS3,UNIT,UNIT1,UNIT2,UNIT3",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Generate a fast formula to return multiple compensation-related values for different periods. It provides a list of compensation dates, corresponding amounts, assignment IDs, legal employers, and currency units. The formula includes variations of these values across different time frames. It ensures structured compensation reporting across multiple assignments and legal entities. The returned data supports payroll or reporting processes.",
        "FORMULA_TYPE_NAME": "Total Compensation Item"
    },
    {
        "BASE_FORMULA_NAME": "XX_Compensation Selection Formula ",
        "FORMULA_TEXT": "INPUTS ARE CMP_IV_ASSIGNMENT_ID (number), CMP_IV_PLAN_ID (number)\n\n\nDEFAULT FOR CMP_IV_ASSIGNMENT_ID IS 0 \nl_selected = 'Y'\n\nif (CMP_IV_ASSIGNMENT_ID = 100000008154095) THEN \n(\nl_selected = 'N'\n) \nelse \n(\nl_selected = 'Y'\n) \nRETURN l_selected",
        "LEGISLATIVE_DATA_GROUP": "",
        "Description": "Generate a fast formula to determine if an assignment is selected for compensation processing. By default, the assignment is marked as selected. If the assignment ID matches a specific value, it is excluded. Otherwise, it remains selected. This formula helps filter out specific assignments from compensation plans.",
        "FORMULA_TYPE_NAME": "Compensation Person Selection "
    }
]