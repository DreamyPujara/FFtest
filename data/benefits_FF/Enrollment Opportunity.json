[
    {
        "BASE_FORMULA_NAME": "XX_ENROLLMENT_OPPORTUNITY",
        "FORMULA_TEXT": "DEFAULT FOR BEN_LER_NAME is 'ABC'\nDEFAULT FOR BEN_PLN_NAME is 'XYZ'\nDEFAULT FOR BEN_OPT_NAME is 'XYZ'\nl_enrt_opp = 'A'\nl_ler_name = BEN_LER_NAME\nl_pl_name = BEN_PLN_NAME\nl_opt_name = BEN_OPT_NAME\nIf ( l_pl_name = 'Aetna Medical'\nand ( l_opt_name = 'Domestic Partner' or l_opt_name = 'Domestic Partner + one')\nand ( l_ler_name = 'Open' or l_ler_name = 'New Hire' ) ) then\n( l_enrt_opp = 'N' )\nIf ( l_pl_name = 'Be Healthy HMO'\nand ( l_opt_name = 'Employee + family' or l_opt_name = 'Employee + spouse')\nand ( l_ler_name <> 'Open' ) ) then\n(l_enrt_opp = 'A' )\nReturn l_enrt_opp",
        "LEGISLATIVE_DATA_GROUP": "XX",
        "Description": "This formula determines the enrollment opportunity status (l_enrt_opp) based on the plan name, option name, and life event reason.",
        "FORMULA_TYPE_NAME": "Enrollment Opportunity"
    },
    {
        "BASE_FORMULA_NAME": "XX_ENROLLMENT_OPPORTUNITY",
        "FORMULA_TEXT": "DEFAULT FOR BEN_PLN_NAME is 'Default'\nDEFAULT FOR BEN_LER_NAME is 'Default'\nl_return='N'\nl_med_wv='N'\nl_pt2_p1='N'\nl_pt2_p1_opt1='N'\nl_pt2_p1_opt2='N'\nl_pt2_p1_opt3='N'\nl_pt2_p2='N'\nl_pt2_p2_opt1='N'\nl_pt2_p2_opt2='N'\nl_pt2_p2_opt3='N'\nl_pt2_p2='N'\n/* Below is a function which returns Y if there is an enrollment */\nl_med_wv=ben_fn_get_char_value(\n'BEN_PRTT_ENRT_RSLT'\n,'ENROLLED'\n,'SO_CHANGE_PT2_PLAN_3_WAIVE'\n,'NA'\n)\nif (BEN_PLN_NAME='SO_CHANGE_PT2_PLAN_1') then (\nl_pt2_p1_opt1=ben_fn_get_char_value(\n'BEN_PRTT_ENRT_RSLT'\n,'ENROLLED'\n,'SO_CHANGE_PT2_PLAN_1'\n,'SO_CHANGE_PT2_PLAN_1_OPT_1'\n)\nl_pt2_p1_opt2=ben_fn_get_char_value(\n'BEN_PRTT_ENRT_RSLT'\n,'ENROLLED'\n,'SO_CHANGE_PT2_PLAN_1'\n,'SO_CHANGE_PT2_PLAN_1_OPT_2'\n)\nl_pt2_p1_opt3=ben_fn_get_char_value(\n'BEN_PRTT_ENRT_RSLT'\n,'ENROLLED'\n,'SO_CHANGE_PT2_PLAN_1'\n,'SO_CHANGE_PT2_PLAN_1_OPT_3'\n)\n) /* end if for SO_CHANGE_PT2_PLAN_1 */\nif (l_pt2_p1_opt1='Y' or l_pt2_p1_opt2='Y' or l_pt2_p1_opt3='Y') then (l_pt2_p1='Y')\n58 Oracle Benefits Fast Formula Reference Guide / Version 1.6\nCopyright \u00a9 2021, Oracle and/or its affiliates / Public\nif (BEN_PLN_NAME='SO_CHANGE_PT2_PLAN_2') then (\nl_pt2_p2_opt1=ben_fn_get_char_value(\n'BEN_PRTT_ENRT_RSLT'\n,'ENROLLED'\n,'SO_CHANGE_PT2_PLAN_2'\n,'SO_CHANGE_PT2_PLAN_2_OPT_1'\n)\nl_pt2_p2_opt2=ben_fn_get_char_value(\n'BEN_PRTT_ENRT_RSLT'\n,'ENROLLED'\n,'SO_CHANGE_PT2_PLAN_2'\n,'SO_CHANGE_PT2_PLAN_2_OPT_2'\n)\nl_pt2_p2_opt3=ben_fn_get_char_value(\n'BEN_PRTT_ENRT_RSLT'\n,'ENROLLED'\n,'SO_CHANGE_PT2_PLAN_2'\n,'SO_CHANGE_PT2_PLAN_2_OPT_3'\n)\n) /*end if SO_CHANGE_PT2_PLAN_2 */\nif (l_pt2_p2_opt1='Y' or l_pt2_p2_opt2='Y' or l_pt2_p2_opt3='Y') then (l_pt2_p2='Y')\nif (l_med_wv='Y') then\n(\nl_return='Y'\n)\nelse if ( (l_med_wv='N') and (BEN_LER_NAME='SO_MARRIAGE_1') ) then\n(\nif ( (BEN_PLN_NAME='SO_CHANGE_PT2_PLAN_1') and (l_pt2_p1='Y') ) then (l_return='Y')\nif ( (BEN_PLN_NAME='SO_CHANGE_PT2_PLAN_2') and (l_pt2_p2='Y') ) then (l_return='Y')\n) /*end else if */\nreturn l_return",
        "LEGISLATIVE_DATA_GROUP": "XX",
        "Description": "This formula checks whether an individual qualifies for a benefit enrollment based on their plan selection, enrollment status, and life event reason.",
        "FORMULA_TYPE_NAME": "Enrollment Opportunity"
    },
    {
        "BASE_FORMULA_NAME": "XX_ENROLLMENT_OPPORTUNITY",
        "FORMULA_TEXT": "DEFAULT FOR PER_PER_LATEST_REHIRE_DATE is '1951/01/01 00:00:00' (date)\nDEFAULT FOR PER_PER_LATEST_TERMINATION_DATE is '1951/01/01 00:00:00' (date)\nDEFAULT_DATA_VALUE FOR PER_HIST_ASG_ASSIGNMENT_ID is 99\nDEFAULT_DATA_VALUE FOR PER_HIST_ASG_EFFECTIVE_START_DATE is '1951/01/01 00:00:00' (date)\nDEFAULT_DATA_VALUE FOR PER_HIST_ASG_EFFECTIVE_END_DATE is '1951/01/01 00:00:00' (date)\nDEFAULT_DATA_VALUE FOR PER_HIST_ASG_ASSIGNMENT_TYPE is 'NA'\nDEFAULT_DATA_VALUE FOR PER_HIST_ASG_STATUS_TYPE is 'NA'\nDEFAULT_DATA_VALUE FOR PER_HIST_ASG_EFFECTIVE_LATEST_CHANGE is 'NA'\n/* if the person is a first time hire, the PER_PER_LATEST_REHIRE_DATE will return the hire date */\nl_hire_dt = PER_PER_LATEST_REHIRE_DATE\nl_term_dt = PER_PER_LATEST_TERMINATION_DATE\nl_prev_asg_id=9999\nl_enrt_opportunity = 'N'\nif PER_PER_LATEST_TERMINATION_DATE was not defaulted then\n(\nif l_hire_dt < add_days(l_term_dt,30)\nthen\n(\n/* person is rehired within 30 days */\n/* get the assignment_id */\nl_prev_asg_dt = add_days(l_term_dt,-1)\ni=1\nwhile ( PER_HIST_ASG_ASSIGNMENT_ID.exists(i) ) loop\n(\nif ( (PER_HIST_ASG_EFFECTIVE_START_DATE[i] < l_prev_asg_dt)\nAND (PER_HIST_ASG_EFFECTIVE_END_DATE[i] >= l_prev_asg_dt)\nAND (PER_HIST_ASG_ASSIGNMENT_TYPE[i] = 'ET')\nAND (PER_HIST_ASG_STATUS_TYPE[i] = 'ACTIVE')\nAND (PER_HIST_ASG_EFFECTIVE_LATEST_CHANGE[i] = 'Y' )\n)\nthen\n(\nl_prev_asg_id = PER_HIST_ASG_ASSIGNMENT_ID[i]\n) /* end if */\ni=i+1\n) /* end while */\n/* check if the person is enrolled in any of the medical plan */\nCHANGE_CONTEXTS(HR_ASSIGNMENT_ID=l_prev_asg_id, EFFECTIVE_DATE=l_prev_asg_dt)\n(\nl_med_enroll = ben_fn_get_char_value(\n'BEN_PRTT_ENRT_RSLT'\n,'ENROLLED'\n,'Healthy HMO'\n,'NA'\n)\nif (l_med_enroll = 'Y') then\n(\nl_enrt_opportunity = 'Y'\n)\n) /* end change contexts */\n) /* < 30 days */\n) /* end not defaulted */\nreturn l_enrt_opportunity",
        "LEGISLATIVE_DATA_GROUP": "XX",
        "Description": "This formula checks if a rehired employee is eligible for **continued medical enrollment**. If the employee was **terminated and rehired within 30 days**, it identifies their **previous active assignment** before termination. It then checks if the employee was **enrolled in the \"Healthy HMO\" medical plan** at that time. If they were enrolled, they are granted an **enrollment opportunity**; otherwise, they are not.",
        "FORMULA_TYPE_NAME": "Enrollment Opportunity"
    },
    {
        "BASE_FORMULA_NAME": "XX_ENROLLMENT_OPPORTUNITY",
        "FORMULA_TEXT": "DEFAULT FOR BEN_LER_NAME is 'NA'\nDEFAULT FOR BEN_PLN_NAME is 'NA'\nDEFAULT FOR BEN_OPT_NAME is 'NA'\nl_opp = 'N'\nl_flag = ben_fn_get_char_value('BEN_PRTT_ENRT_RSLT','ENROLLED',BEN_PLN_NAME,BEN_OPT_NAME)\nIF ( l_flag = 'Y') then\n(\nl_opp = 'Y'\n)\nreturn l_opp",
        "LEGISLATIVE_DATA_GROUP": "XX",
        "Description": "This formula checks if an employee is **enrolled in a specific benefit plan and option**. It retrieves the **enrollment status** for the given plan and option. If the person is **enrolled ('Y')**, they are granted an **enrollment opportunity ('Y')**; otherwise, they are **not eligible ('N')**.",
        "FORMULA_TYPE_NAME": "Enrollment Opportunity"
    }
]